{"version":3,"sources":["pen.svg","components/Canvas.jsx","URL.js","api.js","components/NavBar.jsx","components/Drawing.jsx","components/Auth.jsx","components/Present.js","components/HomePage.jsx","components/NewAdder.jsx","components/DrawingList.jsx","components/DashBoard.jsx","Reducer/authReducer.js","Reducer/drawingReducer.js","Reducer/index.js","Reducer/store.js","db.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Canvas","state","lastLength","handleOnMouseDown","e","props","drawingEnabled","rect","node","getBoundingClientRect","ctx","beginPath","lastX","clientX","left","lastY","clientY","top","drawing","handleOnMouseMove","currentX","currentY","draw","update","onDraw","from","x","y","to","brushColor","linewidth","lineWidth","handleonMouseUp","handleOnTouchDown","a","touches","preventDefault","handleOnTouchMove","handleOnTouchUp","canvas","this","addEventListener","style","width","height","offsetWidth","offsetHeight","getContext","nextProps","lines","length","i","l","setState","stroke","lX","lY","cX","cY","strokeStyle","moveTo","lineTo","ref","canvasStyle","onMouseDown","onMouseMove","onMouseUp","Component","defaultProps","backgroundColor","cursor","URL","_key","atob","localStorage","getItem","socket","openSocket","subscribeForDrawingsList","cb","on","emit","key","createDrawing","name","user","NavBar","title","btn","color","background","className","map","log","console","Drawing","handleDraw","line","publishLine","drawingId","info","isFound","id","window","location","href","split","pop","axios","post","then","data","success","document","lineEvt","prev","Rx","Observable","fromEventPattern","h","off","bufferTime","subscribe","subscribeForPublishLine","Auth","email","password","type","setItem","btoa","pathname","alert","message","maxWidth","padding","margin","onSubmit","src","pen","alt","onChange","target","value","placeholder","required","autoFocus","onClick","auth","React","memo","scale","rotateX","rotateY","z","rotateZ","HomePage","useState","setL","NewAdder","onBlur","onSave","onClose","DrawingList","drawings","temp","redirect","query","isNew","isAuth","status","list","getAllList","deleteDrawing","k","_id","Date","timestamp","toLocaleString","drawingList","DrawingElement","open","Promise","res","rej","filter","d","toLowerCase","indexOf","DashBoard","initalState","authReducer","action","initState","drawingReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","App","selectDrawing","selectedDrawing","db","getState","exact","path","render","match","params","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fcf1d10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.d2648682.svg\";","import React, { Component } from \"react\";\r\nclass Canvas extends Component {\r\n  state = {\r\n    lastLength: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.node;\r\n    canvas.addEventListener(\"touchstart\", this.handleOnTouchDown, false);\r\n    canvas.addEventListener(\"touchmove\", this.handleOnTouchMove, false);\r\n    canvas.addEventListener(\"touchend\", this.handleOnTouchUp, false);\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100%\";\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //   log({nextProps})\r\n    //todo: find a better way to see if a coordinate has been applied\r\n    if (nextProps.lines && nextProps.lines.length > this.state.lastLength) {\r\n      for (let i = this.state.lastLength; i < nextProps.lines.length; i += 1) {\r\n        // console.log('looping through lines ', i);\r\n        const l = nextProps.lines[i];\r\n        this.draw(l.from.x, l.from.y, l.to.x, l.to.y);\r\n      }\r\n\r\n      this.update();\r\n\r\n      this.setState({\r\n        lastLength: nextProps.lines.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    this.ctx.strokeStyle = this.props.brushColor;\r\n    this.ctx.lineWidth = this.props.lineWidth;\r\n    this.ctx.moveTo(lX, lY);\r\n    this.ctx.lineTo(cX, cY);\r\n  }\r\n\r\n  handleOnMouseDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n    this.drawing = true;\r\n  };\r\n\r\n  handleOnMouseMove = (e) => {\r\n    if (this.drawing) {\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n  };\r\n\r\n  handleonMouseUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  handleOnTouchDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n    const {\r\n      touches: [a],\r\n    } = e;\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = a.clientX - rect.left;\r\n    this.lastY = a.clientY - rect.top;\r\n    this.drawing = true;\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnTouchMove = (e) => {\r\n    if (this.drawing) {\r\n      const {\r\n        touches: [a],\r\n      } = e;\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = a.clientX - rect.left;\r\n      const currentY = a.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  handleOnTouchUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={(node) => (this.node = node)}\r\n        style={this.props.canvasStyle}\r\n        onMouseDown={this.handleOnMouseDown}\r\n        onMouseMove={this.handleOnMouseMove}\r\n        onMouseUp={this.handleonMouseUp}\r\n\r\n        // onTouchStart={this.handleOnTouchDown}\r\n        // onTouchMove={this.handleOnMouseMove}\r\n        // onTouchEnd={this.handleonMouseUp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCanvas.defaultProps = {\r\n  brushColor: \"#000000\",\r\n  lineWidth: 2,\r\n  canvasStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n  },\r\n  drawingEnabled: false,\r\n  lines: [],\r\n};\r\n\r\nexport default Canvas;\r\n","const URL = \"https://chitraBackend.gultion.repl.co\";\r\n// const URL = \"http://localhost:3001\"\r\n\r\nexport default URL;\r\n","import openSocket from \"socket.io-client\";\r\nimport Rx from \"rxjs/Rx\";\r\nimport URL from \"./URL\";\r\nimport axios from \"axios\";\r\n\r\nconst _key = atob(localStorage.getItem(\"id\"));\r\nconst socket = openSocket(URL);\r\n\r\n// const subscribeForDrawings = (cb) => {\r\n\r\n//     socket.on(`drawing:${_key}`, drawing => cb(drawing));\r\n//     socket.emit('subscribeForDrawings',{key:_key});\r\n// }\r\n\r\nconst subscribeForDrawingsList = (cb) => {\r\n  socket.on(\"drawingList\", (drawing) => cb(drawing));\r\n  socket.emit(\"subscribeForDrawingList\", { key: _key });\r\n};\r\n\r\nconst createDrawing = async ({ name, key }) => {\r\n  await socket.emit(\"createDrawing\", { name, key: key, user: _key });\r\n};\r\n\r\nconst publishLine = (line) => {\r\n  socket.emit(\"publishLine\", line);\r\n};\r\n\r\nconst subscribeForPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawing:${drawingId}`, h),\r\n    (h) => socket.off(`drawing:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForPublishLine\", drawingId);\r\n};\r\n\r\nconst subscribeForAllPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawingAll:${drawingId}`, h),\r\n    (h) => socket.off(`drawingAll:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForAllPublishLine\", drawingId);\r\n};\r\n\r\nconst getDrawingById = (id, cb) => {\r\n  socket.on(\"takeDrawing\", (info) => cb(info));\r\n  socket.emit(\"getDrawingById\", id);\r\n};\r\n\r\nconst deleteDrawing = (id, cb) => {\r\n  axios.post(URL + \"/drawing/delete\", { id, key: _key }).then((e) => {\r\n    // log(e);\r\n    cb(e);\r\n  });\r\n};\r\n\r\nexport {\r\n  // subscribeForDrawings,\r\n  createDrawing,\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  getDrawingById,\r\n  subscribeForDrawingsList,\r\n  subscribeForAllPublishLine,\r\n  deleteDrawing,\r\n};\r\n","\r\nimport React from \"react\";\r\nconst NavBar = ({ title, btn, color }) => {\r\n  return (\r\n    <div\r\n      style={{ background: color && \"none\" }}\r\n      className=\"NavBar d-flex align-items-center justify-content-around p-1\"\r\n    >\r\n      <h1 className=\"text-light display-3 float-left\">{title}</h1>\r\n      <div className=\"d-flex align-items-center justify-content-around p-1\">\r\n        {btn?.map((e) => {\r\n          return e;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component} from \"react\";\r\nimport Canvas from \"./Canvas\";\r\nimport {\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  subscribeForAllPublishLine,\r\n} from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./core.css\";\r\n\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst { log } = console;\r\nexport default class Drawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lines: [],\r\n      info: { name: \"\" },\r\n      brushColor: \"black\",\r\n      name: \"Loading....\",\r\n      isFound: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // log(this.props)\r\n    const id = window.location.href.split(\"/\").pop();\r\n    log(id);\r\n    axios.post(`${URL}/drawing/get`, { id }).then((e) => {\r\n      const { data } = e;\r\n      log(data);\r\n      if (data.success) {\r\n        this.setState({ isFound: true, name: data.name });\r\n        // log(data)\r\n        document.title = `${data.name} - Chitr`;\r\n      } else {\r\n        this.setState({ name: \"NOT FOUND\" });\r\n      }\r\n    });\r\n\r\n    subscribeForAllPublishLine(this.props.drawingId, (lineEvt) => {\r\n      // log(lineEvt)\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n\r\n    subscribeForPublishLine(this.props.drawingId, (lineEvt) => {\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleDraw = (line) => {\r\n    // log(line)\r\n    publishLine({ drawingId: this.props.drawingId, ...line });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <h1>{this.state.name}</h1> */}\r\n        {NavBar({\r\n          title: this.state.name,\r\n          btn: [\r\n            <Link to=\"/dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>,\r\n          ],\r\n        })}\r\n        {this.state.isFound ? (\r\n          <div className=\"Drawing\">\r\n            {/* <ColorBox onClick={color=>{this.setState({brushColor:color})}}/> */}\r\n            <Canvas\r\n              brushColor={this.state.brushColor}\r\n              onDraw={this.handleDraw}\r\n              drawingEnabled={true}\r\n              lines={this.state.lines}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Canvas.defaultProps = {\r\n//     brushColor: '#000000',\r\n//     lineWidth: 2,\r\n//     canvasStyle: {\r\n//       backgroundColor: '#FFFFFF',\r\n//       cursor: 'pointer'\r\n//     },\r\n//     drawingEnabled: false,\r\n//     lines: []\r\n//   };\r\n","import React, { Component } from \"react\";\r\nimport pen from \"../pen.svg\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport URL from \"../URL\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./core.css\";\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: false\r\n    };\r\n  }\r\n  auth(type) {\r\n    // type : ['signin', 'signup']\r\n    const { email, password } = this.state;\r\n    axios.post(`${URL}/auth/${type}`, { email, password }).then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        localStorage.setItem(\"id\", btoa(data.id))\r\n        // this.setState({ success: true });\r\n        window.location.pathname = '/dashboard'\r\n        // console.log(data)\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth h-100\">\r\n        {NavBar({ title: \"Auth Page\", btn: [], color: true })}\r\n        <div className=\"container-fluid d-flex align-items-center\">\r\n          {this.state.success && <Redirect to=\"/dashboard\" />}\r\n          <form\r\n            className=\"from\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"330px\",\r\n              padding: \"15px\",\r\n              margin: \"auto\"\r\n            }}\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <img className=\"mb-4\" src={pen} alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal text-light\">\r\n              Please sign in/up\r\n            </h1>\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signin\")}\r\n              className=\"btn btn-lg btn-primary btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signup\")}\r\n              className=\"btn btn-lg btn-info btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            {/* <p classNameName=\"mt-5 mb-3 text-muted\">© 2017-2018</p> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Impress, Step } from \"react-impressjs\";\r\n\r\nexport default React.memo(function Present() {\r\n  return (\r\n    <div className=\"Present\">\r\n      <Impress>\r\n        <Step data={{ x: 0, y: 0 }}>\r\n          <h1 className=\"_1\">What is Chitr?\r\n          <h1>Drawing Collaboration Tool for RealTime Drawing! ✏</h1>\r\n          </h1>\r\n         \r\n        </Step>\r\n        <Step data={{ y: 1000, scale: 3 }}>\r\n          <h1 className=\"_2 \">Which Technology is used ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n          <h1>{\"=>\"} Mongo Express React Node - MERN</h1>\r\n          <h1>{\"=>\"} Socket.io - for Bidirectional communication between Server and Client</h1>\r\n          <h1>{\"=>\"} Impressjs - for this Presentation</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 1000, y: -1000, scale: 5, rotateX: 90, rotateY: 45 }}>\r\n          <h1 className=\"_1\">\r\n            What are the Features ?\r\n            <h1>{\"=>\"} Two or More user can draw at same time !</h1>\r\n            <h1>{\"=>\"} Use Very less Internet for  transferring the Data !</h1>\r\n            <h1>{\"=>\"} User Can Save as many drawings as user want !</h1>\r\n            <h1>{\"=>\"} Can Share Drawing to anyone to see and draw !</h1>\r\n          </h1>\r\n        </Step>\r\n        <Step data={{ x: 3000, y: 3000, scale: 1,z:1000, rotateX: 90, rotateY: -45,rotateZ:45}}>\r\n          <h1 className=\"_2\">Requirements</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Server for backend hosting - replit.com</h1>\r\n            <h1>{\"=>\"} DataBase for Save the Drawing and user auth - mongodb</h1>\r\n            <h1>{\"=>\"} Server for frontend hosting - github pages</h1>\r\n            <h1>{\"=>\"} Domain for website - name.com</h1>\r\n            <h1>{\"=>\"} Needs Lot of Time and Peace Mind!</h1>\r\n          </h1>\r\n        </Step>\r\n        <Step data={{x: 5000, y: 3000, scale: 2,rotateX: 90, rotateY: 0, rotateZ:180 }}>\r\n          <h1 className=\"_2\">How it Works? - (Logic)</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h2>\r\n            {\"=>\"}let, we have 2 users A and B! \r\n            </h2>\r\n            <h2>\r\n            {\"=>\"}When user A tries to draw then a Packet[coordination of line] is thrown to the server using socket. \r\n            </h2>\r\n            <h2>\r\n            {\"=>\"}After receiving the Packet , Server saves it and throws the Packet to all the connected drawings of the users using socket\r\n            </h2>\r\n            <h2>\r\n            {\"=>\"}After receiving the Packet at the client side or say user B , client re-renders it and canvas shows that a line is being drawn\r\n            </h2>\r\n          </h1>\r\n        </Step>\r\n        <Step data={{x: 5000, y: 1000,z:1000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:180 }}>\r\n          <h1 className=\"_2\"> Source Code</h1>\r\n           \r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraFront\">GulTion/chitraFront - Front End</a></h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraBackend\">GulTion/chitraBackend - Back End</a></h1>\r\n          \r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:2000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:90 }}>\r\n            <h1 className=\"_2\">Work done by</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Designer - Gulshan</h1>\r\n          <h1>FrontEnd Developer - Gulshan</h1>\r\n          <h1>BackEnd Developer - Gulshan</h1>\r\n          </h1>\r\n          \r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:3000, scale: 1,rotateX: 180, rotateY: 180, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Let's GO</h1>\r\n\r\n          \r\n          \r\n        </Step>\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Impress>\r\n    </div>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./HomePage.css\";\r\nimport Present from \"./Present\";\r\n\r\nconst HomePage = () => {\r\n  const [l, setL] = useState(false);\r\n\r\n  axios\r\n    .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n    .then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        setL(true);\r\n      } else {\r\n        setL(false);\r\n      }\r\n    });\r\n  document.title = \"Chitr\";\r\n  return (\r\n    <div className={\"HomePage\"}>\r\n      {NavBar({\r\n        title: \"Chitr\",\r\n        btn: [\r\n          !l ? (\r\n            <Link to=\"auth\" className=\"btn\">\r\n              Log In\r\n            </Link>\r\n          ) : (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                localStorage.setItem(\"id\", \"\");\r\n                setL(false);\r\n              }}\r\n            >\r\n              Log Out\r\n            </button>\r\n          ),\r\n          l && (\r\n            <Link to=\"dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>\r\n          ),\r\n        ],\r\n      })}\r\n      <Present />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewAdder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center NewAdder\">\r\n        <input\r\n          onBlur={(e) => this.setState({ value: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Enter Drawing Name\"\r\n        />\r\n        <div\r\n          className=\"btn btn-primary\"\r\n          onClick={(e) => {\r\n            this.props.onSave(this.state.value);\r\n            this.props.onClose();\r\n            this.setState({ value: \"\" });\r\n          }}\r\n        >\r\n          SAVE\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  subscribeForDrawingsList,\r\n  createDrawing,\r\n  deleteDrawing,\r\n} from \"../api\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport \"./core.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport NewAdder from \"./NewAdder\";\r\n\r\nconst { log } = console;\r\nexport default class DrawingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawings: [],\r\n      temp: [],\r\n      key: \"\",\r\n      redirect: false,\r\n      query: \"\",\r\n      name: \"\",\r\n      isNew: false,\r\n      isAuth: true,\r\n      status: \"Loading ...\",\r\n    };\r\n  }\r\n\r\n  getDrawing() {\r\n    subscribeForDrawingsList((drawing) => {\r\n      log(\"getDrawing is running\");\r\n      this.setState((prev) => ({\r\n        drawings: drawing,\r\n        temp: drawing,\r\n        status: \"No Drawing Found !\",\r\n      }));\r\n    });\r\n  }\r\n  getAllList() {\r\n    axios\r\n      .post(`${URL}/drawing/all`, { id: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        log(e);\r\n        const {\r\n          data: { list },\r\n        } = e;\r\n        document.title = `${list.length} Drawings`;\r\n        this.setState((prev) => ({\r\n          drawings: list,\r\n          temp: list,\r\n          status: \"No Drawing Found !\",\r\n        }));\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // subscribeForDrawings((drawing) => {     log('drawing is added') log(drawing)\r\n    //    if(drawing.operationType==\"insert\"){ this.setState(prev => ({\r\n    // drawings: [drawing.fullDocument, ...prev.drawings]     }))     }\r\n    // if(drawing.operationType==\"delete\"){    this.setState(prev => ({\r\n    // drawings: prev.drawings.filter(e=>e._id!==drawing.documentKey._id)\r\n    // }))     } });\r\n  }\r\n  componentWillMount() {\r\n    axios\r\n      .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        const { data } = e;\r\n        if (data.success) {\r\n          this.getAllList();\r\n        } else {\r\n          this.setState({ isAuth: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteDrawing({ id }) {\r\n    deleteDrawing(id, (k) => {\r\n      log(k);\r\n      this.getAllList();\r\n    });\r\n  }\r\n  DrawingElement({ drawing }) {\r\n    // const [show, setShow] = useState(true)\r\n    return (\r\n      <div className=\"drawingCard card m-1 w-auto shadow-sm \" key={drawing._id}>\r\n        {this.state.redirect && <Redirect to=\"/auth\" />}\r\n        <div className=\"card-body \">\r\n          <h5 className=\"card-title\">{drawing.name}</h5>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n\r\n        \r\n          <Link\r\n            className=\"card-text btn btn-info text-light\"\r\n            to={`/drawings/${drawing._id}`}\r\n          >\r\n            {\"Draw\"}\r\n          </Link>\r\n          <button\r\n            onClick={(e) => this.deleteDrawing({ id: drawing._id })}\r\n            className=\"btn btn-danger mx-1\"\r\n          >\r\n            DELETE\r\n          </button>\r\n          </div>\r\n        </div>\r\n        {/* <h6 className=\"card-footer text-dimmed\" onClick={()=>alert(drawing.key)}>\r\n           show key\r\n          </h6> */}\r\n        <h6 className=\"card-footer text-dimmed\">\r\n          {new Date(drawing.timestamp).toLocaleString()}\r\n        </h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const drawingList = this.state.temp.map((drawing) =>\r\n      this.DrawingElement({ drawing, getAllList: this.getAllList })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {NavBar({\r\n          title: \"DashBoard\",\r\n          btn: [\r\n            <Link to=\"/\" className=\"btn\">\r\n              {\"< Back\"}\r\n            </Link>,\r\n            <div\r\n              className={\"btn\"}\r\n              onClick={async () => {\r\n                this.setState({ isNew: true });\r\n                // let name = prompt(\"Enter the Drawing Name: \");\r\n                // let key = prompt(\"Enter the Drawing Name (leave blank for public): \");\r\n                // await new Promise((res,rej)=>{\r\n                //   createDrawing({name,key});\r\n                //   res()\r\n                // })\r\n                // await this.getAllList();\r\n              }}\r\n            >\r\n              + NEW\r\n            </div>,\r\n          ],\r\n          color: true,\r\n        })}\r\n        <Popup\r\n          onClose={() => this.setState({ isNew: false })}\r\n          open={this.state.isNew}\r\n        >\r\n          <NewAdder\r\n            onClose={() => this.setState({ isNew: false })}\r\n            onSave={async (name) => {\r\n              await new Promise((res, rej) => {\r\n                createDrawing({ name, key: \"\" });\r\n                res();\r\n              });\r\n              await this.getAllList();\r\n            }}\r\n          />\r\n        </Popup>\r\n        <div>\r\n          {this.state.isAuth ? null : <Redirect to=\"/auth\" />}\r\n\r\n          {/* {this.state.isNew && (\r\n          <div className=\"row m-1\">\r\n            <div className=\"col\">\r\n              <div className=\"form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingInputGrid\"\r\n                  placeholder=\"NAME\"\r\n                  value={this.state.name}\r\n                  onChange={(e) => {\r\n                    const { value } = e.target;\r\n                    this.setState({ name: value });\r\n                  }}\r\n                />\r\n                <label for=\"floatingInputGrid\">New Drawing Name</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )} */}\r\n\r\n          <div className=\"container mb-2 form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"floatingInputGrid\"\r\n              placeholder=\"Search\"\r\n              value={this.state.query}\r\n              onChange={(e) => {\r\n                const { value } = e.target;\r\n                this.setState({\r\n                  query: value,\r\n                  temp: this.state.drawings.filter(\r\n                    (d) => d.name.toLowerCase().indexOf(value) !== -1\r\n                  ),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-wrap container justify-content-center DrawingList\">\r\n            {drawingList.length ? (\r\n              drawingList\r\n            ) : (\r\n              <h1 className=\"text-white\">{this.state.status}</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DrawingList from \"./DrawingList\";\r\nimport \"./core.css\";\r\n\r\n\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"DashBoard container-fluid\">\r\n        <DrawingList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","const initalState = {\r\n    key:\"\"\r\n}\r\nconst authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n      default: return state;\r\n    }\r\n\r\n}\r\n\r\n  export default authReducer","import {subscribeForDrawingsList} from \"../api\"\r\n\r\nconst {log} = console\r\n\r\nconst initState = {\r\n    list:[]\r\n\r\n}\r\n\r\nconst drawingReducer = (state=initState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'GET_DRAWING_LIST':\r\n            return new Promise((res, rej)=>{\r\n                subscribeForDrawingsList((drawing) => {\r\n                    log('GET_DRAWING_LIST '+drawing.length);\r\n                    log(state.list)\r\n                   res( {...state, list:drawing})\r\n                    \r\n                })\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drawingReducer","import {combineReducers} from \"redux\"\r\nimport auth from \"./authReducer\"\r\nimport drawing from \"./drawingReducer\"\r\n\r\nexport default combineReducers({auth,drawing})","import {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./index\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default store;","export default {\r\n    TITLE:\"LineDraw\"\r\n}","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nimport Drawing from \"./components/Drawing\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport DashBoard from \"./components/DashBoard\";\r\n\r\nimport store from \"./Reducer/store\";\r\n\r\nimport db from \"./db\";\r\n\r\nconst { log } = console;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDrawing: { id: \"\", name: \"\" },\r\n      title: db.TITLE,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ title: db.TITLE });\r\n    log(store.getState());\r\n  }\r\n\r\n  selectDrawing = (drawing) => {\r\n    this.setState({ selectedDrawing: drawing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <DashBoard />\r\n            </Route>\r\n            <Route path=\"/auth\">\r\n              <Auth />\r\n            </Route>\r\n\r\n            <Route\r\n              path=\"/drawings/:drawingId\"\r\n              render={(e) => {\r\n                return (\r\n                  <>\r\n                    {/* <h1>{this.state.selectedDrawing.name}</h1> */}\r\n                    <Drawing\r\n                      drawingId={e.match.params.drawingId}\r\n                      drawing={this.state.selectedDrawing}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            ></Route>\r\n\r\n            {/* <Route\r\n              path=\"/new/drawings/:drawingId\"\r\n              render={(e) => (\r\n                <ExcaliDraw drawingId={e.match.params.drawingId} />\r\n              )}\r\n            ></Route> */}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}