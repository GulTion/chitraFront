{"version":3,"sources":["pen.svg","URL.js","api.js","components/DrawingForm.jsx","components/NavBar.jsx","components/NewAdder.jsx","components/DrawingList.jsx","components/Canvas.jsx","components/Drawing.jsx","Reducer/authReducer.js","Reducer/drawingReducer.js","Reducer/index.js","Reducer/store.js","components/Auth.jsx","components/Present.js","components/HomePage.jsx","components/DashBoard.jsx","components/ExcaliDraw.jsx","db.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","_key","console","log","atob","localStorage","getItem","socket","openSocket","subscribeForDrawingsList","cb","on","drawing","emit","key","createDrawing","a","name","user","Component","NavBar","title","btn","color","style","background","className","map","e","NewAdder","state","value","onBlur","setState","target","type","placeholder","onClick","props","onSave","onClose","DrawingList","drawings","temp","redirect","query","isNew","isAuth","status","prev","axios","post","id","then","list","data","document","length","success","getAllList","deleteDrawing","k","_id","this","to","Date","timestamp","toLocaleString","drawingList","DrawingElement","open","Promise","res","rej","onChange","filter","d","toLowerCase","indexOf","Canvas","lastLength","handleOnMouseDown","drawingEnabled","rect","node","getBoundingClientRect","ctx","beginPath","lastX","clientX","left","lastY","clientY","top","handleOnMouseMove","currentX","currentY","draw","update","onDraw","from","x","y","brushColor","linewidth","lineWidth","handleonMouseUp","handleOnTouchDown","touches","preventDefault","handleOnTouchMove","handleOnTouchUp","canvas","addEventListener","width","height","offsetWidth","offsetHeight","getContext","nextProps","lines","i","l","stroke","lX","lY","cX","cY","strokeStyle","moveTo","lineTo","ref","canvasStyle","onMouseDown","onMouseMove","onMouseUp","defaultProps","backgroundColor","cursor","Drawing","table","handleDraw","line","publishLine","drawingId","info","isFound","window","location","href","split","pop","lineEvt","Rx","Observable","fromEventPattern","h","off","bufferTime","subscribe","subscribeForPublishLine","initalState","authReducer","action","initState","drawingReducer","combineReducers","auth","store","createStore","rootReducer","applyMiddleware","thunk","Auth","email","password","setItem","btoa","alert","message","maxWidth","padding","margin","onSubmit","src","pen","alt","required","autoFocus","React","memo","scale","rotateX","rotateY","HomePage","useState","setL","DashBoard","ExcaliDraw","excalidrawRef","useRef","viewModeEnabled","zenModeEnabled","gridModeEnabled","theme","drawingName","setName","useEffect","initialData","onCollabButtonClick","onPointerUpdate","pay","UIOptions","canvasActions","loadScene","App","selectDrawing","selectedDrawing","db","getState","exact","path","render","match","params","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.abfe85d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.d2648682.svg\";","const URL = \"https://chitraBackend.gultion.repl.co\";\r\n// const URL = \"http://localhost:3001\"\r\n\r\nexport default URL;\r\n","import openSocket from \"socket.io-client\";\r\nimport Rx from \"rxjs/Rx\";\r\nimport URL from \"./URL\";\r\nimport axios from \"axios\";\r\n\r\nconst { log } = console;\r\nconst _key = atob(localStorage.getItem(\"id\"));\r\nconst socket = openSocket(URL);\r\n\r\n// const subscribeForDrawings = (cb) => {\r\n\r\n//     socket.on(`drawing:${_key}`, drawing => cb(drawing));\r\n//     socket.emit('subscribeForDrawings',{key:_key});\r\n// }\r\n\r\nconst subscribeForDrawingsList = (cb) => {\r\n  socket.on(\"drawingList\", (drawing) => cb(drawing));\r\n  socket.emit(\"subscribeForDrawingList\", { key: _key });\r\n};\r\n\r\nconst createDrawing =async ({ name, key }) => {\r\n  await socket.emit(\"createDrawing\", { name, key: key,user:_key });\r\n};\r\n\r\nconst publishLine = (line) => {\r\n  socket.emit(\"publishLine\", line);\r\n};\r\n\r\nconst subscribeForPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawing:${drawingId}`, h),\r\n    (h) => socket.off(`drawing:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForPublishLine\", drawingId);\r\n};\r\n\r\nconst subscribeForAllPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawingAll:${drawingId}`, h),\r\n    (h) => socket.off(`drawingAll:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForAllPublishLine\", drawingId);\r\n};\r\n\r\nconst getDrawingById = (id, cb) => {\r\n  socket.on(\"takeDrawing\", (info) => cb(info));\r\n  socket.emit(\"getDrawingById\", id);\r\n};\r\n\r\nconst deleteDrawing = (id, cb) => {\r\n  axios.post(URL + \"/drawing/delete\", { id, key: _key }).then((e) => {\r\n    // log(e);\r\n    cb(e);\r\n  });\r\n};\r\n\r\nexport {\r\n  // subscribeForDrawings,\r\n  createDrawing,\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  getDrawingById,\r\n  subscribeForDrawingsList,\r\n  subscribeForAllPublishLine,\r\n  deleteDrawing\r\n};\r\n","import React, {Component} from 'react'\r\nimport {createDrawing} from \"../api\"\r\nimport NewAdd from \"../NewAdd\"\r\n\r\nexport default class DrawingForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        isNew:false,\r\n        submitButtonTitle:\"NEW\"\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let id = localStorage.getItem(\"id\");\r\n        createDrawing({name: this.state.name, key:atob(id)});\r\n        this.setState({name: \"\"})\r\n    }\r\n    render() {\r\n        return (\r\n         \r\n            <div className=\"DrawingForm\">\r\n                <div className=\"form\">\r\n                    <input\r\n                        value={this.state.name}\r\n                        type=\"text\"\r\n                        placeholder=\"Search Drawing\"\r\n                        onChange={evt => this.setState({name: evt.target.value})}/>\r\n                    {/* <input type=\"submit\" value={this.state.submitButtonTitle} onClick={e=>{\r\n                        this.setState({\r\n                            submitButtonTitle:!this.state.isNew?\"CANCEL\":\"NEW\",\r\n                            isNew:!this.state.isNew\r\n                        })\r\n                    }}/> */}\r\n                    </div>\r\n                {/* {this.state.isNew?<NewAdd save={()=>this.setState({isNew:false, submitButtonTitle:!this.state.isNew?\"CANCEL\":\"NEW\",})}/>:null} */}\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nconst NavBar = ({ title, btn, color }) => {\r\n  return (\r\n    <div\r\n      style={{ background: color && \"none\" }}\r\n      className=\"NavBar d-flex align-items-center justify-content-around p-1\"\r\n    >\r\n      <h1 className=\"text-light display-3 float-left\">{title}</h1>\r\n      <div className=\"d-flex align-items-center justify-content-around p-1\">\r\n      {btn?.map((e) => {\r\n        return e;\r\n      })}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class NewAdder extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            value:\"\"\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex flex-column justify-content-center NewAdder\">\r\n                <input onBlur={(e)=>this.setState({value:e.target.value})} type=\"text\" placeholder=\"Enter Drawing Name\" />\r\n                <div className=\"btn btn-primary\" onClick={e=>{this.props.onSave(this.state.value);this.props.onClose();this.setState({value:\"\"})}}>SAVE</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\"\r\nimport {\r\n  subscribeForDrawings,\r\n  subscribeForDrawingsList,\r\n  createDrawing,\r\n  deleteDrawing\r\n} from \"../api\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport \"./core.css\";\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport NewAdder from \"./NewAdder\";\r\n\r\nconst { log } = console;\r\nexport default class DrawingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawings: [],\r\n      temp: [],\r\n      key: \"\",\r\n      redirect: false,\r\n      query: \"\",\r\n      name: \"\",\r\n      isNew: false,\r\n      isAuth: true,\r\n      status:\"Loading ...\",\r\n\r\n    };\r\n  }\r\n\r\n  getDrawing() {\r\n    subscribeForDrawingsList((drawing) => {\r\n      log('getDrawing is running');\r\n      this.setState((prev) => ({ drawings: drawing, temp: drawing ,status:\"No Drawing Found !\"}));\r\n    });\r\n\r\n  }\r\n  getAllList(){\r\n    axios.post(`${URL}/drawing/all`,{id: atob(localStorage.getItem(\"id\")) }).then(e=>{\r\n      log(e)\r\n      const {data:{list}} = e\r\n      document.title = `${list.length} Drawings`\r\n      this.setState((prev) => ({ drawings: list, temp: list ,status:\"No Drawing Found !\"}));\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    \r\n   \r\n\r\n    // subscribeForDrawings((drawing) => {     log('drawing is added') log(drawing)\r\n    //    if(drawing.operationType==\"insert\"){ this.setState(prev => ({\r\n    // drawings: [drawing.fullDocument, ...prev.drawings]     }))     }\r\n    // if(drawing.operationType==\"delete\"){    this.setState(prev => ({\r\n    // drawings: prev.drawings.filter(e=>e._id!==drawing.documentKey._id)\r\n    // }))     } });\r\n  }\r\n  componentWillMount(){\r\n \r\n    axios\r\n    .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n    .then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        this.getAllList();\r\n        \r\n      } else {\r\n        this.setState({ isAuth: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteDrawing({id}){\r\n    deleteDrawing(id, (k) => {\r\n      log(k);\r\n      this.getAllList();\r\n    })\r\n  }\r\n  DrawingElement({drawing}){\r\n    // const [show, setShow] = useState(true)\r\n    return <div\r\n          className=\"drawingCard card m-1 w-auto shadow-sm \"\r\n          key={drawing._id}\r\n          \r\n        >\r\n          {this.state.redirect && <Redirect to=\"/auth\" />}\r\n          <div className=\"card-body \">\r\n            <h5 className=\"card-title\">{drawing.name}</h5>\r\n            <Link\r\n              className=\"card-text btn btn-info text-light\"\r\n              to={`/drawings/${drawing._id}`}\r\n            >\r\n              {\"Draw\"}\r\n            </Link>\r\n            <button\r\n              onClick={(e) =>\r\n                this.deleteDrawing({id:drawing._id})\r\n              }\r\n              className=\"btn btn-danger mx-1\"\r\n            >\r\n              DELETE\r\n            </button>\r\n          </div>\r\n          {/* <h6 className=\"card-footer text-dimmed\" onClick={()=>alert(drawing.key)}>\r\n           show key\r\n          </h6> */}\r\n          <h6 className=\"card-footer text-dimmed\">\r\n            {new Date(drawing.timestamp).toLocaleString()}\r\n          </h6>\r\n        </div>\r\n  }\r\n\r\n  render() {\r\n    const drawingList = this.state.temp.map((drawing) => (\r\n      this.DrawingElement({drawing, getAllList:this.getAllList})\r\n    ));\r\n    \r\n    return (\r\n      <>\r\n      {NavBar({title:\"DashBoard\", btn:[\r\n          <Link to=\"/\" className=\"btn\">{\"< Back\"}</Link>,\r\n          <div className={\"btn\"} onClick={async ()=>{\r\n            this.setState({isNew:true})\r\n            // let name = prompt(\"Enter the Drawing Name: \");\r\n            // let key = prompt(\"Enter the Drawing Name (leave blank for public): \");\r\n            // await new Promise((res,rej)=>{\r\n            //   createDrawing({name,key});\r\n            //   res()\r\n            // })\r\n            // await this.getAllList();\r\n          }}>\r\n            + NEW\r\n        \r\n          </div>\r\n        ], color:true})}\r\n        <Popup onClose={()=>this.setState({isNew:false})} open={this.state.isNew}>\r\n          <NewAdder \r\n          onClose={()=>this.setState({isNew:false})}\r\n          onSave={async (name)=>{\r\n                       await new Promise((res,rej)=>{\r\n              createDrawing({name,key:\"\"});\r\n              res()\r\n            })\r\n            await this.getAllList();\r\n          }}/>\r\n          </Popup>\r\n      <div>\r\n        {this.state.isAuth ? null : <Redirect to=\"/auth\" />}\r\n\r\n        \r\n\r\n        {/* {this.state.isNew && (\r\n          <div className=\"row m-1\">\r\n            <div className=\"col\">\r\n              <div className=\"form-floating\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingInputGrid\"\r\n                  placeholder=\"NAME\"\r\n                  value={this.state.name}\r\n                  onChange={(e) => {\r\n                    const { value } = e.target;\r\n                    this.setState({ name: value });\r\n                  }}\r\n                />\r\n                <label for=\"floatingInputGrid\">New Drawing Name</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )} */}\r\n\r\n          <div className=\"container mb-2 form\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"floatingInputGrid\"\r\n                placeholder=\"Search\"\r\n                value={this.state.query}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  this.setState({\r\n                    query: value,\r\n                    temp: this.state.drawings.filter(\r\n                      (d) => d.name.toLowerCase().indexOf(value) != -1\r\n                    )\r\n                  });\r\n                }}\r\n              />\r\n   \r\n            </div>\r\n\r\n        <div className=\"d-flex flex-wrap container justify-content-center\">\r\n\r\n          {drawingList.length ? drawingList : <h1 className=\"text-white\">{this.state.status}</h1>}\r\n        </div>\r\n      </div></>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nconst {log} = console\r\nclass Canvas extends Component {\r\n  state = {\r\n    lastLength: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.node;\r\n    canvas.addEventListener('touchstart', this.handleOnTouchDown,false)\r\n    canvas.addEventListener('touchmove', this.handleOnTouchMove,false)\r\n    canvas.addEventListener('touchend', this.handleOnTouchUp,false)\r\n    canvas.style.width = '100%';\r\n    canvas.style.height = '100%';\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    this.ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    //   log({nextProps})\r\n    //todo: find a better way to see if a coordinate has been applied\r\n    if (nextProps.lines && nextProps.lines.length > this.state.lastLength) {\r\n      for (let i = this.state.lastLength; i < nextProps.lines.length; i += 1) {\r\n        // console.log('looping through lines ', i);\r\n        const l = nextProps.lines[i];\r\n        this.draw(l.from.x, l.from.y, l.to.x, l.to.y);\r\n      }\r\n\r\n      this.update();\r\n\r\n      this.setState({\r\n        lastLength: nextProps.lines.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    this.ctx.strokeStyle = this.props.brushColor;\r\n    this.ctx.lineWidth = this.props.lineWidth;\r\n    this.ctx.moveTo(lX, lY);\r\n    this.ctx.lineTo(cX, cY);\r\n  }\r\n\r\n  handleOnMouseDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n\r\n\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n    this.drawing = true;\r\n  }\r\n\r\n  handleOnMouseMove = (e) => {\r\n    if (this.drawing) {\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n\r\n    }\r\n  }\r\n\r\n  handleonMouseUp = () => {\r\n    this.drawing = false;\r\n  }\r\n\r\n\r\n\r\n  handleOnTouchDown = (e) =>{\r\n    if (!this.props.drawingEnabled) {\r\n        return;\r\n      }\r\n      const {touches:[a]} = e\r\n      const rect = this.node.getBoundingClientRect();\r\n      this.ctx.beginPath();\r\n  \r\n      this.lastX = a.clientX - rect.left;\r\n      this.lastY = a.clientY - rect.top;\r\n      this.drawing = true;\r\n      e.preventDefault()\r\n  }\r\n\r\n  handleOnTouchMove = (e) => {\r\n    if (this.drawing) {\r\n        const {touches:[a]} = e\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = a.clientX - rect.left;\r\n      const currentY = a.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n\r\n    }\r\n    e.preventDefault()\r\n  }\r\n  handleOnTouchUp = () => {\r\n    this.drawing = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={node => (this.node = node)}\r\n        style={this.props.canvasStyle}\r\n        onMouseDown={this.handleOnMouseDown}\r\n        onMouseMove={this.handleOnMouseMove}\r\n        onMouseUp={this.handleonMouseUp}\r\n\r\n        // onTouchStart={this.handleOnTouchDown}\r\n        // onTouchMove={this.handleOnMouseMove}\r\n        // onTouchEnd={this.handleonMouseUp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCanvas.defaultProps = {\r\n  brushColor: '#000000',\r\n  lineWidth: 2,\r\n  canvasStyle: {\r\n    backgroundColor: '#FFFFFF',\r\n    cursor: 'pointer',\r\n  },\r\n  drawingEnabled: false,\r\n  lines: [],\r\n};\r\n\r\nexport default Canvas;\r\n","import React, {Component,useState} from 'react'\r\nimport Canvas from './Canvas';\r\nimport {publishLine,subscribeForPublishLine,getDrawingById,subscribeForAllPublishLine} from \"../api\"\r\nimport {Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport URL from \"../URL\"\r\n\r\nimport \"./core.css\"\r\n\r\nimport NavBar from \"./NavBar\"\r\n\r\n\r\nconst {log, table} = console\r\nexport default class Drawing extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            lines:[],\r\n            info:{name:\"\"},\r\n            brushColor:\"black\",\r\n            name:\"Loading....\",\r\n            isFound:false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n        // log(this.props)\r\n        const id = window.location.href.split(\"/\").pop()\r\n        log(id)\r\n        axios.post(`${URL}/drawing/get`, {id}).then(e=>{\r\n            const {data} = e;\r\n            log(data)\r\n            if(data.success){\r\n                this.setState({isFound:true,name:data.name});\r\n                // log(data)\r\n                document.title = `${data.name} - Chitr`\r\n            }else{\r\n                this.setState({name:\"NOT FOUND\"})\r\n            }\r\n        })\r\n\r\n        subscribeForAllPublishLine(this.props.drawingId, (lineEvt)=>{\r\n            // log(lineEvt)\r\n            this.setState(prev=>{\r\n                return {lines:[...prev.lines, ...lineEvt.lines]}\r\n            })\r\n        })\r\n\r\n        subscribeForPublishLine(this.props.drawingId, (lineEvt)=>{\r\n            \r\n            this.setState(prev=>{\r\n                return {lines:[...prev.lines, ...lineEvt.lines]}\r\n            })\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n    }\r\n   \r\n    handleDraw = (line) => {\r\n        // log(line)\r\n        publishLine({drawingId: this.props.drawingId, ...line});\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (<>\r\n                {/* <h1>{this.state.name}</h1> */}\r\n                {NavBar({\r\n                    title:this.state.name,\r\n                    btn:[<Link to=\"/dashboard\" className=\"btn\">\r\n                    dashBoard\r\n                  </Link>]\r\n                })}\r\n             {this.state.isFound?<div className=\"Drawing\">\r\n                \r\n                    {/* <ColorBox onClick={color=>{this.setState({brushColor:color})}}/> */}\r\n                    <Canvas brushColor={this.state.brushColor} onDraw={this.handleDraw} drawingEnabled={true} lines={this.state.lines}/>\r\n                </div>:null}\r\n                \r\n                </>\r\n                \r\n            )\r\n         \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n// Canvas.defaultProps = {\r\n//     brushColor: '#000000',\r\n//     lineWidth: 2,\r\n//     canvasStyle: {\r\n//       backgroundColor: '#FFFFFF',\r\n//       cursor: 'pointer'\r\n//     },\r\n//     drawingEnabled: false,\r\n//     lines: []\r\n//   };\r\n\r\n","const initalState = {\r\n    key:\"\"\r\n}\r\nconst authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n      default: return state;\r\n    }\r\n\r\n}\r\n\r\n  export default authReducer","import {subscribeForDrawings,subscribeForDrawingsList} from \"../api\"\r\n\r\nconst {log} = console\r\n\r\nconst initState = {\r\n    list:[]\r\n\r\n}\r\n\r\nconst drawingListGetter = (state, action)=>{\r\n    \r\n}\r\n\r\nconst drawingReducer = (state=initState, action)=>{\r\n    const {data} = action;\r\n    switch(action.type){\r\n        case 'GET_DRAWING_LIST':\r\n            return new Promise((res, rej)=>{\r\n                subscribeForDrawingsList((drawing) => {\r\n                    log('GET_DRAWING_LIST '+drawing.length);\r\n                    log(state.list)\r\n                   res( {...state, list:drawing})\r\n                    \r\n                })\r\n            })\r\n        break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drawingReducer","import {combineReducers} from \"redux\"\r\nimport auth from \"./authReducer\"\r\nimport drawing from \"./drawingReducer\"\r\n\r\nexport default combineReducers({auth,drawing})","import {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./index\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport pen from \"../pen.svg\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport URL from \"../URL\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./core.css\";\r\nimport store from \"./store\";\r\n\r\nconst {log} = console\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: false\r\n    };\r\n  }\r\n  auth(type) {\r\n    // type : ['signin', 'signup']\r\n    const { email, password } = this.state;\r\n    axios.post(`${URL}/auth/${type}`, { email, password }).then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        localStorage.setItem(\"id\", btoa(data.id))\r\n        this.setState({ success: true });\r\n        // window.location.pathname = '/dashboard'\r\n        // console.log(data)\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth h-100\">\r\n        {NavBar({ title: \"Auth Page\", btn: [], color: true })}\r\n        <div className=\"container-fluid d-flex align-items-center\">\r\n          {this.state.success && <Redirect to=\"/dashboard\" />}\r\n          <form\r\n            className=\"from\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"330px\",\r\n              padding: \"15px\",\r\n              margin: \"auto\"\r\n            }}\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <img className=\"mb-4\" src={pen} alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal text-light\">\r\n              Please sign in/up\r\n            </h1>\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signin\")}\r\n              className=\"btn btn-lg btn-primary btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signup\")}\r\n              className=\"btn btn-lg btn-info btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            {/* <p classNameName=\"mt-5 mb-3 text-muted\">© 2017-2018</p> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Impress, Step } from 'react-impressjs';\r\n\r\nexport default React.memo(function Present() {\r\n    return (\r\n        <div className=\"Present\">\r\n            <Impress >\r\n                <Step data={\r\n                    {x:0,y:0}\r\n                }>\r\n                    <h1 className=\"_1\">What is Chitr?</h1>\r\n                </Step>\r\n                <Step  data={\r\n                    {y:1000,scale:3}\r\n                }>\r\n                    <h1 className=\"_2\">Drawing Collebrate Tool for RealTime Drawing!</h1>\r\n                </Step>\r\n\r\n                <Step data={\r\n                    {x:1000,y:-1000, scale:5, rotateX:45, rotateY:45}\r\n                }>\r\n                    <h1 className=\"_1\">What is Chitr?</h1>\r\n                </Step>\r\n                \r\n            </Impress>\r\n        </div>\r\n    )\r\n})\r\n","import { Link } from \"react-router-dom\";\r\nimport React,{useState} from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\"\r\nimport URL from \"../URL\"\r\nimport {usePost} from \"./useFul\"\r\nimport \"./HomePage.css\"\r\nimport Present from \"./Present\";\r\n\r\nconst HomePage = () => {\r\n  const [l,setL] = useState(false);\r\n\r\n \r\n  axios\r\n  .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n  .then((e) => {\r\n    const { data } = e;\r\n    if (data.success) {\r\n      setL(true)\r\n      \r\n    } else {\r\n      setL(false)\r\n    }\r\n  });\r\ndocument.title = \"Chitr\"\r\n  return (\r\n    <div className={\"HomePage\"}>\r\n      {NavBar({\r\n        title: \"Chitr\",\r\n        btn: [\r\n          !l?<Link to=\"auth\" className=\"btn\">\r\n            Log In\r\n          </Link>:<button className=\"btn\" onClick={()=>{localStorage.setItem(\"id\",\"\");setL(false)}}>Log Out</button>,\r\n          l&&<Link to=\"dashboard\" className=\"btn\">\r\n          dashBoard\r\n        </Link>\r\n        ]\r\n      })}\r\n      <Present/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport DrawingList from \"./DrawingList\";\r\nimport \"./core.css\";\r\nimport NavBar from \"./NavBar\"\r\n\r\nimport {Link} from \"react-router-dom\"\r\n\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"DashBoard container-fluid\">\r\n        \r\n        <DrawingList\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","import Excalidraw, {\r\n    exportToCanvas,\r\n    exportToSvg,\r\n    exportToBlob\r\n  } from \"@excalidraw/excalidraw\";\r\n\r\n  import React,{useRef, useState} from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\"\r\nimport URL from \"../URL\"\r\n\r\nconst {log} = console;\r\n\r\nexport default function ExcaliDraw({drawingId}){\r\n    const excalidrawRef = useRef(null);\r\n\r\n    const [viewModeEnabled, setViewModeEnabled] = useState(false);\r\n    const [zenModeEnabled, setZenModeEnabled] = useState(false);\r\n    const [gridModeEnabled, setGridModeEnabled] = useState(false);\r\n    const [blobUrl, setBlobUrl] = useState(null);\r\n    const [canvasUrl, setCanvasUrl] = useState(null);\r\n    const [exportWithDarkMode, setExportWithDarkMode] = useState(false);\r\n    const [shouldAddWatermark, setShouldAddWatermark] = useState(false);\r\n    const [theme, setTheme] = useState(\"light\");\r\n    const [drawingName, setName] = useState(\"\")\r\n    const onObjectChange=(b, n)=>{\r\n      // b: Before Element Arr\r\n      // n: After Element Arr\r\n      let changes = {}\r\n     \r\n      \r\n\r\n    }\r\n\r\n    let initArr = []\r\n  useEffect(()=>{\r\n    const id = window.location.href.split(\"/\").pop();\r\n    log(id)\r\n    axios.post(`${URL}/drawing/get`, {id}).then(e=>{\r\n      const {data} = e;\r\n      log({data})\r\n      if(data.success){\r\n          setName(data.name)\r\n          // log(data)\r\n          document.title = `${data.name} - Chitr`\r\n      }else{\r\n          setName(\"NOT FOUND\")\r\n      }\r\n  })\r\n  },[])\r\n\r\n    return(\r\n        <>\r\n        <h1>{drawingName}</h1>\r\n        <Excalidraw \r\n        \r\n        ref={excalidrawRef}\r\n        initialData={[]}\r\n        // onChange={(ele,state)=>onChange(initArr,ele)}\r\n        // onPointerUpdate={(payload) => console.log(payload)}\r\n        onCollabButtonClick={() =>\r\n          window.alert(\"You clicked on collab button\")\r\n        \r\n        }\r\n        onPointerUpdate={(pay)=>{\r\n          log(pay)\r\n        }}\r\n        viewModeEnabled={viewModeEnabled}\r\n        zenModeEnabled={zenModeEnabled}\r\n        gridModeEnabled={gridModeEnabled}\r\n        theme={theme}\r\n        name=\"Custom name of drawing\"\r\n        UIOptions={{ canvasActions: { loadScene: false } }}\r\n        />\r\n        </>\r\n    )\r\n}","export default {\r\n    TITLE:\"LineDraw\"\r\n}","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport DrawingForm from \"./components/DrawingForm\";\r\nimport DrawingList from \"./components/DrawingList\";\r\nimport Drawing from \"./components/Drawing\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport DashBoard from \"./components/DashBoard\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport store from \"./Reducer/store\";\r\nimport ExcaliDraw from \"./components/ExcaliDraw\";\r\nimport db from \"./db\";\r\n\r\nconst { log } = console;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDrawing: { id: \"\", name: \"\" },\r\n      title: db.TITLE\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ title: db.TITLE });\r\n    log(store.getState());\r\n  }\r\n\r\n  selectDrawing = (drawing) => {\r\n    this.setState({ selectedDrawing: drawing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <DashBoard />\r\n            </Route>\r\n            <Route path=\"/auth\">\r\n              <Auth />\r\n            </Route>\r\n\r\n            <Route\r\n              path=\"/drawings/:drawingId\"\r\n              render={(e) => {\r\n                return (\r\n                  <>\r\n                    {/* <h1>{this.state.selectedDrawing.name}</h1> */}\r\n                    <Drawing\r\n                      drawingId={e.match.params.drawingId}\r\n                      drawing={this.state.selectedDrawing}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            ></Route> \r\n\r\n            <Route path=\"/new/drawings/:drawingId\" render={e=> <ExcaliDraw  drawingId={e.match.params.drawingId}/>}>\r\n             \r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}