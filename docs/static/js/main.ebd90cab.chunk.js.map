{"version":3,"sources":["components/ico/checkbox-blank-circle-fill.svg","components/ico/checkbox-blank-fill.svg","components/ico/cursor-fill.svg","components/ico/delete-bin-2-fill.svg","components/ico/download-cloud-2-fill.svg","components/ico/eraser-fill.svg","components/ico/font-color.svg","components/ico/lock-fill.svg","components/ico/lock-unlock-fill.svg","components/ico/pencil-fill.svg","components/ico/text.svg","components/ico/upload-cloud-2-fill.svg","components/ico/fill.svg","components/ico/share.svg","pen.svg","URL.js","api.js","components/ico/index.js","components/newCanvas/ToolBar.jsx","components/newCanvas/index.jsx","components/Canvas.jsx","components/NavBar.jsx","components/Drawing.jsx","components/Auth.jsx","components/Present.js","components/HomePage.jsx","components/NewAdder.jsx","components/DrawingList.jsx","components/DashBoard.jsx","Reducer/authReducer.js","Reducer/drawingReducer.js","Reducer/index.js","Reducer/store.js","db.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","_key","atob","localStorage","getItem","socket","openSocket","firstTime","subscribeForDrawingsList","cb","on","drawing","emit","key","createDrawing","a","name","user","pushChange","drawingId","data","I","Circle","Rect","Cursor","Remove","Download","Erase","FontColor","Fill","Share","Lock","Unlock","Pencil","Text","Save","did","window","location","href","split","pop","shapeAdd","addMain","shape","canvas","document","toJSON","cmd","add","renderAll","addRect","rect","fabric","top","left","width","height","fill","id","uuid","padding","strokeWidth","this","addCircle","circ","radius","addText","text","IText","e","addDraw","setDraw","k","isDrawingMode","delete","now","getActiveObject","remove","getObjects","forEach","colorChange","set","target","value","backgroundColor","LineSizeTab","onChange","useState","findIndex","freeDrawingBrush","setNow","className","map","i","onClick","ToolBar","isAuth","isValid","isDraw","colorRef","useRef","src","current","click","ref","style","border","opacity","type","json","saveChitr","createElement","toDataURL","format","quality","download","el","body","appendChild","select","execCommand","removeChild","alert","log","console","NewCanvas","clientWidth","clientHeight","cvs","setAuth","useEffect","Canvas","ran","Math","floor","random","color","from","loadFromJSON","selectable","stroke","scaleX","scaleY","angle","path","pullChange","get","Path","_objects","opt","delta","deltaY","zoom","getZoom","zoomToPoint","x","offsetX","y","offsetY","preventDefault","stopPropagation","vpt","viewportTransform","getWidth","getHeight","evt","altKey","isDragging","selection","lastPosX","clientX","lastPosY","clientY","requestRenderAll","setViewportTransform","axios","post","then","success","title","querySelector","innerHTML","state","lastLength","handleOnMouseDown","props","drawingEnabled","node","getBoundingClientRect","ctx","beginPath","lastX","lastY","handleOnMouseMove","currentX","currentY","draw","update","onDraw","to","brushColor","linewidth","lineWidth","handleonMouseUp","handleOnTouchDown","touches","handleOnTouchMove","handleOnTouchUp","addEventListener","offsetWidth","offsetHeight","getContext","nextProps","lines","length","l","setState","lX","lY","cX","cY","strokeStyle","moveTo","lineTo","canvasStyle","onMouseDown","onMouseMove","onMouseUp","Component","defaultProps","cursor","NavBar","btn","background","Drawing","handleDraw","line","publishLine","info","isFound","lineEvt","prev","Rx","Observable","fromEventPattern","h","off","bufferTime","subscribe","subscribeForPublishLine","Auth","email","password","setItem","btoa","pathname","message","maxWidth","margin","onSubmit","pen","alt","placeholder","required","autoFocus","auth","React","memo","scale","rotateX","rotateY","z","rotateZ","HomePage","setL","NewAdder","onBlur","onSave","onClose","DrawingList","drawings","temp","redirect","query","isNew","status","list","getAllList","deleteDrawing","_id","Date","timestamp","toLocaleString","drawingList","DrawingElement","open","Promise","res","rej","filter","d","toLowerCase","indexOf","DashBoard","initalState","authReducer","action","initState","drawingReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","App","selectDrawing","selectedDrawing","db","getState","exact","render","match","params","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,wD,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,mD,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,ieCG5BC,EAHH,wC,iBCMNC,EAAOC,KAAKC,aAAaC,QAAQ,OAEjCC,EAASC,IAAWN,GACtBO,GAAY,EAOVC,EAA2B,SAACC,GAChCJ,EAAOK,GAAG,eAAe,SAACC,GAAD,OAAaF,EAAGE,MACzCN,EAAOO,KAAK,0BAA2B,CAAEC,IAAKZ,KAO1Ca,EAAa,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,KAAMH,EAAf,EAAeA,IAAf,SACdR,EAAOO,KAAK,gBAAiB,CAAEI,OAAMH,IAAKA,EAAKI,KAAMhB,IADvC,2CAAH,sDA4DbiB,EAAa,SAACC,EAAWC,GAC7Bf,EAAOO,KAAP,aAA0B,CAACO,YAAWC,U,wQCpEzBC,GAHL,CAACC,WAAQC,SAAMC,WAAQC,WAAQC,aAAUC,UAAOC,cAAUC,UAAKC,WACzEC,SAAMC,WAAQC,WAAQC,UAAMC,WCRtBC,GAAMC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MACtCC,GAAW,CACfC,QAAS,SAACC,GACR,IAAMC,EAAWC,SAAXD,OACN3B,EAAWkB,GAAD,YAAC,eAAUQ,EAAMG,OAAO,CAAC,QAAzB,IAAiCC,IAAK,SAChDH,EAAOI,IAAIL,GACXC,EAAOK,aAETC,QAAS,WACUL,SAAXD,OAAN,IACIO,EAAO,IAAIC,SAAO9B,KAAK,CACzB+B,IAAK,IACLC,KAAM,IACNC,MAAO,IACPC,OAAQ,IACRC,KAAM,MACNC,GAAIC,MACJC,QAAQ,EACRC,YAAY,IAGdC,KAAKpB,QAAQS,IAGfY,UAAW,WACQlB,SAAXD,OAAN,IACIoB,EAAO,IAAIZ,SAAO/B,OAAO,CAC3BgC,IAAK,IACLC,KAAM,IACNW,OAAQ,GACRR,KAAM,OACNC,GAAIC,MACJE,YAAY,IAEdC,KAAKpB,QAAQsB,IAEfE,QAAS,WACP,IAAIC,EAAO,IAAIf,SAAOgB,MAAM,aAAc,CACxCf,IAAK,IACLC,KAAM,IACNI,GAAIC,QAENQ,EAAK1D,GAAG,WAAW,SAAC4D,GAClB,IAAIX,EAAKS,EAAKT,GACdzC,EAAWkB,GAAK,CAAEgC,KAAMA,EAAKA,KAAMT,KAAIX,IAAK,YAE9Ce,KAAKpB,QAAQyB,IAEfG,QAAS,YAAwB,IAAZC,EAAW,EAAXA,QACb3B,EAAWC,SAAXD,OACN2B,GAAQ,SAACC,GAAD,OAAQA,KAChB5B,EAAO6B,eAAiB7B,EAAO6B,eAKjCC,OAAQ,WACN,IAAM9B,EAAWC,SAAXD,OACF+B,EAAM/B,EAAOgC,kBACbD,GACF1D,EAAWkB,GAAK,CAAEuB,GAAIiB,EAAIjB,GAAIX,IAAK,WACnCH,EAAOiC,OAAOF,IAEd/B,EAAOkC,aAAaC,SAAQ,SAAAV,GAC1BzB,EAAOiC,OAAOR,MAGlBzB,EAAOK,aAET+B,YAAY,SAASX,GAEnB,IAAMzB,EAAWC,SAAXD,OACN,GAAIA,EAAQ,CACV,IAAI+B,EAAM/B,EAAOgC,kBACbD,GACFA,EAAIM,IAAI,CAAExB,KAAMY,EAAEa,OAAOC,QAEzBlE,EAAWkB,GAAK,CACduB,GAAIiB,EAAIjB,GACRD,KAAMY,EAAEa,OAAOC,MACfpC,IAAK,eAGPH,EAAOqC,IAAI,CAAEG,gBAAiBf,EAAEa,OAAOC,QACvClE,EAAWkB,GAAK,CACdsB,KAAMY,EAAEa,OAAOC,MACfpC,IAAK,uBAGTH,EAAOK,eAMPoC,GAAc,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACpB,EAAsBC,mBAAS,CAAC,EAAE,EAAE,EAAE,GAAGC,WAAU,SAAAnB,GAAC,OAAEA,GAAGxB,SAASD,OAAO6C,iBAAiBlC,UAA1F,mBAAOoB,EAAP,KAAYe,EAAZ,KACA,OAAO,yBAAKC,UAAU,SACjB,CAAC,EAAE,EAAE,EAAE,GAAGC,KAAI,SAACvB,EAAEwB,GACd,OAAO,yBAAKC,QAAS,WACnBJ,EAAOG,GACPP,EAASO,GACThD,SAASD,OAAO6C,iBAAiBlC,MAAQc,GACxCsB,UAAS,eAAUhB,IAAMkB,GAAG,gBAAkBxB,QA6F5C0B,OAxFf,YAAsC,EAAnBC,OAAmB,EAAXC,QAAY,IACrC,EAA0BV,oBAAS,GAAnC,mBAAOW,EAAP,KAAe3B,EAAf,KACM4B,EAAWC,mBACjB,OACE,yBAAKT,UAAU,WACb,yBAAKA,UAAU,MAAMG,QAAS,kBAAMrD,GAASS,YAC3C,yBAAKmD,IAAKjF,GAAEE,QAEd,yBAAKqE,UAAU,MAAMG,QAAS,kBAAMrD,GAASsB,cAC3C,yBAAKsC,IAAKjF,GAAEC,UAEd,yBAAKsE,UAAU,MAAMG,QAAS,kBAAMrD,GAASyB,YAC3C,yBAAKmC,IAAKjF,GAAEa,QAEd,yBACE0D,UAAU,MACVG,QAAS,kBAAMrD,GAAS6B,QAAQ,CAAEC,QAAS,SAACF,GAAD,OAAOE,EAAQF,QAE1D,yBAAKgC,IAAMH,EAAoB9E,GAAEG,OAAbH,GAAEY,UAGzBkE,GAAQ,kBAAC,GAAD,CAAaZ,SAAU,eAC9B,yBACEK,UAAU,MACVG,QAAS,kBAAMrD,GAASiC,OAAO,CAAEH,QAAS,SAACF,GAAD,OAAOE,EAAQF,QAEzD,yBAAKgC,IAAKjF,GAAEI,UAGd,yBACEmE,UAAU,MACVG,QAAS,WACPK,EAASG,QAAQC,UAGnB,yBAAKF,IAAKjF,GAAEQ,OACZ,2BACE4E,IAAKL,EACLM,MAAO,CAAElD,MAAO,MAAOC,OAAQ,MAAOkD,OAAQ,MAAOC,QAAS,KAC9DC,KAAK,QACLtB,SAAU7C,GAASuC,eAIrB,yBACEW,UAAU,MACVG,QAAS,YFrDD,SAAC,GAAqB,IAApB5E,EAAmB,EAAnBA,UAAW2F,EAAQ,EAARA,KAC7BzG,EAAOO,KAAK,YAAa,CAACO,YAAU2F,OAAMjG,IAvG3BX,KAAKC,aAAaC,QAAQ,SE4J/B2G,CAAU,CAAE5F,UAAWiB,GAAK0E,KAAMhE,SAASD,OAAOE,OAAO,CAAC,WAG5D,yBAAKuD,IAAKjF,GAAEc,QAIhB,yBACEyD,UAAU,MACVG,QAAS,WACP,IAAIhF,EAAI+B,SAASkE,cAAc,KAC/BjG,EAAEwB,KAAOO,SAASD,OAAOoE,UAAU,CACjCC,OAAQ,OACRC,QAAS,IAEXpG,EAAEqG,SAAW,aACbrG,EAAEyF,UAGJ,yBAAKF,IAAKjF,GAAEK,YAGd,yBACEkE,UAAU,MACVG,QAAS,WACP,IAAMsB,EAAKvE,SAASkE,cAAc,YAClCK,EAAGjC,MAAQtC,SAASR,SAASC,KAC7BO,SAASwE,KAAKC,YAAYF,GAC1BA,EAAGG,SACH1E,SAAS2E,YAAY,QAErB3E,SAASwE,KAAKI,YAAYL,GAC1BM,MAAM,8DAGR,yBAAKrB,IAAKjF,GAAES,WC7LZ8F,GAAQC,QAARD,IAEFxF,GAAMC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MA8L7BqF,OA5Lf,WACehF,SAASwE,KAAKS,YACbjF,SAASwE,KAAKU,aAD5B,IAIMC,EAAM5B,mBAEZ,EAA0Bb,oBAAS,GAAnC,mBAAe0C,GAAf,WACA,EAA4B1C,oBAAS,GAArC,mBA4KA,OA5KA,UAEA2C,qBAAU,WACR,IAAItF,EAAS,IAAIQ,SAAO+E,OAAOH,EAAI1B,QAAS,CAG1C/C,MAAO,IACPC,OAAQ,IAAM,OACd4B,gBAAiB,UAEnBvC,SAASD,OAASA,EAClB,IHwDwB1B,EGxDlBkH,EAAM,kBAAIC,KAAKC,MAAoB,IAAdD,KAAKE,WAChC1F,SAAS2F,MAAT,cAAwBJ,IAAxB,YAAiCA,IAAjC,YAA0CA,IAA1C,KACAJ,EAAI1B,QAAQG,MAAMC,OAAlB,oBAAwC7D,SAAS2F,OHsDzBtH,EGrDLiB,GHwDrB/B,EAAOK,GAAP,uBAA0BS,IAAa,SAACwC,GACtCkE,QAAQD,IAAI,QACVvH,EAAOO,KAAP,eAA4B,CAAC+C,GAAGA,EAAGd,OAAOC,SAASD,OAAOE,OAAO,CAAC,YAEtE1C,EAAOK,GAAP,uBAA0BS,IAAa,SAACC,GACnCb,IACa,UAAXa,EAAKsH,KACN5F,SAASD,OAAO8F,aAAavH,EAAK0F,MAEjB,UAAX1F,EAAKsH,OACX5F,SAASD,OAAO8F,aAAavH,EAAK0F,MAClCvG,GAAU,OAIhBF,EAAOO,KAAP,qBAAkC,CAACO,cGrEjC0B,EAAOnC,GAAG,mBAAkB,SAAC4D,GAC3B,MAAkBA,EAAEa,OAAOpC,OAAO,CAAC,OAA5BY,EAAP,EAAOA,GAAGkD,EAAV,EAAUA,KACR3F,EAAWkB,GAAK,CAACuB,KAAIiF,YAAW,EAAKC,OAAa,QAANhC,EAAa,QAAQ,GAAI7D,IAAI,gBAG7EH,EAAOnC,GAAG,iBAAiB,SAAC4D,GAC1B,MAAwBA,EAAEa,OAAOpC,OAAO,CAAC,OAAnCO,EAAN,EAAMA,IAAKC,EAAX,EAAWA,KAAMI,EAAjB,EAAiBA,GACjBzC,EAAWkB,GAAK,CAAEuB,KAAIL,MAAKC,OAAKqF,YAAW,EAAMC,OAAO/F,SAAS2F,MAAOzF,IAAK,gBAE/EH,EAAOnC,GAAG,kBAAkB,SAAC4D,GAC3B,MAAwCA,EAAEa,OAAOpC,OAAO,CAAC,OAAnD+F,EAAN,EAAMA,OAAQC,EAAd,EAAcA,OAAQzF,EAAtB,EAAsBA,IAAKC,EAA3B,EAA2BA,KAAMI,EAAjC,EAAiCA,GACjCzC,EAAWkB,GAAK,CAAE0G,SAAQxF,MAAKC,OAAMwF,SAAOH,YAAW,EAAMC,OAAO/F,SAAS2F,MAAO9E,KAAIX,IAAK,gBAE/FH,EAAOnC,GAAG,mBAAmB,SAAC4D,GAC5B,MAA+BA,EAAEa,OAAOpC,OAAO,CAAC,OAA1CiG,EAAN,EAAMA,MAAO1F,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,KAAMI,EAAxB,EAAwBA,GACxBzC,EAAWkB,GAAK,CAAE4G,QAAOrF,KAAIL,MAAIsF,YAAW,EAAMC,OAAO/F,SAAS2F,MAAOlF,OAAMP,IAAK,gBAEtFH,EAAOnC,GAAG,gBAAgB,SAAC4D,GACzBA,EAAE2E,KAAK/D,IAAI,CAAEvB,GAAIC,QACjBgE,GAAItD,EAAE2E,MACN/H,EAAWkB,GAAD,YAAC,eAAUkC,EAAE2E,KAAKlG,OAAO,CAAC,QAA1B,IAAkCC,IAAK,YHqBpC,SAAC7B,EAAUV,GAC5BJ,EAAOK,GAAP,qBAAwBS,IAAa,SAAAC,GACnCX,EAAGW,MGpBH8H,CAAW9G,IAAK,SAAC+G,GACfvB,GAAIuB,GAEY,QAAZA,EAAInG,IACU,QAAZmG,EAAItC,KACNhE,EAAOI,IAAI,IAAII,SAAO9B,KAAK4H,IACL,WAAbA,EAAItC,KACbhE,EAAOI,IAAI,IAAII,SAAO/B,OAAO6H,IACP,WAAbA,EAAItC,KACbhE,EAAOI,IAAI,IAAII,SAAOgB,MAAM8E,EAAI/E,KAAM+E,IAChB,SAAbA,EAAItC,MACbhE,EAAOI,IAAI,IAAII,SAAO+F,KAAKD,EAAIF,KAAME,IAElB,aAAZA,EAAInG,IACbH,EAAOwG,SAASrE,SAAQ,SAACV,GACnBA,EAAEX,IAAMwF,EAAIxF,IAEdW,EAAEY,IAAIiE,MAGW,SAAZA,EAAInG,IACbH,EAAOwG,SAASrE,SAAQ,SAACV,GACnBA,EAAEX,IAAMwF,EAAIxF,IACdW,EAAEY,IAAI,CAAEd,KAAM+E,EAAI/E,UAGD,WAAZ+E,EAAInG,IACbH,EAAOwG,SAASrE,SAAQ,SAACV,GACnBA,EAAEX,IAAMwF,EAAIxF,IACdd,EAAOiC,OAAOR,MAGG,sBAAZ6E,EAAInG,KACbH,EAAOqC,IAAI,CAAEG,gBAAiB8D,EAAIzF,OAEpCb,EAAOK,eAITL,EAAOnC,GAAG,eAAe,SAAU4I,GACjC,IAAIC,EAAQD,EAAIhF,EAAEkF,OACdC,EAAO5G,EAAO6G,WAClBD,GAAI,SAAI,KAASF,IACN,KAAIE,EAAO,IAClBA,EAAO,MAAMA,EAAO,KACxB5G,EAAO8G,YAAY,CAAEC,EAAGN,EAAIhF,EAAEuF,QAASC,EAAGR,EAAIhF,EAAEyF,SAAWN,GAC3DH,EAAIhF,EAAE0F,iBACNV,EAAIhF,EAAE2F,kBACN,IAAIC,EAAMnG,KAAKoG,kBACXV,EAAO,IACTS,EAAI,GAAK,IAAO,IAAOT,EAAQ,EAC/BS,EAAI,GAAK,IAAO,IAAOT,EAAQ,IAE3BS,EAAI,IAAM,EACZA,EAAI,GAAK,EACAA,EAAI,GAAKrH,EAAOuH,WAAa,IAAOX,IAC7CS,EAAI,GAAKrH,EAAOuH,WAAa,IAAOX,GAElCS,EAAI,IAAM,EACZA,EAAI,GAAK,EACAA,EAAI,GAAKrH,EAAOwH,YAAc,IAAOZ,IAC9CS,EAAI,GAAKrH,EAAOwH,YAAc,IAAOZ,OAM3C5G,EAAOnC,GAAG,cAAc,SAAU4I,GAChC,IAAIgB,EAAMhB,EAAIhF,GACK,IAAfgG,EAAIC,SACNxG,KAAKyG,YAAa,EAClBzG,KAAK0G,WAAY,EACjB1G,KAAK2G,SAAWJ,EAAIK,QACpB5G,KAAK6G,SAAWN,EAAIO,YAGxBhI,EAAOnC,GAAG,cAAc,SAAU4I,GAChC,GAAIvF,KAAKyG,WAAY,CACnB,IAAIlG,EAAIgF,EAAIhF,EACR4F,EAAMnG,KAAKoG,kBACfD,EAAI,IAAM5F,EAAEqG,QAAU5G,KAAK2G,SAC3BR,EAAI,IAAM5F,EAAEuG,QAAU9G,KAAK6G,SAC3B7G,KAAK+G,mBACL/G,KAAK2G,SAAWpG,EAAEqG,QAClB5G,KAAK6G,SAAWtG,EAAEuG,YAGtBhI,EAAOnC,GAAG,YAAY,SAAU4I,GAG9BvF,KAAKgH,qBAAqBhH,KAAKoG,mBAC/BpG,KAAKyG,YAAa,EAClBzG,KAAK0G,WAAY,KAkBnBO,IACGC,KADH,UACWjL,EADX,eAC6B,CAAEa,IAAKX,KAAKC,aAAaC,QAAQ,SAC3D8K,MAAK,SAAC5G,GACYA,EAATlD,KACC+J,QACPjD,GAAQ,GAERA,GAAQ,MAId8C,IAAMC,KAAN,UAAcjL,EAAd,gBAAiC,CAAE2D,GAAGvB,KAAO8I,MAAK,SAAC5G,GAC/C,IAAOlD,EAAQkD,EAARlD,KACPwG,GAAIxG,GACAA,EAAK+J,QAEPrI,SAASsI,MAAT,UAAoBhK,EAAKJ,KAAzB,aAEA8B,SAASsI,MAAQ,oBACjBtI,SAASuI,cAAc,cAAcC,UAAY,uDAGtD,IAED,yBAAK1F,UAAU,aACb,kBAAC,GAAD,MACA,4BAAQjC,GAAG,aAAa+C,MAAO,CAACC,OAAO,aAAD,OAAc7D,SAAS2F,QAAUhC,IAAKwB,M,SCnM5EG,G,4MACJmD,MAAQ,CACNC,WAAY,G,EA4CdC,kBAAoB,SAACnH,GACnB,GAAK,EAAKoH,MAAMC,eAAhB,CAIA,IAAMvI,EAAO,EAAKwI,KAAKC,wBACvB,EAAKC,IAAIC,YAET,EAAKC,MAAQ1H,EAAEqG,QAAUvH,EAAKG,KAC9B,EAAK0I,MAAQ3H,EAAEuG,QAAUzH,EAAKE,IAC9B,EAAK3C,SAAU,I,EAGjBuL,kBAAoB,SAAC5H,GACnB,GAAI,EAAK3D,QAAS,CAChB,IAAMyC,EAAO,EAAKwI,KAAKC,wBACjBM,EAAW7H,EAAEqG,QAAUvH,EAAKG,KAC5B6I,EAAW9H,EAAEuG,QAAUzH,EAAKE,IAElC,EAAK+I,KAAK,EAAKL,MAAO,EAAKC,MAAOE,EAAUC,GAC5C,EAAKE,SAED,EAAKZ,MAAMa,QACb,EAAKb,MAAMa,OAAO,CAChB7D,KAAM,CACJkB,EAAG,EAAKoC,MACRlC,EAAG,EAAKmC,OAEVO,GAAI,CACF5C,EAAGuC,EACHrC,EAAGsC,GAELK,WAAY,EAAKf,MAAMe,WACvBC,UAAW,EAAKhB,MAAMiB,YAI1B,EAAKX,MAAQG,EACb,EAAKF,MAAQG,I,EAIjBQ,gBAAkB,WAChB,EAAKjM,SAAU,G,EAGjBkM,kBAAoB,SAACvI,GACnB,GAAK,EAAKoH,MAAMC,eAAhB,CAGA,IACY5K,EADZ,YAEIuD,EADFwI,QADF,MAGM1J,EAAO,EAAKwI,KAAKC,wBACvB,EAAKC,IAAIC,YAET,EAAKC,MAAQjL,EAAE4J,QAAUvH,EAAKG,KAC9B,EAAK0I,MAAQlL,EAAE8J,QAAUzH,EAAKE,IAC9B,EAAK3C,SAAU,EACf2D,EAAE0F,mB,EAGJ+C,kBAAoB,SAACzI,GACnB,GAAI,EAAK3D,QAAS,CAChB,IACYI,EADZ,YAEIuD,EADFwI,QADF,MAGM1J,EAAO,EAAKwI,KAAKC,wBACjBM,EAAWpL,EAAE4J,QAAUvH,EAAKG,KAC5B6I,EAAWrL,EAAE8J,QAAUzH,EAAKE,IAElC,EAAK+I,KAAK,EAAKL,MAAO,EAAKC,MAAOE,EAAUC,GAC5C,EAAKE,SAED,EAAKZ,MAAMa,QACb,EAAKb,MAAMa,OAAO,CAChB7D,KAAM,CACJkB,EAAG,EAAKoC,MACRlC,EAAG,EAAKmC,OAEVO,GAAI,CACF5C,EAAGuC,EACHrC,EAAGsC,GAELK,WAAY,EAAKf,MAAMe,WACvBC,UAAW,EAAKhB,MAAMiB,YAI1B,EAAKX,MAAQG,EACb,EAAKF,MAAQG,EAEf9H,EAAE0F,kB,EAEJgD,gBAAkB,WAChB,EAAKrM,SAAU,G,uDAxIjB,WACE,IAAMkC,EAASkB,KAAK6H,KACpB/I,EAAOoK,iBAAiB,aAAclJ,KAAK8I,mBAAmB,GAC9DhK,EAAOoK,iBAAiB,YAAalJ,KAAKgJ,mBAAmB,GAC7DlK,EAAOoK,iBAAiB,WAAYlJ,KAAKiJ,iBAAiB,GAC1DnK,EAAO6D,MAAMlD,MAAQ,OACrBX,EAAO6D,MAAMjD,OAAS,OACtBZ,EAAOW,MAAQX,EAAOqK,YACtBrK,EAAOY,OAASZ,EAAOsK,aACvBpJ,KAAK+H,IAAMjJ,EAAOuK,WAAW,Q,uCAG/B,SAA0BC,GAGxB,GAAIA,EAAUC,OAASD,EAAUC,MAAMC,OAASxJ,KAAKwH,MAAMC,WAAY,CACrE,IAAK,IAAI1F,EAAI/B,KAAKwH,MAAMC,WAAY1F,EAAIuH,EAAUC,MAAMC,OAAQzH,GAAK,EAAG,CAEtE,IAAM0H,EAAIH,EAAUC,MAAMxH,GAC1B/B,KAAKsI,KAAKmB,EAAE9E,KAAKkB,EAAG4D,EAAE9E,KAAKoB,EAAG0D,EAAEhB,GAAG5C,EAAG4D,EAAEhB,GAAG1C,GAG7C/F,KAAKuI,SAELvI,KAAK0J,SAAS,CACZjC,WAAY6B,EAAUC,MAAMC,Y,oBAKlC,WACExJ,KAAK+H,IAAIjD,W,kBAGX,SAAK6E,EAAIC,EAAIC,EAAIC,GACf9J,KAAK+H,IAAIgC,YAAc/J,KAAK2H,MAAMe,WAClC1I,KAAK+H,IAAIa,UAAY5I,KAAK2H,MAAMiB,UAChC5I,KAAK+H,IAAIiC,OAAOL,EAAIC,GACpB5J,KAAK+H,IAAIkC,OAAOJ,EAAIC,K,oBAqGtB,WAAU,IAAD,OACP,OACE,4BACEpH,IAAK,SAACmF,GAAD,OAAW,EAAKA,KAAOA,GAC5BlF,MAAO3C,KAAK2H,MAAMuC,YAClBC,YAAanK,KAAK0H,kBAClB0C,YAAapK,KAAKmI,kBAClBkC,UAAWrK,KAAK6I,sB,GAvJHyB,aAiKrBjG,GAAOkG,aAAe,CACpB7B,WAAY,UACZE,UAAW,EACXsB,YAAa,CACX5I,gBAAiB,UACjBkJ,OAAQ,WAEV5C,gBAAgB,EAChB2B,MAAO,IAGMlF,UC3JAoG,I,MAhBA,SAAC,GAA2B,IAAzBpD,EAAwB,EAAxBA,MAAOqD,EAAiB,EAAjBA,IAAKhG,EAAY,EAAZA,MAC5B,OACE,yBACE/B,MAAO,CAAEgI,WAAYjG,GAAS,QAC9B7C,UAAU,+DAEV,wBAAIA,UAAU,mCAAmCwF,GACjD,yBAAKxF,UAAU,wDAAf,OACG6I,QADH,IACGA,OADH,EACGA,EAAK5I,KAAI,SAACvB,GACT,OAAOA,SCITsD,GAAQC,QAARD,IACa+G,G,kDACnB,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IAuCRkD,WAAa,SAACC,IN5BI,SAACA,GACnBxO,EAAOO,KAAK,cAAeiO,GM6BzBC,CAAY,aAAE3N,UAAW,EAAKuK,MAAMvK,WAAc0N,KAxClD,EAAKtD,MAAQ,CACX+B,MAAO,GACPyB,KAAM,CAAE/N,KAAM,IACdyL,WAAY,QACZzL,KAAM,cACNgO,SAAS,GAPM,E,qDAUnB,WAAqB,INqBa7N,EAAWV,EMrBzB,OAEZkD,EAAKtB,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MAC3CmF,GAAIjE,GACJqH,IAAMC,KAAN,UAAcjL,EAAd,gBAAiC,CAAE2D,OAAMuH,MAAK,SAAC5G,GAC7C,IAAQlD,EAASkD,EAATlD,KACRwG,GAAIxG,GACAA,EAAK+J,SACP,EAAKsC,SAAS,CAAEuB,SAAS,EAAMhO,KAAMI,EAAKJ,OAE1C8B,SAASsI,MAAT,UAAoBhK,EAAKJ,KAAzB,aAEA,EAAKyM,SAAS,CAAEzM,KAAM,iBNSMG,EMLL4C,KAAK2H,MAAMvK,UNKKV,EMLM,SAACwO,GAEhD,EAAKxB,UAAS,SAACyB,GACb,MAAO,CAAE5B,MAAM,GAAD,oBAAM4B,EAAK5B,OAAX,aAAqB2B,EAAQ3B,aNG9B6B,IAAGC,WAAWC,kBAC/B,SAACC,GAAD,OAAOjP,EAAOK,GAAP,qBAAwBS,GAAamO,MAC5C,SAACA,GAAD,OAAOjP,EAAOkP,IAAP,qBAAyBpO,GAAamO,MAI5CE,WAAW,KACX3J,KAAI,SAACyH,GAAD,MAAY,CAAEA,YACFmC,WAAU,SAACR,GAAD,OAAaxO,EAAGwO,MAG7C5O,EAAOO,KAAK,6BAA8BO,GA3BZ,SAACA,EAAWV,GACvB0O,IAAGC,WAAWC,kBAC/B,SAACC,GAAD,OAAOjP,EAAOK,GAAP,kBAAqBS,GAAamO,MACzC,SAACA,GAAD,OAAOjP,EAAOkP,IAAP,kBAAsBpO,GAAamO,MAIzCE,WAAW,KACX3J,KAAI,SAACyH,GAAD,MAAY,CAAEA,YACFmC,WAAU,SAACR,GAAD,OAAaxO,EAAGwO,MAG7C5O,EAAOO,KAAK,0BAA2BO,GMKrCuO,CAAwB3L,KAAK2H,MAAMvK,WAAW,SAAC8N,GAC7C,EAAKxB,UAAS,SAACyB,GACb,MAAO,CAAE5B,MAAM,GAAD,oBAAM4B,EAAK5B,OAAX,aAAqB2B,EAAQ3B,iB,oBAUjD,WACE,OACE,oCAEGkB,GAAO,CACNpD,MAAOrH,KAAKwH,MAAMvK,KAClByN,IAAK,CACH,kBAAC,IAAD,CAAMjC,GAAG,aAAa5G,UAAU,OAAhC,gBAKH7B,KAAKwH,MAAMyD,QACV,yBAAKpJ,UAAU,WAEb,kBAAC,GAAD,CACE6G,WAAY1I,KAAKwH,MAAMkB,WACvBF,OAAQxI,KAAK6K,WACbjD,gBAAgB,EAChB2B,MAAOvJ,KAAKwH,MAAM+B,SAGpB,U,GApEyBe,a,qBCPhBsB,G,kDACnB,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAEDH,MAAQ,CACXqE,MAAO,GACPC,SAAU,GACV1E,SAAS,GANM,E,wCASnB,SAAKtE,GAEH,MAA4B9C,KAAKwH,MAAzBqE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf7E,IAAMC,KAAN,UAAcjL,EAAd,iBAA0B6G,GAAQ,CAAE+I,QAAOC,aAAY3E,MAAK,SAAC5G,GAC3D,IAAQlD,EAASkD,EAATlD,KACJA,EAAK+J,SACPhL,aAAa2P,QAAQ,KAAMC,KAAK3O,EAAKuC,KAErCtB,OAAOC,SAAS0N,SAAW,cAG3BrI,MAAMvG,EAAK6O,c,oBAKjB,WAAU,IAAD,OACP,OACE,yBAAKrK,UAAU,cACZ4I,GAAO,CAAEpD,MAAO,YAAaqD,IAAK,GAAIhG,OAAO,IAC9C,yBAAK7C,UAAU,6CACZ7B,KAAKwH,MAAMJ,SAAW,kBAAC,IAAD,CAAUqB,GAAG,eACpC,0BACE5G,UAAU,OACVc,MAAO,CACLlD,MAAO,OACP0M,SAAU,QACVrM,QAAS,OACTsM,OAAQ,QAEVC,SAAU,SAAC9L,GAAD,OAAOA,EAAE0F,mBAEnB,yBAAKpE,UAAU,OAAOU,IAAK+J,KAAKC,IAAI,GAAG9M,MAAM,KAAKC,OAAO,OACzD,wBAAImC,UAAU,yCAAd,qBAIA,2BACEL,SAAU,SAACjB,GAAD,OAAO,EAAKmJ,SAAS,CAAEmC,MAAOtL,EAAEa,OAAOC,SACjDA,MAAOrB,KAAKwH,MAAMqE,MAClB5O,KAAK,QACL6F,KAAK,QACLlD,GAAG,aACHiC,UAAU,oBACV2K,YAAY,gBACZC,UAAQ,EACRC,WAAS,IAGX,2BACElL,SAAU,SAACjB,GAAD,OAAO,EAAKmJ,SAAS,CAAEoC,SAAUvL,EAAEa,OAAOC,SACpDA,MAAOrB,KAAKwH,MAAMsE,SAClB7O,KAAK,WACL6F,KAAK,WACLlD,GAAG,gBACHiC,UAAU,eACV2K,YAAY,WACZC,UAAQ,IAGV,4BACEzK,QAAS,SAACzB,GAAD,OAAO,EAAKoM,KAAK,WAC1B9K,UAAU,wDACViB,KAAK,UAHP,WAQA,4BACEd,QAAS,SAACzB,GAAD,OAAO,EAAKoM,KAAK,WAC1B9K,UAAU,qDACViB,KAAK,UAHP,kB,GA9EsBwH,a,kBCNnBsC,OAAMC,MAAK,WACxB,OACE,yBAAKhL,UAAU,WACb,kBAAC,WAAD,KACE,kBAAC,QAAD,CAAMxE,KAAM,CAAEwI,EAAG,EAAGE,EAAG,IACvB,wBAAIlE,UAAU,OAAd,kBACE,wBAAIA,UAAU,MACd,yFAKF,kBAAC,QAAD,CAAMxE,KAAM,CAAE0I,EAAG,IAAM+G,MAAO,IAC5B,wBAAIjL,UAAU,OAAd,8BACA,wBAAIA,UAAU,YACd,4BAAK,KAAL,oCACA,4BAAK,KAAL,0EACA,4BAAK,KAAL,wCAIF,kBAAC,QAAD,CAAMxE,KAAM,CAAEwI,EAAG,IAAME,GAAI,IAAM+G,MAAO,EAAGC,QAAS,GAAIC,QAAS,KACjE,wBAAInL,UAAU,OAAd,4BACE,wBAAIA,UAAU,YACZ,4BAAK,KAAL,6CACA,4BAAK,KAAL,wDACA,4BAAK,KAAL,kDACA,4BAAK,KAAL,oDAIJ,kBAAC,QAAD,CAAMxE,KAAM,CAAEwI,EAAG,IAAME,EAAG,IAAM+G,MAAO,EAAEG,EAAE,IAAMF,QAAS,GAAIC,SAAU,GAAGE,QAAQ,KACjF,wBAAIrL,UAAU,MAAd,gBACA,wBAAIA,UAAU,YACZ,4BAAK,KAAL,4CACA,4BAAK,KAAL,4DACA,4BAAK,KAAL,+CACA,4BAAK,KAAL,kCACA,4BAAK,KAAL,2CAIJ,kBAAC,QAAD,CAAMxE,KAAM,CAACwI,EAAG,IAAME,EAAG,IAAM+G,MAAO,EAAEC,QAAS,GAAIC,QAAS,EAAGE,QAAQ,MACvE,wBAAIrL,UAAU,MAAd,2BACA,wBAAIA,UAAU,YACZ,4BAAK,KAAL,kCACA,4BAAK,KAAL,wGACA,4BAAK,KAAL,8HACA,4BAAK,KAAL,oIAIJ,kBAAC,QAAD,CAAMxE,KAAM,CAACwI,EAAG,IAAME,EAAG,IAAKkH,EAAE,IAAMH,MAAO,EAAEC,QAAS,GAAIC,QAAS,GAAIE,QAAQ,MAC/E,wBAAIrL,UAAU,MAAd,gBACE,4BAAK,KAAL,IAAW,uBAAGT,OAAQ,SAAU5C,KAAK,0CAA1B,oCACX,4BAAK,KAAL,IAAW,uBAAG4C,OAAQ,SAAU5C,KAAK,4CAA1B,sCAIf,kBAAC,QAAD,CAAMnB,KAAM,CAACwI,EAAG,IAAME,EAAG,IAAKkH,EAAE,IAAMH,MAAO,EAAEC,QAAS,GAAIC,QAAS,GAAIE,QAAQ,KAC/E,wBAAIrL,UAAU,MAAd,gBACA,wBAAIA,UAAU,MACd,kDACA,4DACA,6DAKF,kBAAC,QAAD,CAAMxE,KAAM,CAACwI,EAAG,IAAME,EAAG,IAAKkH,EAAE,IAAMH,MAAO,EAAEC,QAAS,IAAKC,QAAS,IAAKE,QAAQ,KACjF,wBAAIrL,UAAU,MAAd,kBClBKsL,GA9CE,WACf,MAAkB1L,oBAAS,GAA3B,mBAAOgI,EAAP,KAAU2D,EAAV,KAaA,OAXAnG,IACGC,KADH,UACWjL,EADX,eAC6B,CAAEa,IAAKX,KAAKC,aAAaC,QAAQ,SAC3D8K,MAAK,SAAC5G,GACYA,EAATlD,KACC+J,QACPgG,GAAK,GAELA,GAAK,MAGXrO,SAASsI,MAAQ,QAEf,yBAAKxF,UAAW,YACb4I,GAAO,CACNpD,MAAO,QACPqD,IAAK,CACFjB,EAKC,4BACE5H,UAAU,MACVG,QAAS,WACP5F,aAAa2P,QAAQ,KAAM,IAC3BqB,GAAK,KAJT,WAJA,kBAAC,IAAD,CAAM3E,GAAG,OAAO5G,UAAU,OAA1B,UAcF4H,GACE,kBAAC,IAAD,CAAMhB,GAAG,YAAY5G,UAAU,OAA/B,gBAMN,kBAAC,GAAD,Q,UChDewL,I,yDACnB,aAAe,IAAD,8BACZ,gBACK7F,MAAQ,CACXnG,MAAO,IAHG,E,0CAMd,WAAU,IAAD,OACP,OACE,yBAAKQ,UAAU,sDACb,2BACEyL,OAAQ,SAAC/M,GAAD,OAAO,EAAKmJ,SAAS,CAAErI,MAAOd,EAAEa,OAAOC,SAC/CyB,KAAK,OACL0J,YAAY,uBAEd,yBACE3K,UAAU,kBACVG,QAAS,SAACzB,GACR,EAAKoH,MAAM4F,OAAO,EAAK/F,MAAMnG,OAC7B,EAAKsG,MAAM6F,UACX,EAAK9D,SAAS,CAAErI,MAAO,OAL3B,a,GAf8BiJ,cCa9BzG,GAAQC,QAARD,IACa4J,G,kDACnB,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACDH,MAAQ,CACXkG,SAAU,GACVC,KAAM,GACN7Q,IAAK,GACL8Q,UAAU,EACVC,MAAO,GACP5Q,KAAM,GACN6Q,OAAO,EACP5L,QAAQ,EACR6L,OAAQ,eAXO,E,8CAenB,WAAc,IAAD,OACXtR,GAAyB,SAACG,GACxBiH,GAAI,yBACJ,EAAK6F,UAAS,SAACyB,GAAD,MAAW,CACvBuC,SAAU9Q,EACV+Q,KAAM/Q,EACNmR,OAAQ,8B,wBAId,WAAc,IAAD,OACX9G,IACGC,KADH,UACWjL,EADX,gBAC8B,CAAE2D,GAAIzD,KAAKC,aAAaC,QAAQ,SAC3D8K,MAAK,SAAC5G,GACLsD,GAAItD,GACJ,IACUyN,EACNzN,EADFlD,KAAQ2Q,KAEVjP,SAASsI,MAAT,UAAoB2G,EAAKxE,OAAzB,aACA,EAAKE,UAAS,SAACyB,GAAD,MAAW,CACvBuC,SAAUM,EACVL,KAAMK,EACND,OAAQ,8B,gCAKhB,WAAsB,IAAD,OACnB9G,IACGC,KADH,UACWjL,EADX,eAC6B,CAAEa,IAAKX,KAAKC,aAAaC,QAAQ,SAC3D8K,MAAK,SAAC5G,GACYA,EAATlD,KACC+J,QAEP,EAAK6G,aAEL,EAAKvE,SAAS,CAAExH,QAAQ,S,2BAKhC,YAAuB,IAAD,QXLF,SAACtC,EAAIlD,GACzBuK,IAAMC,KAAKjL,EAAM,kBAAmB,CAAE2D,KAAI9C,IAAKZ,IAAQiL,MAAK,SAAC5G,GAE3D7D,EAAG6D,MWGH2N,CADoB,EAANtO,IACI,SAACc,GACjBmD,GAAInD,GACJ,EAAKuN,kB,4BAGT,YAA6B,IAAD,OAAXrR,EAAW,EAAXA,QACf,OACE,yBAAKiF,UAAU,yCAAyC/E,IAAKF,EAAQuR,KAClEnO,KAAKwH,MAAMoG,UAAY,kBAAC,IAAD,CAAUnF,GAAG,UACrC,yBAAK5G,UAAU,cACb,wBAAIA,UAAU,cAAcjF,EAAQK,MACpC,yBAAK4E,UAAU,0CAGf,kBAAC,IAAD,CACEA,UAAU,oCACV4G,GAAE,wBAAmB7L,EAAQuR,KAC7B/M,OAAQ,UAEP,QAEH,4BACEY,QAAS,SAACzB,GAAD,OAAO,EAAK2N,cAAc,CAAEtO,GAAIhD,EAAQuR,OACjDtM,UAAU,uBAFZ,YAQF,wBAAIA,UAAU,2BACX,IAAIuM,KAAKxR,EAAQyR,WAAWC,qB,oBAMrC,WAAU,IAAD,OACDC,EAAcvO,KAAKwH,MAAMmG,KAAK7L,KAAI,SAAClF,GAAD,OACtC,EAAK4R,eAAe,CAAE5R,UAASqR,WAAY,EAAKA,gBAGlD,OACE,oCACGxD,GAAO,CACNpD,MAAO,YACPqD,IAAK,CACH,kBAAC,IAAD,CAAMjC,GAAG,IAAI5G,UAAU,OACpB,UAEH,yBACEA,UAAW,MACXG,QAAO,sBAAE,sBAAAhF,EAAA,sDACP,EAAK0M,SAAS,CAAEoE,OAAO,IADhB,4CAFX,UASFpJ,OAAO,IAET,kBAAC,KAAD,CACE8I,QAAS,kBAAM,EAAK9D,SAAS,CAAEoE,OAAO,KACtCW,KAAMzO,KAAKwH,MAAMsG,OAEjB,kBAAC,GAAD,CACEN,QAAS,kBAAM,EAAK9D,SAAS,CAAEoE,OAAO,KACtCP,OAAM,uCAAE,WAAOtQ,GAAP,SAAAD,EAAA,sEACA,IAAI0R,SAAQ,SAACC,EAAKC,GACtB7R,EAAc,CAAEE,OAAMH,IAAK,KAC3B6R,OAHI,uBAKA,EAAKV,aALL,2CAAF,yDASV,6BACGjO,KAAKwH,MAAMtF,OAAS,KAAO,kBAAC,IAAD,CAAUuG,GAAG,UAEzC,yBAAK5G,UAAU,uBACb,2BACEiB,KAAK,OACLjB,UAAU,eACVjC,GAAG,oBACH4M,YAAY,SACZnL,MAAOrB,KAAKwH,MAAMqG,MAClBrM,SAAU,SAACjB,GACT,IAAQc,EAAUd,EAAEa,OAAZC,MACR,EAAKqI,SAAS,CACZmE,MAAOxM,EACPsM,KAAM,EAAKnG,MAAMkG,SAASmB,QACxB,SAACC,GAAD,OAAgD,IAAzCA,EAAE7R,KAAK8R,cAAcC,QAAQ3N,YAO9C,yBAAKQ,UAAU,iEACZ0M,EAAY/E,OACX+E,EAEA,wBAAI1M,UAAU,cAAc7B,KAAKwH,MAAMuG,e,GA/JZzD,aCD1B2E,G,4JATb,WACE,OACE,yBAAKpN,UAAU,6BACb,kBAAC,GAAD,W,GAJgB+K,IAAMtC,W,mBCLxB4E,GAAc,CAChBpS,IAAI,IAWSqS,GATG,WAAkC,IAAjC3H,EAAgC,uDAAxB0H,GAAaE,EAAW,uCAItC,OAFHA,EAAOtM,KAEG0E,GCLf3D,GAAOC,QAAPD,IAEDwL,GAAY,CACdrB,KAAK,IAuBMsB,GAnBQ,WAA4B,IAA3B9H,EAA0B,uDAApB6H,GAAWD,EAAS,uCAE9C,OAAOA,EAAOtM,MACV,IAAK,mBACD,OAAO,IAAI4L,SAAQ,SAACC,EAAKC,GACrBnS,GAAyB,SAACG,GACtBiH,GAAI,oBAAoBjH,EAAQ4M,QAChC3F,GAAI2D,EAAMwG,MACXW,EAAI,2BAAKnH,GAAN,IAAawG,KAAKpR,WAMhC,QACI,OAAO4K,ICpBJ+H,gBAAgB,CAAC5C,QAAK/P,aCKtB4S,GALDC,aACVC,GACAC,aAAgBC,OCNL,GACL,WCkBF/L,GAAQC,QAARD,IAoEOgM,G,kDAjEb,WAAYlI,GAAQ,IAAD,8BACjB,cAAMA,IAWRmI,cAAgB,SAAClT,GACf,EAAK8M,SAAS,CAAEqG,gBAAiBnT,KAXjC,EAAK4K,MAAQ,CACXuI,gBAAiB,CAAEnQ,GAAI,GAAI3C,KAAM,IACjCoK,MAAO2I,IAJQ,E,sDAOnB,WACEhQ,KAAK0J,SAAS,CAAErC,MAAO2I,KACvBnM,GAAI2L,GAAMS,c,oBAOZ,WAAU,IAAD,OACP,OACE,kBAAC,IAAD,KACE,yBAAKpO,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqO,OAAK,EAAChL,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CACEA,KAAK,2BACLiL,OAAQ,SAAC5P,GACP,OACE,oCAEE,kBAAC,GAAD,CACEnD,UAAWmD,EAAE6P,MAAMC,OAAOjT,UAC1BR,QAAS,EAAK4K,MAAMuI,sBAc9B,kBAAC,IAAD,CAAQ7K,KAAK,2BAA2BiL,OAAQ,SAAC5P,GAAD,OAC5C,kBAAC,GAAD,CAAWnD,UAAWmD,EAAE6P,MAAMC,OAAOjT,sB,GAvDnCwP,IAAMtC,WCTJgG,QACW,cAA7BhS,OAAOC,SAASgS,UAEe,UAA7BjS,OAAOC,SAASgS,UAEhBjS,OAAOC,SAASgS,SAASH,MACvB,2D,OCVNI,IAASL,OAAO,kBAAC,GAAD,MAASpR,SAAS0R,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzJ,MAAK,SAAC0J,GAClCA,EAAaC,iB","file":"static/js/main.ebd90cab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-circle-fill.0c03fec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-fill.beed5b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-fill.68139605.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-bin-2-fill.8c6aadcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/download-cloud-2-fill.808efe79.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraser-fill.afe1087b.svg\";","module.exports = __webpack_public_path__ + \"static/media/font-color.8cea8ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-fill.aa688ead.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-unlock-fill.88a79c49.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-fill.726090f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.4acc259b.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-cloud-2-fill.b62920c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fill.f95e459e.svg\";","module.exports = __webpack_public_path__ + \"static/media/share.d8e36b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.d2648682.svg\";","const URL = \"https://chitraBackend.gultion.repl.co\";\r\n// const URL = \"http://localhost:3001\"\r\n\r\nexport default URL;\r\n","import openSocket from \"socket.io-client\";\r\nimport Rx from \"rxjs/Rx\";\r\nimport URL from \"./URL\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst _key = atob(localStorage.getItem(\"id\"));\r\nconst token =()=>atob(localStorage.getItem(\"id\"));\r\nconst socket = openSocket(URL);\r\nlet firstTime = true;\r\n// const subscribeForDrawings = (cb) => {\r\n\r\n//     socket.on(`drawing:${_key}`, drawing => cb(drawing));\r\n//     socket.emit('subscribeForDrawings',{key:_key});\r\n// }\r\n\r\nconst subscribeForDrawingsList = (cb) => {\r\n  socket.on(\"drawingList\", (drawing) => cb(drawing));\r\n  socket.emit(\"subscribeForDrawingList\", { key: _key });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst createDrawing = async ({ name, key }) => {\r\n  await socket.emit(\"createDrawing\", { name, key: key, user: _key });\r\n};\r\n\r\nconst publishLine = (line) => {\r\n  socket.emit(\"publishLine\", line);\r\n};\r\n\r\nconst subscribeForPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawing:${drawingId}`, h),\r\n    (h) => socket.off(`drawing:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForPublishLine\", drawingId);\r\n};\r\n\r\nconst subscribeForAllPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawingAll:${drawingId}`, h),\r\n    (h) => socket.off(`drawingAll:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForAllPublishLine\", drawingId);\r\n};\r\n\r\nconst getDrawingById = (id, cb) => {\r\n  socket.on(\"takeDrawing\", (info) => cb(info));\r\n  socket.emit(\"getDrawingById\", id);\r\n};\r\n\r\nconst deleteDrawing = (id, cb) => {\r\n  axios.post(URL + \"/drawing/delete\", { id, key: _key }).then((e) => {\r\n    // log(e);\r\n    cb(e);\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst pullChange = (drawingId,cb) => {\r\n  socket.on(`pullChange:${drawingId}`, data=>{\r\n    cb(data)\r\n  })\r\n};\r\n\r\n\r\nconst pushChange = (drawingId, data)=>{\r\n  socket.emit(`pushChange`, {drawingId, data})\r\n}\r\nconst subscribeForFabric = (drawingId, cb)=>{\r\n\r\n \r\n  socket.on(`giveMeCanvas:${drawingId}`, (id)=>{\r\n    console.log(\"data\")\r\n      socket.emit(`takeMyCanvas`, {id:id,canvas:document.canvas.toJSON(['id'])})\r\n  })\r\n  socket.on(`hereMyCanvas:${drawingId}`, (data)=>{\r\n    if(firstTime){\r\n      if(data.from==\"server\"){\r\n        document.canvas.loadFromJSON(data.json)\r\n      }\r\n      else if(data.from==\"socket\"){\r\n        document.canvas.loadFromJSON(data.json)\r\n        firstTime=false\r\n      }\r\n    }\r\n  })\r\n  socket.emit(`subscribeForFabric`, {drawingId})\r\n}\r\n\r\nconst saveChitr = ({drawingId, json})=>{\r\n  socket.emit(\"saveChitr\", {drawingId,json, key:token()})\r\n}\r\n\r\n\r\nexport {\r\n  // subscribeForDrawings,\r\n  createDrawing,\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  getDrawingById,\r\n  subscribeForDrawingsList,\r\n  subscribeForAllPublishLine,\r\n  deleteDrawing,\r\n  pullChange,\r\n  pushChange,\r\n  subscribeForFabric,\r\n  saveChitr\r\n};\r\n","import Circle from \"./checkbox-blank-circle-fill.svg\"\r\nimport Rect from \"./checkbox-blank-fill.svg\"\r\nimport Cursor from \"./cursor-fill.svg\"\r\nimport Remove from \"./delete-bin-2-fill.svg\"\r\nimport Download from  \"./download-cloud-2-fill.svg\"\r\nimport Erase from \"./eraser-fill.svg\"\r\nimport FontColor from \"./font-color.svg\"\r\nimport Lock from \"./lock-fill.svg\"\r\nimport Unlock from \"./lock-unlock-fill.svg\"\r\nimport Pencil from \"./pencil-fill.svg\"\r\nimport Text from \"./text.svg\"\r\nimport Save from \"./upload-cloud-2-fill.svg\"\r\nimport Fill from \"./fill.svg\"\r\nimport Share from \"./share.svg\"\r\n\r\nconst I = {Circle, Rect, Cursor, Remove, Download, Erase, FontColor,Fill,Share,\r\nLock, Unlock, Pencil, Text, Save}\r\n\r\nexport default I","import React from \"react\";\r\nimport uuid from \"uuid-random\";\r\nimport { fabric } from \"fabric\";\r\nimport { pushChange, saveChitr } from \"../../api\";\r\nimport I from \"../ico/\";\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst did = window.location.href.split(\"/\").pop();\r\nconst shapeAdd = {\r\n  addMain: (shape) => {\r\n    let { canvas } = document;\r\n    pushChange(did, { ...shape.toJSON([\"id\"]), cmd: \"add\" });\r\n    canvas.add(shape);\r\n    canvas.renderAll();\r\n  },\r\n  addRect: function () {\r\n    let { canvas } = document;\r\n    let rect = new fabric.Rect({\r\n      top: 100,\r\n      left: 100,\r\n      width: 100,\r\n      height: 100,\r\n      fill: \"red\",\r\n      id: uuid(),\r\n      padding:3,\r\n      strokeWidth:3\r\n      \r\n    });\r\n    this.addMain(rect);\r\n  },\r\n\r\n  addCircle: function () {\r\n    let { canvas } = document;\r\n    let circ = new fabric.Circle({\r\n      top: 100,\r\n      left: 100,\r\n      radius: 50,\r\n      fill: \"blue\",\r\n      id: uuid(),\r\n      strokeWidth:3\r\n    });\r\n    this.addMain(circ);\r\n  },\r\n  addText: function () {\r\n    let text = new fabric.IText(\"Enter Text\", {\r\n      top: 100,\r\n      left: 100,\r\n      id: uuid(),\r\n    });\r\n    text.on(\"changed\", (e) => {\r\n      let id = text.id;\r\n      pushChange(did, { text: text.text, id, cmd: \"text\" });\r\n    });\r\n    this.addMain(text);\r\n  },\r\n  addDraw: function ({ setDraw }) {\r\n    let { canvas } = document;\r\n    setDraw((k) => !k);\r\n    canvas.isDrawingMode = !canvas.isDrawingMode;\r\n\r\n\r\n\r\n  },\r\n  delete: function () {\r\n    let { canvas } = document;\r\n    let now = canvas.getActiveObject();\r\n    if (now) {\r\n      pushChange(did, { id: now.id, cmd: \"delete\" });\r\n      canvas.remove(now);\r\n    }else{\r\n      canvas.getObjects().forEach(e=>{\r\n        canvas.remove(e)\r\n      })\r\n    }\r\n    canvas.renderAll();\r\n  },\r\n  colorChange:function(e) {\r\n    \r\n    let { canvas } = document;\r\n    if (canvas) {\r\n      let now = canvas.getActiveObject();\r\n      if (now) {\r\n        now.set({ fill: e.target.value });\r\n\r\n        pushChange(did, {\r\n          id: now.id,\r\n          fill: e.target.value,\r\n          cmd: \"modified\",\r\n        });\r\n      } else {\r\n        canvas.set({ backgroundColor: e.target.value });\r\n        pushChange(did, {\r\n          fill: e.target.value,\r\n          cmd: \"changeCanvasColor\",\r\n        });\r\n      }\r\n      canvas.renderAll();\r\n    }\r\n  \r\n  }\r\n};\r\n\r\nconst LineSizeTab = ({onChange})=>{\r\n  const [now ,setNow] = useState([1,2,5,7].findIndex(e=>e==document.canvas.freeDrawingBrush.width))\r\n  return <div className=\"__Tab\">\r\n      {[1,2,5,7].map((e,i)=>{\r\n          return <div onClick={()=>{\r\n            setNow(i);\r\n            onChange(i)\r\n            document.canvas.freeDrawingBrush.width = e\r\n          }} className={`_Tab ${now===i&&\"_Tab_Active\"}`}>{e}</div>\r\n      })}\r\n  </div>\r\n}\r\n\r\nfunction ToolBar({ isAuth, isValid }) {\r\n  const [isDraw, setDraw] = useState(false);\r\n  const colorRef = useRef();\r\n  return (\r\n    <div className=\"ToolBar\" >\r\n      <div className=\"Tab\" onClick={() => shapeAdd.addRect()}>\r\n        <img src={I.Rect} />\r\n      </div>\r\n      <div className=\"Tab\" onClick={() => shapeAdd.addCircle()}>\r\n        <img src={I.Circle} />\r\n      </div>\r\n      <div className=\"Tab\" onClick={() => shapeAdd.addText()}>\r\n        <img src={I.Text} />\r\n      </div>\r\n      <div\r\n        className=\"Tab\"\r\n        onClick={() => shapeAdd.addDraw({ setDraw: (e) => setDraw(e) })}\r\n      >\r\n        <img src={!isDraw ? I.Pencil : I.Cursor} />\r\n\r\n      </div>\r\n    {isDraw&&<LineSizeTab onChange={()=>{}}/>}\r\n      <div\r\n        className=\"Tab\"\r\n        onClick={() => shapeAdd.delete({ setDraw: (e) => setDraw(e) })}\r\n      >\r\n        <img src={I.Remove} />\r\n      </div>\r\n      \r\n      <div\r\n        className=\"Tab\"\r\n        onClick={() => {\r\n          colorRef.current.click();\r\n        }}\r\n      >\r\n        <img src={I.Fill} />\r\n        <input\r\n          ref={colorRef}\r\n          style={{ width: \"0px\", height: \"0px\", border: \"0px\", opacity: \"0\" }}\r\n          type=\"color\"\r\n          onChange={shapeAdd.colorChange}\r\n        />\r\n      </div>\r\n \r\n        <div\r\n          className=\"Tab\"\r\n          onClick={() => {\r\n            saveChitr({ drawingId: did, json: document.canvas.toJSON([\"id\"]) });\r\n          }}\r\n        >\r\n          <img src={I.Save} />\r\n        </div>\r\n    \r\n\r\n      <div\r\n        className=\"Tab\"\r\n        onClick={function () {\r\n          let a = document.createElement(\"a\");\r\n          a.href = document.canvas.toDataURL({\r\n            format: \"jpeg\",\r\n            quality: 1.0,\r\n          });\r\n          a.download = \"canvas.png\";\r\n          a.click();\r\n        }}\r\n      >\r\n        <img src={I.Download} />\r\n      </div>\r\n\r\n      <div\r\n        className=\"Tab\"\r\n        onClick={() => {\r\n          const el = document.createElement(\"textarea\");\r\n          el.value = document.location.href;\r\n          document.body.appendChild(el);\r\n          el.select();\r\n          document.execCommand(\"copy\");\r\n\r\n          document.body.removeChild(el);\r\n          alert(`URL is Copied in Clipboard , paste to share to anybody !`);\r\n        }}\r\n      >\r\n        <img src={I.Share} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToolBar;\r\n","import { fabric } from \"fabric\";\r\nimport \"./index.css\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport uuid from \"uuid-random\";\r\nimport { pushChange, pullChange, subscribeForFabric } from \"../../api\";\r\nimport ToolBar from \"./ToolBar\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport URL from \"../../URL\";\r\nconst { log } = console;\r\n\r\nconst did = window.location.href.split(\"/\").pop();\r\n\r\nfunction NewCanvas() {\r\n  let _width = document.body.clientWidth;\r\n  let _height = document.body.clientHeight;\r\n  let height = () => (_width > _height ? _height : _width / 1.7777777);\r\n  let width = () => (_width > _height ? _height * 1.77777777 : _width);\r\n  const cvs = useRef();\r\n\r\n  const [isAuth, setAuth] = useState(false);\r\n  const [isValid, setValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let canvas = new fabric.Canvas(cvs.current, {\r\n      // width:width()*0.9,\r\n      // height:height()*0.9\r\n      width: 640,\r\n      height: 640 / 1.7777,\r\n      backgroundColor: \"white\",\r\n    });\r\n    document.canvas = canvas;\r\n    const ran = ()=>Math.floor(Math.random()*256)\r\n    document.color = `rgb(${ran()},${ran()},${ran()})`\r\n    cvs.current.style.border = `3px solid ${document.color}`\r\n    subscribeForFabric(did, () => {});\r\n\r\n    canvas.on(\"object:modified\",(e)=>{\r\n      const {id,type} = e.target.toJSON(['id'])\r\n        pushChange(did, {id, selectable:true,stroke:type==\"path\"?\"black\":\"\", cmd:\"modified\"})\r\n    })\r\n\r\n    canvas.on(\"object:moving\", (e) => {\r\n      let { top, left, id } = e.target.toJSON([\"id\"]);\r\n      pushChange(did, { id, top, left,selectable:false,stroke:document.color, cmd: \"modified\" });\r\n    });\r\n    canvas.on(\"object:scaling\", (e) => {\r\n      let { scaleX, scaleY, top, left, id } = e.target.toJSON([\"id\"]);\r\n      pushChange(did, { scaleX, top, left, scaleY,selectable:false,stroke:document.color, id, cmd: \"modified\" });\r\n    });\r\n    canvas.on(\"object:rotating\", (e) => {\r\n      let { angle, top, left, id } = e.target.toJSON([\"id\"]);\r\n      pushChange(did, { angle, id, top,selectable:false,stroke:document.color, left, cmd: \"modified\" });\r\n    });\r\n    canvas.on(\"path:created\", (e) => {\r\n      e.path.set({ id: uuid() });\r\n      log(e.path);\r\n      pushChange(did, { ...e.path.toJSON([\"id\"]), cmd: \"add\" });\r\n    });\r\n\r\n    pullChange(did, (get) => {\r\n      log(get);\r\n\r\n      if (get.cmd === \"add\") {\r\n        if (get.type == \"rect\") {\r\n          canvas.add(new fabric.Rect(get));\r\n        } else if (get.type === \"circle\") {\r\n          canvas.add(new fabric.Circle(get));\r\n        } else if (get.type === \"i-text\") {\r\n          canvas.add(new fabric.IText(get.text, get));\r\n        } else if (get.type === \"path\") {\r\n          canvas.add(new fabric.Path(get.path, get));\r\n        }\r\n      } else if (get.cmd === \"modified\") {\r\n        canvas._objects.forEach((e) => {\r\n          if (e.id == get.id) {\r\n            \r\n            e.set(get);\r\n          }\r\n        });\r\n      } else if (get.cmd === \"text\") {\r\n        canvas._objects.forEach((e) => {\r\n          if (e.id == get.id) {\r\n            e.set({ text: get.text });\r\n          }\r\n        });\r\n      } else if (get.cmd === \"delete\") {\r\n        canvas._objects.forEach((e) => {\r\n          if (e.id == get.id) {\r\n            canvas.remove(e);\r\n          }\r\n        });\r\n      } else if (get.cmd === \"changeCanvasColor\") {\r\n        canvas.set({ backgroundColor: get.fill });\r\n      }\r\n      canvas.renderAll();\r\n    });\r\n\r\n    //zoom\r\n    canvas.on(\"mouse:wheel\", function (opt) {\r\n      var delta = opt.e.deltaY;\r\n      var zoom = canvas.getZoom();\r\n      zoom *= 0.999 ** delta;\r\n      if (zoom > 20) zoom = 20;\r\n      if (zoom < 0.01) zoom = 0.01;\r\n      canvas.zoomToPoint({ x: opt.e.offsetX, y: opt.e.offsetY }, zoom);\r\n      opt.e.preventDefault();\r\n      opt.e.stopPropagation();\r\n      var vpt = this.viewportTransform;\r\n      if (zoom < 400 / 1000) {\r\n        vpt[4] = 200 - (1000 * zoom) / 2;\r\n        vpt[5] = 200 - (1000 * zoom) / 2;\r\n      } else {\r\n        if (vpt[4] >= 0) {\r\n          vpt[4] = 0;\r\n        } else if (vpt[4] < canvas.getWidth() - 1000 * zoom) {\r\n          vpt[4] = canvas.getWidth() - 1000 * zoom;\r\n        }\r\n        if (vpt[5] >= 0) {\r\n          vpt[5] = 0;\r\n        } else if (vpt[5] < canvas.getHeight() - 1000 * zoom) {\r\n          vpt[5] = canvas.getHeight() - 1000 * zoom;\r\n        }\r\n      }\r\n    });\r\n\r\n    //pan\r\n    canvas.on(\"mouse:down\", function (opt) {\r\n      var evt = opt.e;\r\n      if (evt.altKey === true) {\r\n        this.isDragging = true;\r\n        this.selection = false;\r\n        this.lastPosX = evt.clientX;\r\n        this.lastPosY = evt.clientY;\r\n      }\r\n    });\r\n    canvas.on(\"mouse:move\", function (opt) {\r\n      if (this.isDragging) {\r\n        var e = opt.e;\r\n        var vpt = this.viewportTransform;\r\n        vpt[4] += e.clientX - this.lastPosX;\r\n        vpt[5] += e.clientY - this.lastPosY;\r\n        this.requestRenderAll();\r\n        this.lastPosX = e.clientX;\r\n        this.lastPosY = e.clientY;\r\n      }\r\n    });\r\n    canvas.on(\"mouse:up\", function (opt) {\r\n      // on mouse up we want to recalculate new interaction\r\n      // for all objects, so we call setViewportTransform\r\n      this.setViewportTransform(this.viewportTransform);\r\n      this.isDragging = false;\r\n      this.selection = true;\r\n    });\r\n\r\n    // let _text = new fabric.IText(\"Here is Tex\", {top:100, left:100, width:100})\r\n    // let _box = new fabric.Rect({top:100, left:100, width:100,height:50, fill:\"grey\"})\r\n    // let _group = new fabric.Group([_text, _box], {top:200, left:200});\r\n    // canvas.add(_group)\r\n    // canvas.renderAll()\r\n\r\n    // window.onload = window.onresize=()=>{\r\n    // _width = document.body.clientWidth\r\n    //  _height = document.body.clientHeight\r\n    //  height =()=> _width>_height?_height:_width/1.7777777;\r\n    //  width =()=> _width>_height?_height*1.77777777:_width;\r\n    //     log({width:width(), height:height()})\r\n    //     canvas.setDimensions({width:width()*0.9, height:height()*0.9})\r\n    //     canvas.renderAll()\r\n    // }\r\n    axios\r\n      .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        const { data } = e;\r\n        if (data.success) {\r\n          setAuth(true);\r\n        } else {\r\n          setAuth(false);\r\n        }\r\n      });\r\n\r\n    axios.post(`${URL}/drawing/get`, { id:did }).then((e) => {\r\n        const {data} = e\r\n        log(data)\r\n        if (data.success) {\r\n      \r\n          document.title = `${data.name} - Chitr`;\r\n        } else {\r\n          document.title = \"NOT FOUND DRAWING\";\r\n          document.querySelector(\".NewCanvas\").innerHTML = \"<h1 style='margin:auto'>NOT FOUND DRAWING</h1>\"\r\n        }\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"NewCanvas\">\r\n      <ToolBar />\r\n      <canvas id=\"_newCanvas\" style={{border:`2px solid ${document.color}`}} ref={cvs}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCanvas;\r\n","import React, { Component } from \"react\";\r\nclass Canvas extends Component {\r\n  state = {\r\n    lastLength: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.node;\r\n    canvas.addEventListener(\"touchstart\", this.handleOnTouchDown, false);\r\n    canvas.addEventListener(\"touchmove\", this.handleOnTouchMove, false);\r\n    canvas.addEventListener(\"touchend\", this.handleOnTouchUp, false);\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100%\";\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //   log({nextProps})\r\n    //todo: find a better way to see if a coordinate has been applied\r\n    if (nextProps.lines && nextProps.lines.length > this.state.lastLength) {\r\n      for (let i = this.state.lastLength; i < nextProps.lines.length; i += 1) {\r\n        // console.log('looping through lines ', i);\r\n        const l = nextProps.lines[i];\r\n        this.draw(l.from.x, l.from.y, l.to.x, l.to.y);\r\n      }\r\n\r\n      this.update();\r\n\r\n      this.setState({\r\n        lastLength: nextProps.lines.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    this.ctx.strokeStyle = this.props.brushColor;\r\n    this.ctx.lineWidth = this.props.lineWidth;\r\n    this.ctx.moveTo(lX, lY);\r\n    this.ctx.lineTo(cX, cY);\r\n  }\r\n\r\n  handleOnMouseDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n    this.drawing = true;\r\n  };\r\n\r\n  handleOnMouseMove = (e) => {\r\n    if (this.drawing) {\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n  };\r\n\r\n  handleonMouseUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  handleOnTouchDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n    const {\r\n      touches: [a],\r\n    } = e;\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = a.clientX - rect.left;\r\n    this.lastY = a.clientY - rect.top;\r\n    this.drawing = true;\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnTouchMove = (e) => {\r\n    if (this.drawing) {\r\n      const {\r\n        touches: [a],\r\n      } = e;\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = a.clientX - rect.left;\r\n      const currentY = a.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  handleOnTouchUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={(node) => (this.node = node)}\r\n        style={this.props.canvasStyle}\r\n        onMouseDown={this.handleOnMouseDown}\r\n        onMouseMove={this.handleOnMouseMove}\r\n        onMouseUp={this.handleonMouseUp}\r\n\r\n        // onTouchStart={this.handleOnTouchDown}\r\n        // onTouchMove={this.handleOnMouseMove}\r\n        // onTouchEnd={this.handleonMouseUp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCanvas.defaultProps = {\r\n  brushColor: \"#000000\",\r\n  lineWidth: 2,\r\n  canvasStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n  },\r\n  drawingEnabled: false,\r\n  lines: [],\r\n};\r\n\r\nexport default Canvas;\r\n","\r\nimport React from \"react\";\r\nconst NavBar = ({ title, btn, color }) => {\r\n  return (\r\n    <div\r\n      style={{ background: color && \"none\" }}\r\n      className=\"NavBar d-flex align-items-center justify-content-around p-1\"\r\n    >\r\n      <h1 className=\"text-light display-3 float-left\">{title}</h1>\r\n      <div className=\"d-flex align-items-center justify-content-around p-1\">\r\n        {btn?.map((e) => {\r\n          return e;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component} from \"react\";\r\nimport Canvas from \"./Canvas\";\r\nimport {\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  subscribeForAllPublishLine,\r\n} from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./core.css\";\r\n\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst { log } = console;\r\nexport default class Drawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lines: [],\r\n      info: { name: \"\" },\r\n      brushColor: \"black\",\r\n      name: \"Loading....\",\r\n      isFound: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // log(this.props)\r\n    const id = window.location.href.split(\"/\").pop();\r\n    log(id);\r\n    axios.post(`${URL}/drawing/get`, { id }).then((e) => {\r\n      const { data } = e;\r\n      log(data);\r\n      if (data.success) {\r\n        this.setState({ isFound: true, name: data.name });\r\n        // log(data)\r\n        document.title = `${data.name} - Chitr`;\r\n      } else {\r\n        this.setState({ name: \"NOT FOUND\" });\r\n      }\r\n    });\r\n\r\n    subscribeForAllPublishLine(this.props.drawingId, (lineEvt) => {\r\n      // log(lineEvt)\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n\r\n    subscribeForPublishLine(this.props.drawingId, (lineEvt) => {\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleDraw = (line) => {\r\n    // log(line)\r\n    publishLine({ drawingId: this.props.drawingId, ...line });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <h1>{this.state.name}</h1> */}\r\n        {NavBar({\r\n          title: this.state.name,\r\n          btn: [\r\n            <Link to=\"/dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>,\r\n          ],\r\n        })}\r\n        {this.state.isFound ? (\r\n          <div className=\"Drawing\">\r\n            {/* <ColorBox onClick={color=>{this.setState({brushColor:color})}}/> */}\r\n            <Canvas\r\n              brushColor={this.state.brushColor}\r\n              onDraw={this.handleDraw}\r\n              drawingEnabled={true}\r\n              lines={this.state.lines}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Canvas.defaultProps = {\r\n//     brushColor: '#000000',\r\n//     lineWidth: 2,\r\n//     canvasStyle: {\r\n//       backgroundColor: '#FFFFFF',\r\n//       cursor: 'pointer'\r\n//     },\r\n//     drawingEnabled: false,\r\n//     lines: []\r\n//   };\r\n","import React, { Component } from \"react\";\r\nimport pen from \"../pen.svg\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport URL from \"../URL\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./core.css\";\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: false\r\n    };\r\n  }\r\n  auth(type) {\r\n    // type : ['signin', 'signup']\r\n    const { email, password } = this.state;\r\n    axios.post(`${URL}/auth/${type}`, { email, password }).then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        localStorage.setItem(\"id\", btoa(data.id))\r\n        // this.setState({ success: true });\r\n        window.location.pathname = '/dashboard'\r\n        // console.log(data)\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth h-100\">\r\n        {NavBar({ title: \"Auth Page\", btn: [], color: true })}\r\n        <div className=\"container-fluid d-flex align-items-center\">\r\n          {this.state.success && <Redirect to=\"/dashboard\" />}\r\n          <form\r\n            className=\"from\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"330px\",\r\n              padding: \"15px\",\r\n              margin: \"auto\"\r\n            }}\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <img className=\"mb-4\" src={pen} alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal text-light\">\r\n              Please sign in/up\r\n            </h1>\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signin\")}\r\n              className=\"btn btn-lg btn-primary btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signup\")}\r\n              className=\"btn btn-lg btn-info btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            {/* <p classNameName=\"mt-5 mb-3 text-muted\">© 2017-2018</p> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Impress, Step } from \"react-impressjs\";\r\n\r\nexport default React.memo(function Present() {\r\n  return (\r\n    <div className=\"Present\">\r\n      <Impress>\r\n        <Step data={{ x: 0, y: 0 }}>\r\n        <h1 className=\"_2 \">What is Chitr?</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Drawing Collaboration Tool for RealTime Drawing! ✏</h1>\r\n          </h1>\r\n         \r\n        </Step>\r\n\r\n        <Step data={{ y: 1000, scale: 3 }}>\r\n          <h1 className=\"_2 \">Which Technology is used ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n          <h1>{\"=>\"} Mongo Express React Node - MERN</h1>\r\n          <h1>{\"=>\"} Socket.io - for Bidirectional communication between Server and Client</h1>\r\n          <h1>{\"=>\"} Impressjs - for this Presentation</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 1000, y: -1000, scale: 5, rotateX: 90, rotateY: 45 }}>\r\n        <h1 className=\"_2 \"> What are the Features ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Two or More user can draw at same time !</h1>\r\n            <h1>{\"=>\"} Use Very less Internet for  transferring the Data !</h1>\r\n            <h1>{\"=>\"} User Can Save as many drawings as user want !</h1>\r\n            <h1>{\"=>\"} Can Share Drawing to anyone to see and draw !</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 3000, y: 3000, scale: 1,z:1000, rotateX: 90, rotateY: -45,rotateZ:45}}>\r\n          <h1 className=\"_2\">Requirements</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Server for backend hosting - replit.com</h1>\r\n            <h1>{\"=>\"} DataBase for Saving the Drawing and user auth - mongodb</h1>\r\n            <h1>{\"=>\"} Server for frontend hosting - github pages</h1>\r\n            <h1>{\"=>\"} Domain for website - name.com</h1>\r\n            <h1>{\"=>\"} Needs Lot of Time and Peace of Mind!</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 3000, scale: 2,rotateX: 90, rotateY: 0, rotateZ:180 }}>\r\n          <h1 className=\"_2\">How it Works? - (Logic)</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h2>{\"=>\"}let, we have 2 users A and B! </h2>\r\n            <h2>{\"=>\"}When user A tries to draw then a Packet[coordination of line] is thrown to the server using socket. </h2>\r\n            <h2>{\"=>\"}After receiving the Packet , Server saves it and throws the Packet to all the connected drawings of the users using socket</h2>\r\n            <h2>{\"=>\"}After receiving the Packet at the client side or say user B , client re-renders it and canvas shows that a line is being drawn</h2>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:1000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:180 }}>\r\n          <h1 className=\"_2\"> Source Code</h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraFront\">GulTion/chitraFront - Front End</a></h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraBackend\">GulTion/chitraBackend - Back End</a></h1>\r\n        </Step>\r\n\r\n\r\n        <Step data={{x: 5000, y: 1000,z:2000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Work done by</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Designer - Gulshan</h1>\r\n          <h1>FrontEnd Developer - Gulshan</h1>\r\n          <h1>BackEnd Developer - Gulshan</h1>\r\n          </h1>\r\n          \r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:3000, scale: 1,rotateX: 180, rotateY: 180, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Let's GO</h1>\r\n        </Step>\r\n\r\n\r\n\r\n\r\n      </Impress>\r\n    </div>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./HomePage.css\";\r\nimport Present from \"./Present\";\r\n\r\nconst HomePage = () => {\r\n  const [l, setL] = useState(false);\r\n\r\n  axios\r\n    .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n    .then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        setL(true);\r\n      } else {\r\n        setL(false);\r\n      }\r\n    });\r\n  document.title = \"Chitr\";\r\n  return (\r\n    <div className={\"HomePage\"}>\r\n      {NavBar({\r\n        title: \"Chitr\",\r\n        btn: [\r\n          !l ? (\r\n            <Link to=\"auth\" className=\"btn\">\r\n              Log In\r\n            </Link>\r\n          ) : (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                localStorage.setItem(\"id\", \"\");\r\n                setL(false);\r\n              }}\r\n            >\r\n              Log Out\r\n            </button>\r\n          ),\r\n          l && (\r\n            <Link to=\"dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>\r\n          ),\r\n        ],\r\n      })}\r\n      <Present />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewAdder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center NewAdder\">\r\n        <input\r\n          onBlur={(e) => this.setState({ value: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Enter Drawing Name\"\r\n        />\r\n        <div\r\n          className=\"btn btn-primary\"\r\n          onClick={(e) => {\r\n            this.props.onSave(this.state.value);\r\n            this.props.onClose();\r\n            this.setState({ value: \"\" });\r\n          }}\r\n        >\r\n          SAVE\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  subscribeForDrawingsList,\r\n  createDrawing,\r\n  deleteDrawing,\r\n} from \"../api\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport \"./core.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport NewAdder from \"./NewAdder\";\r\n\r\nconst { log } = console;\r\nexport default class DrawingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawings: [],\r\n      temp: [],\r\n      key: \"\",\r\n      redirect: false,\r\n      query: \"\",\r\n      name: \"\",\r\n      isNew: false,\r\n      isAuth: true,\r\n      status: \"Loading ...\",\r\n    };\r\n  }\r\n\r\n  getDrawing() {\r\n    subscribeForDrawingsList((drawing) => {\r\n      log(\"getDrawing is running\");\r\n      this.setState((prev) => ({\r\n        drawings: drawing,\r\n        temp: drawing,\r\n        status: \"No Drawing Found !\",\r\n      }));\r\n    });\r\n  }\r\n  getAllList() {\r\n    axios\r\n      .post(`${URL}/drawing/all`, { id: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        log(e);\r\n        const {\r\n          data: { list },\r\n        } = e;\r\n        document.title = `${list.length} Drawings`;\r\n        this.setState((prev) => ({\r\n          drawings: list,\r\n          temp: list,\r\n          status: \"No Drawing Found !\",\r\n        }));\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios\r\n      .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        const { data } = e;\r\n        if (data.success) {\r\n\r\n          this.getAllList();\r\n        } else {\r\n          this.setState({ isAuth: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteDrawing({ id }) {\r\n    deleteDrawing(id, (k) => {\r\n      log(k);\r\n      this.getAllList();\r\n    });\r\n  }\r\n  DrawingElement({ drawing }) {\r\n    return (\r\n      <div className=\"drawingCard card m-1 w-auto shadow-sm \" key={drawing._id}>\r\n        {this.state.redirect && <Redirect to=\"/auth\" />}\r\n        <div className=\"card-body \">\r\n          <h5 className=\"card-title\">{drawing.name}</h5>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n\r\n        \r\n          <Link\r\n            className=\"card-text btn btn-info text-light\"\r\n            to={`/new/drawings/${drawing._id}`}\r\n            target={\"_blank\"}\r\n          >\r\n            {\"Draw\"}\r\n          </Link>\r\n          <button\r\n            onClick={(e) => this.deleteDrawing({ id: drawing._id })}\r\n            className=\"btn btn-danger mx-1\"\r\n          >\r\n            DELETE\r\n          </button>\r\n          </div>\r\n        </div>\r\n        <h6 className=\"card-footer text-dimmed\">\r\n          {new Date(drawing.timestamp).toLocaleString()}\r\n        </h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const drawingList = this.state.temp.map((drawing) =>\r\n      this.DrawingElement({ drawing, getAllList: this.getAllList })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {NavBar({\r\n          title: \"DashBoard\",\r\n          btn: [\r\n            <Link to=\"/\" className=\"btn\">\r\n              {\"< Back\"}\r\n            </Link>,\r\n            <div\r\n              className={\"btn\"}\r\n              onClick={async () => {\r\n                this.setState({ isNew: true });\r\n              }}\r\n            >\r\n              + NEW\r\n            </div>,\r\n          ],\r\n          color: true,\r\n        })}\r\n        <Popup\r\n          onClose={() => this.setState({ isNew: false })}\r\n          open={this.state.isNew}\r\n        >\r\n          <NewAdder\r\n            onClose={() => this.setState({ isNew: false })}\r\n            onSave={async (name) => {\r\n              await new Promise((res, rej) => {\r\n                createDrawing({ name, key: \"\" });\r\n                res();\r\n              });\r\n              await this.getAllList();\r\n            }}\r\n          />\r\n        </Popup>\r\n        <div>\r\n          {this.state.isAuth ? null : <Redirect to=\"/auth\" />}\r\n\r\n          <div className=\"container mb-2 form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"floatingInputGrid\"\r\n              placeholder=\"Search\"\r\n              value={this.state.query}\r\n              onChange={(e) => {\r\n                const { value } = e.target;\r\n                this.setState({\r\n                  query: value,\r\n                  temp: this.state.drawings.filter(\r\n                    (d) => d.name.toLowerCase().indexOf(value) !== -1\r\n                  ),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-wrap container justify-content-center DrawingList\">\r\n            {drawingList.length ? (\r\n              drawingList\r\n            ) : (\r\n              <h1 className=\"text-white\">{this.state.status}</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DrawingList from \"./DrawingList\";\r\nimport \"./core.css\";\r\n\r\n\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"DashBoard container-fluid\">\r\n        <DrawingList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","const initalState = {\r\n    key:\"\"\r\n}\r\nconst authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n      default: return state;\r\n    }\r\n\r\n}\r\n\r\n  export default authReducer","import {subscribeForDrawingsList} from \"../api\"\r\n\r\nconst {log} = console\r\n\r\nconst initState = {\r\n    list:[]\r\n\r\n}\r\n\r\nconst drawingReducer = (state=initState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'GET_DRAWING_LIST':\r\n            return new Promise((res, rej)=>{\r\n                subscribeForDrawingsList((drawing) => {\r\n                    log('GET_DRAWING_LIST '+drawing.length);\r\n                    log(state.list)\r\n                   res( {...state, list:drawing})\r\n                    \r\n                })\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drawingReducer","import {combineReducers} from \"redux\"\r\nimport auth from \"./authReducer\"\r\nimport drawing from \"./drawingReducer\"\r\n\r\nexport default combineReducers({auth,drawing})","import {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./index\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default store;","export default {\r\n    TITLE:\"LineDraw\"\r\n}","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nimport NewCanvas from \"./components/newCanvas/\";\r\n\r\nimport Drawing from \"./components/Drawing\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport DashBoard from \"./components/DashBoard\";\r\n\r\nimport store from \"./Reducer/store\";\r\n\r\nimport db from \"./db\";\r\n\r\nconst { log } = console;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDrawing: { id: \"\", name: \"\" },\r\n      title: db.TITLE,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ title: db.TITLE });\r\n    log(store.getState());\r\n  }\r\n\r\n  selectDrawing = (drawing) => {\r\n    this.setState({ selectedDrawing: drawing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <DashBoard />\r\n            </Route>\r\n            <Route path=\"/auth\">\r\n              <Auth />\r\n            </Route>\r\n\r\n            <Route\r\n              path=\"/drawings/new/:drawingId\"\r\n              render={(e) => {\r\n                return (\r\n                  <>\r\n                    {/* <h1>{this.state.selectedDrawing.name}</h1> */}\r\n                    <Drawing\r\n                      drawingId={e.match.params.drawingId}\r\n                      drawing={this.state.selectedDrawing}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            ></Route>\r\n\r\n            {/* <Route\r\n              path=\"/new/drawings/:drawingId\"\r\n              render={(e) => (\r\n                <ExcaliDraw drawingId={e.match.params.drawingId} />\r\n              )}\r\n            ></Route> */}\r\n\r\n            <Route  path=\"/new/drawings/:drawingId\" render={(e) => (\r\n                <NewCanvas drawingId={e.match.params.drawingId} />\r\n              )}>\r\n            \r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}