{"version":3,"sources":["components/ico/checkbox-blank-circle-fill.svg","components/ico/checkbox-blank-fill.svg","components/ico/cursor-fill.svg","components/ico/delete-bin-2-fill.svg","components/ico/download-cloud-2-fill.svg","components/ico/eraser-fill.svg","components/ico/font-color.svg","components/ico/lock-fill.svg","components/ico/lock-unlock-fill.svg","components/ico/pencil-fill.svg","components/ico/text.svg","components/ico/upload-cloud-2-fill.svg","components/ico/fill.svg","pen.svg","URL.js","api.js","components/ico/index.js","components/newCanvas/ToolBar.jsx","components/newCanvas/index.jsx","components/Canvas.jsx","components/NavBar.jsx","components/Drawing.jsx","components/Auth.jsx","components/Present.js","components/HomePage.jsx","components/NewAdder.jsx","components/DrawingList.jsx","components/DashBoard.jsx","Reducer/authReducer.js","Reducer/drawingReducer.js","Reducer/index.js","Reducer/store.js","db.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","_key","atob","localStorage","getItem","socket","openSocket","subscribeForDrawingsList","cb","on","drawing","emit","key","createDrawing","a","name","user","pushChange","drawingId","data","I","Circle","Rect","Cursor","Remove","Download","Erase","FontColor","Fill","Lock","Unlock","Pencil","Text","Save","did","window","location","href","split","pop","shapeAdd","addMain","shape","canvas","document","toJSON","cmd","add","renderAll","addRect","rect","fabric","top","left","width","height","fill","id","uuid","this","addCircle","circ","radius","addText","text","IText","e","addDraw","setDraw","k","isDrawingMode","delete","now","getActiveObject","remove","ToolBar","useState","isDraw","colorRef","useRef","className","onClick","src","current","click","createElement","toDataURL","format","quality","download","ref","style","border","opacity","type","onChange","set","target","value","log","console","NewCanvas","body","clientWidth","clientHeight","cvs","useEffect","Canvas","backgroundColor","loadFromJSON","scaleX","scaleY","angle","path","pullChange","get","Path","_objects","forEach","state","lastLength","handleOnMouseDown","props","drawingEnabled","node","getBoundingClientRect","ctx","beginPath","lastX","clientX","lastY","clientY","handleOnMouseMove","currentX","currentY","draw","update","onDraw","from","x","y","to","brushColor","linewidth","lineWidth","handleonMouseUp","handleOnTouchDown","touches","preventDefault","handleOnTouchMove","handleOnTouchUp","addEventListener","offsetWidth","offsetHeight","getContext","nextProps","lines","length","i","l","setState","stroke","lX","lY","cX","cY","strokeStyle","moveTo","lineTo","canvasStyle","onMouseDown","onMouseMove","onMouseUp","Component","defaultProps","cursor","NavBar","title","btn","color","background","map","Drawing","handleDraw","line","publishLine","info","isFound","axios","post","then","success","lineEvt","prev","Rx","Observable","fromEventPattern","h","off","bufferTime","subscribe","subscribeForPublishLine","Auth","email","password","setItem","btoa","pathname","alert","message","maxWidth","padding","margin","onSubmit","pen","alt","placeholder","required","autoFocus","auth","React","memo","scale","rotateX","rotateY","z","rotateZ","HomePage","setL","NewAdder","onBlur","onSave","onClose","DrawingList","drawings","temp","redirect","query","isNew","isAuth","status","list","getAllList","deleteDrawing","_id","Date","timestamp","toLocaleString","drawingList","DrawingElement","open","Promise","res","rej","filter","d","toLowerCase","indexOf","DashBoard","initalState","authReducer","action","initState","drawingReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","App","selectDrawing","selectedDrawing","db","getState","exact","render","match","params","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.302c6fe0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-circle-fill.c4b8cc1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-fill.beed5b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-fill.68139605.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-bin-2-fill.8c6aadcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/download-cloud-2-fill.808efe79.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraser-fill.afe1087b.svg\";","module.exports = __webpack_public_path__ + \"static/media/font-color.8cea8ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-fill.aa688ead.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-unlock-fill.88a79c49.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-fill.726090f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.4acc259b.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-cloud-2-fill.b62920c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fill.f95e459e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.d2648682.svg\";","const URL = \"https://chitraBackend.gultion.repl.co\";\r\n// const URL = \"http://localhost:3001\"\r\n\r\nexport default URL;\r\n","import openSocket from \"socket.io-client\";\r\nimport Rx from \"rxjs/Rx\";\r\nimport URL from \"./URL\";\r\nimport axios from \"axios\";\r\n\r\nconst _key = atob(localStorage.getItem(\"id\"));\r\nconst socket = openSocket(URL);\r\n\r\n// const subscribeForDrawings = (cb) => {\r\n\r\n//     socket.on(`drawing:${_key}`, drawing => cb(drawing));\r\n//     socket.emit('subscribeForDrawings',{key:_key});\r\n// }\r\n\r\nconst subscribeForDrawingsList = (cb) => {\r\n  socket.on(\"drawingList\", (drawing) => cb(drawing));\r\n  socket.emit(\"subscribeForDrawingList\", { key: _key });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst createDrawing = async ({ name, key }) => {\r\n  await socket.emit(\"createDrawing\", { name, key: key, user: _key });\r\n};\r\n\r\nconst publishLine = (line) => {\r\n  socket.emit(\"publishLine\", line);\r\n};\r\n\r\nconst subscribeForPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawing:${drawingId}`, h),\r\n    (h) => socket.off(`drawing:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForPublishLine\", drawingId);\r\n};\r\n\r\nconst subscribeForAllPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawingAll:${drawingId}`, h),\r\n    (h) => socket.off(`drawingAll:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForAllPublishLine\", drawingId);\r\n};\r\n\r\nconst getDrawingById = (id, cb) => {\r\n  socket.on(\"takeDrawing\", (info) => cb(info));\r\n  socket.emit(\"getDrawingById\", id);\r\n};\r\n\r\nconst deleteDrawing = (id, cb) => {\r\n  axios.post(URL + \"/drawing/delete\", { id, key: _key }).then((e) => {\r\n    // log(e);\r\n    cb(e);\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst pullChange = (drawingId,cb) => {\r\n  socket.on(`pullChange:${drawingId}`, data=>{\r\n    cb(data)\r\n  })\r\n};\r\n\r\n\r\nconst pushChange = (drawingId, data)=>{\r\n  socket.emit(`pushChange`, {drawingId, data})\r\n}\r\nconst subscribeForFabric = (drawingId, cb)=>{\r\n\r\n  socket.on(`hereMyCanvas:${drawingId}`, (data)=>{\r\n    document.canvas.loadFromJSON(data)\r\n  })\r\n  socket.on(`giveMeCanvas:${drawingId}`, (id)=>{\r\n    console.log(\"data\")\r\n      socket.emit(`takeMyCanvas`, {id:id,canvas:document.canvas.toJSON(['id'])})\r\n  })\r\n  socket.emit(`subscribeForFabric`, {drawingId})\r\n}\r\n\r\n\r\nexport {\r\n  // subscribeForDrawings,\r\n  createDrawing,\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  getDrawingById,\r\n  subscribeForDrawingsList,\r\n  subscribeForAllPublishLine,\r\n  deleteDrawing,\r\n  pullChange,\r\n  pushChange,\r\n  subscribeForFabric\r\n};\r\n","import Circle from \"./checkbox-blank-circle-fill.svg\"\r\nimport Rect from \"./checkbox-blank-fill.svg\"\r\nimport Cursor from \"./cursor-fill.svg\"\r\nimport Remove from \"./delete-bin-2-fill.svg\"\r\nimport Download from  \"./download-cloud-2-fill.svg\"\r\nimport Erase from \"./eraser-fill.svg\"\r\nimport FontColor from \"./font-color.svg\"\r\nimport Lock from \"./lock-fill.svg\"\r\nimport Unlock from \"./lock-unlock-fill.svg\"\r\nimport Pencil from \"./pencil-fill.svg\"\r\nimport Text from \"./text.svg\"\r\nimport Save from \"./upload-cloud-2-fill.svg\"\r\nimport Fill from \"./fill.svg\"\r\n\r\nconst I = {Circle, Rect, Cursor, Remove, Download, Erase, FontColor,Fill,\r\nLock, Unlock, Pencil, Text, Save}\r\n\r\nexport default I","import React from \"react\"\r\nimport uuid from \"uuid-random\"\r\nimport { fabric } from \"fabric\";\r\nimport {pushChange,pullChange,subscribeForFabric} from \"../../api\"\r\nimport I from \"../ico/\"\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst did = window.location.href.split(\"/\").pop()\r\nconst shapeAdd = {\r\n    addMain:(shape)=>{\r\n        let {canvas} = document;\r\n        pushChange(did, {...shape.toJSON(['id']), cmd:\"add\"})\r\n        canvas.add(shape)\r\n        canvas.renderAll()\r\n    },\r\n    addRect:function(){\r\n        let {canvas} = document;\r\n        let rect = new fabric.Rect({\r\n            top:100,\r\n            left:100,\r\n            width:100,\r\n            height:100,\r\n            fill:\"red\",\r\n            id:uuid()\r\n        })\r\n        this.addMain(rect)\r\n    },\r\n\r\n    addCircle:function(){\r\n        let {canvas} = document;\r\n        let circ = new fabric.Circle({\r\n            top:100,\r\n            left:100,\r\n            radius:50,\r\n            fill:\"blue\",\r\n            id:uuid()\r\n        })\r\n        this.addMain(circ)\r\n    },\r\n    addText:function(){\r\n        let text = new fabric.IText(\"Enter Text\", {top:100, left:100,id:uuid()})\r\n        text.on(\"changed\", (e)=>{\r\n            let id = text.id;\r\n            pushChange(did, {text:text.text, id, cmd:\"text\"})\r\n        })\r\n        this.addMain(text)\r\n    },\r\n    addDraw:function({setDraw}){\r\n        let {canvas} = document;\r\n        setDraw(k=>!k)\r\n        canvas.isDrawingMode = !canvas.isDrawingMode\r\n    },\r\n    delete:function(){\r\n        let {canvas} = document;\r\n        let now = canvas.getActiveObject();\r\n        if(now){\r\n            pushChange(did, {id:now.id, cmd:\"delete\"})\r\n            canvas.remove(now);\r\n            canvas.renderAll()\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\nfunction ToolBar(){\r\n    const [isDraw, setDraw] = useState(false);\r\n    const colorRef = useRef()\r\n    return  <div className=\"ToolBar\" >\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addRect()}>\r\n        <img src={I.Rect}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addCircle()}>\r\n        <img src={I.Circle}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addText()}>\r\n    <img src={I.Text}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addDraw({setDraw:(e)=>setDraw(e)})}>\r\n    <img src={!isDraw?I.Pencil:I.Cursor}/>\r\n    </div>\r\n    {isDraw&& <div className=\"Tab\" onClick={()=>{}}>\r\n    <img src={I.Erase}/>\r\n    </div>}\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.delete({setDraw:(e)=>setDraw(e)})}>\r\n    <img src={I.Remove}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>{\r\n        colorRef.current.click()\r\n    }}>\r\n    <img src={I.Fill}/>\r\n    </div>\r\n\r\n    <div className=\"Tab\" onClick={()=>{\r\n       \r\n    }}>\r\n    <img src={I.Save}/>\r\n    </div>\r\n\r\n    <div className=\"Tab\" onClick={function(){\r\n            let a = document.createElement(\"a\");\r\n            a.href = document.canvas.toDataURL({\r\n                format: 'jpeg',\r\n                quality: 1.0\r\n            });\r\n            a.download = 'canvas.png'\r\n            a.click()\r\n    }}>\r\n    <img src={I.Download}/>\r\n    </div>\r\n\r\n\r\n    <input ref={colorRef} style={{width:\"0px\",height:\"0px\",border:\"0px\", opacity:\"0\"}} type=\"color\" onChange={(e)=>{\r\n        let {canvas} = document;\r\n        if(canvas){\r\n            let now = canvas.getActiveObject();\r\n            if(now){\r\n                now.set({fill:e.target.value})\r\n                canvas.renderAll()\r\n                pushChange(did, {id:now.id, fill:e.target.value, cmd:\"modified\"})\r\n            }\r\n        }\r\n    }} />\r\n\r\n</div>\r\n}\r\n\r\nexport default ToolBar","\r\nimport { fabric } from \"fabric\";\r\nimport \"./index.css\"\r\nimport React, {useRef, useEffect} from \"react\"\r\nimport uuid from \"uuid-random\"\r\nimport {pushChange,pullChange,subscribeForFabric} from \"../../api\"\r\nimport ToolBar from \"./ToolBar\";\r\nconst {log} = console\r\n\r\nconst did = window.location.href.split(\"/\").pop()\r\n\r\nfunction NewCanvas(){\r\n    let _width = document.body.clientWidth\r\n    let _height = document.body.clientHeight\r\n    let height =()=> _width>_height?_height:_width/1.7777777;\r\n    let width =()=> _width>_height?_height*1.77777777:_width;\r\n    const cvs = useRef();\r\n    \r\n    useEffect(()=>{\r\n        let canvas = new fabric.Canvas(cvs.current,{\r\n            // width:width()*0.9,\r\n            // height:height()*0.9\r\n            width:640,\r\n            height:640/1.7777,\r\n            backgroundColor:\"white\"\r\n        });\r\n\r\n        subscribeForFabric(did, ()=>{})\r\n\r\n        canvas.on(\"object:modified\",(e)=>{\r\n            pushChange(did, {...e.target.toJSON(['id']), cmd:\"modified\"})\r\n        })\r\n\r\n        canvas.on(\"object:moving\", (e)=>{\r\n            let {top, left, id} = e.target.toJSON(['id'])\r\n            pushChange(did, { id, top,left, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"object:scaling\", (e)=>{\r\n            let {scaleX, scaleY,top,left ,id} = e.target.toJSON(['id'])\r\n            pushChange(did, { scaleX,top,left, scaleY,id, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"object:rotating\", (e)=>{\r\n            let {angle,top, left ,id} = e.target.toJSON(['id'])\r\n            pushChange(did, { angle,id,top, left, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"path:created\", (e)=>{\r\n            e.path.set({id:uuid()})\r\n            log(e.path)            \r\n            pushChange(did, { ...e.path.toJSON(['id']),cmd:\"add\"})\r\n        })\r\n\r\n\r\n        pullChange(did, (get)=>{\r\n            log(get)\r\n\r\n            if(get.cmd===\"add\"){\r\n                if(get.type==\"rect\"){\r\n                canvas.add(new fabric.Rect(get))\r\n                }\r\n                else if(get.type===\"circle\"){\r\n                    canvas.add(new fabric.Circle(get))\r\n                }\r\n                else if(get.type===\"i-text\"){\r\n                    canvas.add(new fabric.IText(get.text,get))\r\n                }\r\n                else if(get.type===\"path\"){\r\n                    canvas.add(new fabric.Path(get.path, get))\r\n                }\r\n            }\r\n            else if(get.cmd===\"modified\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        e.set(get)\r\n                    }\r\n                })\r\n            }\r\n            else if(get.cmd===\"text\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        e.set({text:get.text})\r\n                    }\r\n                })\r\n            }\r\n            else if(get.cmd===\"delete\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        canvas.remove(e)\r\n                    }\r\n                })\r\n            }\r\n            canvas.renderAll()\r\n            \r\n        })\r\n\r\n\r\n \r\n       \r\n        document.canvas = canvas\r\n\r\n        // let _text = new fabric.IText(\"Here is Tex\", {top:100, left:100, width:100})\r\n        // let _box = new fabric.Rect({top:100, left:100, width:100,height:50, fill:\"grey\"})\r\n        // let _group = new fabric.Group([_text, _box], {top:200, left:200});\r\n        // canvas.add(_group)\r\n        // canvas.renderAll()\r\n\r\n        // window.onload = window.onresize=()=>{\r\n        // _width = document.body.clientWidth\r\n        //  _height = document.body.clientHeight\r\n        //  height =()=> _width>_height?_height:_width/1.7777777;\r\n        //  width =()=> _width>_height?_height*1.77777777:_width;\r\n        //     log({width:width(), height:height()})\r\n        //     canvas.setDimensions({width:width()*0.9, height:height()*0.9})\r\n        //     canvas.renderAll()\r\n        // }\r\n\r\n\r\n\r\n\r\n       \r\n\r\n        log(canvas)\r\n    },[])\r\n    return <div className=\"NewCanvas\" >\r\n       <ToolBar />\r\n        <canvas  id=\"_newCanvas\" ref={cvs}></canvas>\r\n    </div>\r\n}\r\n\r\nexport default NewCanvas;","import React, { Component } from \"react\";\r\nclass Canvas extends Component {\r\n  state = {\r\n    lastLength: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.node;\r\n    canvas.addEventListener(\"touchstart\", this.handleOnTouchDown, false);\r\n    canvas.addEventListener(\"touchmove\", this.handleOnTouchMove, false);\r\n    canvas.addEventListener(\"touchend\", this.handleOnTouchUp, false);\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100%\";\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //   log({nextProps})\r\n    //todo: find a better way to see if a coordinate has been applied\r\n    if (nextProps.lines && nextProps.lines.length > this.state.lastLength) {\r\n      for (let i = this.state.lastLength; i < nextProps.lines.length; i += 1) {\r\n        // console.log('looping through lines ', i);\r\n        const l = nextProps.lines[i];\r\n        this.draw(l.from.x, l.from.y, l.to.x, l.to.y);\r\n      }\r\n\r\n      this.update();\r\n\r\n      this.setState({\r\n        lastLength: nextProps.lines.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    this.ctx.strokeStyle = this.props.brushColor;\r\n    this.ctx.lineWidth = this.props.lineWidth;\r\n    this.ctx.moveTo(lX, lY);\r\n    this.ctx.lineTo(cX, cY);\r\n  }\r\n\r\n  handleOnMouseDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n    this.drawing = true;\r\n  };\r\n\r\n  handleOnMouseMove = (e) => {\r\n    if (this.drawing) {\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n  };\r\n\r\n  handleonMouseUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  handleOnTouchDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n    const {\r\n      touches: [a],\r\n    } = e;\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = a.clientX - rect.left;\r\n    this.lastY = a.clientY - rect.top;\r\n    this.drawing = true;\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnTouchMove = (e) => {\r\n    if (this.drawing) {\r\n      const {\r\n        touches: [a],\r\n      } = e;\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = a.clientX - rect.left;\r\n      const currentY = a.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  handleOnTouchUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={(node) => (this.node = node)}\r\n        style={this.props.canvasStyle}\r\n        onMouseDown={this.handleOnMouseDown}\r\n        onMouseMove={this.handleOnMouseMove}\r\n        onMouseUp={this.handleonMouseUp}\r\n\r\n        // onTouchStart={this.handleOnTouchDown}\r\n        // onTouchMove={this.handleOnMouseMove}\r\n        // onTouchEnd={this.handleonMouseUp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCanvas.defaultProps = {\r\n  brushColor: \"#000000\",\r\n  lineWidth: 2,\r\n  canvasStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n  },\r\n  drawingEnabled: false,\r\n  lines: [],\r\n};\r\n\r\nexport default Canvas;\r\n","\r\nimport React from \"react\";\r\nconst NavBar = ({ title, btn, color }) => {\r\n  return (\r\n    <div\r\n      style={{ background: color && \"none\" }}\r\n      className=\"NavBar d-flex align-items-center justify-content-around p-1\"\r\n    >\r\n      <h1 className=\"text-light display-3 float-left\">{title}</h1>\r\n      <div className=\"d-flex align-items-center justify-content-around p-1\">\r\n        {btn?.map((e) => {\r\n          return e;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component} from \"react\";\r\nimport Canvas from \"./Canvas\";\r\nimport {\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  subscribeForAllPublishLine,\r\n} from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./core.css\";\r\n\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst { log } = console;\r\nexport default class Drawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lines: [],\r\n      info: { name: \"\" },\r\n      brushColor: \"black\",\r\n      name: \"Loading....\",\r\n      isFound: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // log(this.props)\r\n    const id = window.location.href.split(\"/\").pop();\r\n    log(id);\r\n    axios.post(`${URL}/drawing/get`, { id }).then((e) => {\r\n      const { data } = e;\r\n      log(data);\r\n      if (data.success) {\r\n        this.setState({ isFound: true, name: data.name });\r\n        // log(data)\r\n        document.title = `${data.name} - Chitr`;\r\n      } else {\r\n        this.setState({ name: \"NOT FOUND\" });\r\n      }\r\n    });\r\n\r\n    subscribeForAllPublishLine(this.props.drawingId, (lineEvt) => {\r\n      // log(lineEvt)\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n\r\n    subscribeForPublishLine(this.props.drawingId, (lineEvt) => {\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleDraw = (line) => {\r\n    // log(line)\r\n    publishLine({ drawingId: this.props.drawingId, ...line });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <h1>{this.state.name}</h1> */}\r\n        {NavBar({\r\n          title: this.state.name,\r\n          btn: [\r\n            <Link to=\"/dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>,\r\n          ],\r\n        })}\r\n        {this.state.isFound ? (\r\n          <div className=\"Drawing\">\r\n            {/* <ColorBox onClick={color=>{this.setState({brushColor:color})}}/> */}\r\n            <Canvas\r\n              brushColor={this.state.brushColor}\r\n              onDraw={this.handleDraw}\r\n              drawingEnabled={true}\r\n              lines={this.state.lines}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Canvas.defaultProps = {\r\n//     brushColor: '#000000',\r\n//     lineWidth: 2,\r\n//     canvasStyle: {\r\n//       backgroundColor: '#FFFFFF',\r\n//       cursor: 'pointer'\r\n//     },\r\n//     drawingEnabled: false,\r\n//     lines: []\r\n//   };\r\n","import React, { Component } from \"react\";\r\nimport pen from \"../pen.svg\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport URL from \"../URL\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./core.css\";\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: false\r\n    };\r\n  }\r\n  auth(type) {\r\n    // type : ['signin', 'signup']\r\n    const { email, password } = this.state;\r\n    axios.post(`${URL}/auth/${type}`, { email, password }).then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        localStorage.setItem(\"id\", btoa(data.id))\r\n        // this.setState({ success: true });\r\n        window.location.pathname = '/dashboard'\r\n        // console.log(data)\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth h-100\">\r\n        {NavBar({ title: \"Auth Page\", btn: [], color: true })}\r\n        <div className=\"container-fluid d-flex align-items-center\">\r\n          {this.state.success && <Redirect to=\"/dashboard\" />}\r\n          <form\r\n            className=\"from\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"330px\",\r\n              padding: \"15px\",\r\n              margin: \"auto\"\r\n            }}\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <img className=\"mb-4\" src={pen} alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal text-light\">\r\n              Please sign in/up\r\n            </h1>\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signin\")}\r\n              className=\"btn btn-lg btn-primary btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signup\")}\r\n              className=\"btn btn-lg btn-info btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            {/* <p classNameName=\"mt-5 mb-3 text-muted\">© 2017-2018</p> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Impress, Step } from \"react-impressjs\";\r\n\r\nexport default React.memo(function Present() {\r\n  return (\r\n    <div className=\"Present\">\r\n      <Impress>\r\n        <Step data={{ x: 0, y: 0 }}>\r\n        <h1 className=\"_2 \">What is Chitr?</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Drawing Collaboration Tool for RealTime Drawing! ✏</h1>\r\n          </h1>\r\n         \r\n        </Step>\r\n\r\n        <Step data={{ y: 1000, scale: 3 }}>\r\n          <h1 className=\"_2 \">Which Technology is used ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n          <h1>{\"=>\"} Mongo Express React Node - MERN</h1>\r\n          <h1>{\"=>\"} Socket.io - for Bidirectional communication between Server and Client</h1>\r\n          <h1>{\"=>\"} Impressjs - for this Presentation</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 1000, y: -1000, scale: 5, rotateX: 90, rotateY: 45 }}>\r\n        <h1 className=\"_2 \"> What are the Features ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Two or More user can draw at same time !</h1>\r\n            <h1>{\"=>\"} Use Very less Internet for  transferring the Data !</h1>\r\n            <h1>{\"=>\"} User Can Save as many drawings as user want !</h1>\r\n            <h1>{\"=>\"} Can Share Drawing to anyone to see and draw !</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 3000, y: 3000, scale: 1,z:1000, rotateX: 90, rotateY: -45,rotateZ:45}}>\r\n          <h1 className=\"_2\">Requirements</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Server for backend hosting - replit.com</h1>\r\n            <h1>{\"=>\"} DataBase for Saving the Drawing and user auth - mongodb</h1>\r\n            <h1>{\"=>\"} Server for frontend hosting - github pages</h1>\r\n            <h1>{\"=>\"} Domain for website - name.com</h1>\r\n            <h1>{\"=>\"} Needs Lot of Time and Peace of Mind!</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 3000, scale: 2,rotateX: 90, rotateY: 0, rotateZ:180 }}>\r\n          <h1 className=\"_2\">How it Works? - (Logic)</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h2>{\"=>\"}let, we have 2 users A and B! </h2>\r\n            <h2>{\"=>\"}When user A tries to draw then a Packet[coordination of line] is thrown to the server using socket. </h2>\r\n            <h2>{\"=>\"}After receiving the Packet , Server saves it and throws the Packet to all the connected drawings of the users using socket</h2>\r\n            <h2>{\"=>\"}After receiving the Packet at the client side or say user B , client re-renders it and canvas shows that a line is being drawn</h2>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:1000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:180 }}>\r\n          <h1 className=\"_2\"> Source Code</h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraFront\">GulTion/chitraFront - Front End</a></h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraBackend\">GulTion/chitraBackend - Back End</a></h1>\r\n        </Step>\r\n\r\n\r\n        <Step data={{x: 5000, y: 1000,z:2000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Work done by</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Designer - Gulshan</h1>\r\n          <h1>FrontEnd Developer - Gulshan</h1>\r\n          <h1>BackEnd Developer - Gulshan</h1>\r\n          </h1>\r\n          \r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:3000, scale: 1,rotateX: 180, rotateY: 180, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Let's GO</h1>\r\n        </Step>\r\n\r\n\r\n\r\n\r\n      </Impress>\r\n    </div>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./HomePage.css\";\r\nimport Present from \"./Present\";\r\n\r\nconst HomePage = () => {\r\n  const [l, setL] = useState(false);\r\n\r\n  axios\r\n    .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n    .then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        setL(true);\r\n      } else {\r\n        setL(false);\r\n      }\r\n    });\r\n  document.title = \"Chitr\";\r\n  return (\r\n    <div className={\"HomePage\"}>\r\n      {NavBar({\r\n        title: \"Chitr\",\r\n        btn: [\r\n          !l ? (\r\n            <Link to=\"auth\" className=\"btn\">\r\n              Log In\r\n            </Link>\r\n          ) : (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                localStorage.setItem(\"id\", \"\");\r\n                setL(false);\r\n              }}\r\n            >\r\n              Log Out\r\n            </button>\r\n          ),\r\n          l && (\r\n            <Link to=\"dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>\r\n          ),\r\n        ],\r\n      })}\r\n      <Present />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewAdder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center NewAdder\">\r\n        <input\r\n          onBlur={(e) => this.setState({ value: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Enter Drawing Name\"\r\n        />\r\n        <div\r\n          className=\"btn btn-primary\"\r\n          onClick={(e) => {\r\n            this.props.onSave(this.state.value);\r\n            this.props.onClose();\r\n            this.setState({ value: \"\" });\r\n          }}\r\n        >\r\n          SAVE\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  subscribeForDrawingsList,\r\n  createDrawing,\r\n  deleteDrawing,\r\n} from \"../api\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport \"./core.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport NewAdder from \"./NewAdder\";\r\n\r\nconst { log } = console;\r\nexport default class DrawingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawings: [],\r\n      temp: [],\r\n      key: \"\",\r\n      redirect: false,\r\n      query: \"\",\r\n      name: \"\",\r\n      isNew: false,\r\n      isAuth: true,\r\n      status: \"Loading ...\",\r\n    };\r\n  }\r\n\r\n  getDrawing() {\r\n    subscribeForDrawingsList((drawing) => {\r\n      log(\"getDrawing is running\");\r\n      this.setState((prev) => ({\r\n        drawings: drawing,\r\n        temp: drawing,\r\n        status: \"No Drawing Found !\",\r\n      }));\r\n    });\r\n  }\r\n  getAllList() {\r\n    axios\r\n      .post(`${URL}/drawing/all`, { id: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        log(e);\r\n        const {\r\n          data: { list },\r\n        } = e;\r\n        document.title = `${list.length} Drawings`;\r\n        this.setState((prev) => ({\r\n          drawings: list,\r\n          temp: list,\r\n          status: \"No Drawing Found !\",\r\n        }));\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios\r\n      .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        const { data } = e;\r\n        if (data.success) {\r\n\r\n          this.getAllList();\r\n        } else {\r\n          this.setState({ isAuth: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteDrawing({ id }) {\r\n    deleteDrawing(id, (k) => {\r\n      log(k);\r\n      this.getAllList();\r\n    });\r\n  }\r\n  DrawingElement({ drawing }) {\r\n    return (\r\n      <div className=\"drawingCard card m-1 w-auto shadow-sm \" key={drawing._id}>\r\n        {this.state.redirect && <Redirect to=\"/auth\" />}\r\n        <div className=\"card-body \">\r\n          <h5 className=\"card-title\">{drawing.name}</h5>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n\r\n        \r\n          <Link\r\n            className=\"card-text btn btn-info text-light\"\r\n            to={`/drawings/${drawing._id}`}\r\n          >\r\n            {\"Draw\"}\r\n          </Link>\r\n          <button\r\n            onClick={(e) => this.deleteDrawing({ id: drawing._id })}\r\n            className=\"btn btn-danger mx-1\"\r\n          >\r\n            DELETE\r\n          </button>\r\n          </div>\r\n        </div>\r\n        <h6 className=\"card-footer text-dimmed\">\r\n          {new Date(drawing.timestamp).toLocaleString()}\r\n        </h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const drawingList = this.state.temp.map((drawing) =>\r\n      this.DrawingElement({ drawing, getAllList: this.getAllList })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {NavBar({\r\n          title: \"DashBoard\",\r\n          btn: [\r\n            <Link to=\"/\" className=\"btn\">\r\n              {\"< Back\"}\r\n            </Link>,\r\n            <div\r\n              className={\"btn\"}\r\n              onClick={async () => {\r\n                this.setState({ isNew: true });\r\n              }}\r\n            >\r\n              + NEW\r\n            </div>,\r\n          ],\r\n          color: true,\r\n        })}\r\n        <Popup\r\n          onClose={() => this.setState({ isNew: false })}\r\n          open={this.state.isNew}\r\n        >\r\n          <NewAdder\r\n            onClose={() => this.setState({ isNew: false })}\r\n            onSave={async (name) => {\r\n              await new Promise((res, rej) => {\r\n                createDrawing({ name, key: \"\" });\r\n                res();\r\n              });\r\n              await this.getAllList();\r\n            }}\r\n          />\r\n        </Popup>\r\n        <div>\r\n          {this.state.isAuth ? null : <Redirect to=\"/auth\" />}\r\n\r\n          <div className=\"container mb-2 form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"floatingInputGrid\"\r\n              placeholder=\"Search\"\r\n              value={this.state.query}\r\n              onChange={(e) => {\r\n                const { value } = e.target;\r\n                this.setState({\r\n                  query: value,\r\n                  temp: this.state.drawings.filter(\r\n                    (d) => d.name.toLowerCase().indexOf(value) !== -1\r\n                  ),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-wrap container justify-content-center DrawingList\">\r\n            {drawingList.length ? (\r\n              drawingList\r\n            ) : (\r\n              <h1 className=\"text-white\">{this.state.status}</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DrawingList from \"./DrawingList\";\r\nimport \"./core.css\";\r\n\r\n\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"DashBoard container-fluid\">\r\n        <DrawingList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","const initalState = {\r\n    key:\"\"\r\n}\r\nconst authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n      default: return state;\r\n    }\r\n\r\n}\r\n\r\n  export default authReducer","import {subscribeForDrawingsList} from \"../api\"\r\n\r\nconst {log} = console\r\n\r\nconst initState = {\r\n    list:[]\r\n\r\n}\r\n\r\nconst drawingReducer = (state=initState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'GET_DRAWING_LIST':\r\n            return new Promise((res, rej)=>{\r\n                subscribeForDrawingsList((drawing) => {\r\n                    log('GET_DRAWING_LIST '+drawing.length);\r\n                    log(state.list)\r\n                   res( {...state, list:drawing})\r\n                    \r\n                })\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drawingReducer","import {combineReducers} from \"redux\"\r\nimport auth from \"./authReducer\"\r\nimport drawing from \"./drawingReducer\"\r\n\r\nexport default combineReducers({auth,drawing})","import {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./index\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default store;","export default {\r\n    TITLE:\"LineDraw\"\r\n}","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nimport NewCanvas from \"./components/newCanvas/\";\r\n\r\nimport Drawing from \"./components/Drawing\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport DashBoard from \"./components/DashBoard\";\r\n\r\nimport store from \"./Reducer/store\";\r\n\r\nimport db from \"./db\";\r\n\r\nconst { log } = console;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDrawing: { id: \"\", name: \"\" },\r\n      title: db.TITLE,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ title: db.TITLE });\r\n    log(store.getState());\r\n  }\r\n\r\n  selectDrawing = (drawing) => {\r\n    this.setState({ selectedDrawing: drawing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <DashBoard />\r\n            </Route>\r\n            <Route path=\"/auth\">\r\n              <Auth />\r\n            </Route>\r\n\r\n            <Route\r\n              path=\"/drawings/:drawingId\"\r\n              render={(e) => {\r\n                return (\r\n                  <>\r\n                    {/* <h1>{this.state.selectedDrawing.name}</h1> */}\r\n                    <Drawing\r\n                      drawingId={e.match.params.drawingId}\r\n                      drawing={this.state.selectedDrawing}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            ></Route>\r\n\r\n            {/* <Route\r\n              path=\"/new/drawings/:drawingId\"\r\n              render={(e) => (\r\n                <ExcaliDraw drawingId={e.match.params.drawingId} />\r\n              )}\r\n            ></Route> */}\r\n\r\n            <Route  path=\"/new/drawings/:drawingId\" render={(e) => (\r\n                <NewCanvas drawingId={e.match.params.drawingId} />\r\n              )}>\r\n            \r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}