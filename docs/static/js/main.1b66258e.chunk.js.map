{"version":3,"sources":["components/ico/checkbox-blank-circle-fill.svg","components/ico/checkbox-blank-fill.svg","components/ico/cursor-fill.svg","components/ico/delete-bin-2-fill.svg","components/ico/download-cloud-2-fill.svg","components/ico/eraser-fill.svg","components/ico/font-color.svg","components/ico/lock-fill.svg","components/ico/lock-unlock-fill.svg","components/ico/pencil-fill.svg","components/ico/text.svg","components/ico/upload-cloud-2-fill.svg","components/ico/fill.svg","pen.svg","URL.js","api.js","components/ico/index.js","components/newCanvas/ToolBar.jsx","components/newCanvas/index.jsx","components/Canvas.jsx","components/NavBar.jsx","components/Drawing.jsx","components/Auth.jsx","components/Present.js","components/HomePage.jsx","components/NewAdder.jsx","components/DrawingList.jsx","components/DashBoard.jsx","Reducer/authReducer.js","Reducer/drawingReducer.js","Reducer/index.js","Reducer/store.js","db.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","URL","_key","atob","localStorage","getItem","socket","openSocket","firstTime","subscribeForDrawingsList","cb","on","drawing","emit","key","createDrawing","a","name","user","pushChange","drawingId","data","I","Circle","Rect","Cursor","Remove","Download","Erase","FontColor","Fill","Lock","Unlock","Pencil","Text","Save","did","window","location","href","split","pop","shapeAdd","addMain","shape","canvas","document","toJSON","cmd","add","renderAll","addRect","rect","fabric","top","left","width","height","fill","id","uuid","this","addCircle","circ","radius","addText","text","IText","e","addDraw","setDraw","k","isDrawingMode","delete","now","getActiveObject","remove","ToolBar","isAuth","useState","isDraw","colorRef","useRef","className","onClick","src","current","click","ref","style","border","opacity","type","onChange","set","target","value","backgroundColor","json","saveChitr","createElement","toDataURL","format","quality","download","log","console","NewCanvas","body","clientWidth","clientHeight","cvs","setAuth","useEffect","Canvas","from","loadFromJSON","scaleX","scaleY","angle","path","pullChange","get","Path","_objects","forEach","axios","post","then","success","state","lastLength","handleOnMouseDown","props","drawingEnabled","node","getBoundingClientRect","ctx","beginPath","lastX","clientX","lastY","clientY","handleOnMouseMove","currentX","currentY","draw","update","onDraw","x","y","to","brushColor","linewidth","lineWidth","handleonMouseUp","handleOnTouchDown","touches","preventDefault","handleOnTouchMove","handleOnTouchUp","addEventListener","offsetWidth","offsetHeight","getContext","nextProps","lines","length","i","l","setState","stroke","lX","lY","cX","cY","strokeStyle","moveTo","lineTo","canvasStyle","onMouseDown","onMouseMove","onMouseUp","Component","defaultProps","cursor","NavBar","title","btn","color","background","map","Drawing","handleDraw","line","publishLine","info","isFound","lineEvt","prev","Rx","Observable","fromEventPattern","h","off","bufferTime","subscribe","subscribeForPublishLine","Auth","email","password","setItem","btoa","pathname","alert","message","maxWidth","padding","margin","onSubmit","pen","alt","placeholder","required","autoFocus","auth","React","memo","scale","rotateX","rotateY","z","rotateZ","HomePage","setL","NewAdder","onBlur","onSave","onClose","DrawingList","drawings","temp","redirect","query","isNew","status","list","getAllList","deleteDrawing","_id","Date","timestamp","toLocaleString","drawingList","DrawingElement","open","Promise","res","rej","filter","d","toLowerCase","indexOf","DashBoard","initalState","authReducer","action","initState","drawingReducer","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","App","selectDrawing","selectedDrawing","db","getState","exact","render","match","params","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b66258e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-circle-fill.0c03fec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox-blank-fill.beed5b18.svg\";","module.exports = __webpack_public_path__ + \"static/media/cursor-fill.68139605.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-bin-2-fill.8c6aadcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/download-cloud-2-fill.808efe79.svg\";","module.exports = __webpack_public_path__ + \"static/media/eraser-fill.afe1087b.svg\";","module.exports = __webpack_public_path__ + \"static/media/font-color.8cea8ca9.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-fill.aa688ead.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock-unlock-fill.88a79c49.svg\";","module.exports = __webpack_public_path__ + \"static/media/pencil-fill.726090f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/text.4acc259b.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload-cloud-2-fill.b62920c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fill.f95e459e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.d2648682.svg\";","// const URL = \"https://chitraBackend.gultion.repl.co\";\r\nconst URL = \"http://localhost:3001\"\r\n\r\nexport default URL;\r\n","import openSocket from \"socket.io-client\";\r\nimport Rx from \"rxjs/Rx\";\r\nimport URL from \"./URL\";\r\nimport axios from \"axios\";\r\n\r\nconst _key = atob(localStorage.getItem(\"id\"));\r\nconst token =()=>atob(localStorage.getItem(\"id\"));\r\nconst socket = openSocket(URL);\r\nlet firstTime = true;\r\n// const subscribeForDrawings = (cb) => {\r\n\r\n//     socket.on(`drawing:${_key}`, drawing => cb(drawing));\r\n//     socket.emit('subscribeForDrawings',{key:_key});\r\n// }\r\n\r\nconst subscribeForDrawingsList = (cb) => {\r\n  socket.on(\"drawingList\", (drawing) => cb(drawing));\r\n  socket.emit(\"subscribeForDrawingList\", { key: _key });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst createDrawing = async ({ name, key }) => {\r\n  await socket.emit(\"createDrawing\", { name, key: key, user: _key });\r\n};\r\n\r\nconst publishLine = (line) => {\r\n  socket.emit(\"publishLine\", line);\r\n};\r\n\r\nconst subscribeForPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawing:${drawingId}`, h),\r\n    (h) => socket.off(`drawing:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForPublishLine\", drawingId);\r\n};\r\n\r\nconst subscribeForAllPublishLine = (drawingId, cb) => {\r\n  const lineStream = Rx.Observable.fromEventPattern(\r\n    (h) => socket.on(`drawingAll:${drawingId}`, h),\r\n    (h) => socket.off(`drawingAll:${drawingId}`, h)\r\n  );\r\n\r\n  const bufferedTimeStream = lineStream\r\n    .bufferTime(100)\r\n    .map((lines) => ({ lines }));\r\n  bufferedTimeStream.subscribe((lineEvt) => cb(lineEvt));\r\n  // socket.on(`drawing:${drawingId}`, (list)=>cb({lines:[list]}))\r\n\r\n  socket.emit(\"subscribeForAllPublishLine\", drawingId);\r\n};\r\n\r\nconst getDrawingById = (id, cb) => {\r\n  socket.on(\"takeDrawing\", (info) => cb(info));\r\n  socket.emit(\"getDrawingById\", id);\r\n};\r\n\r\nconst deleteDrawing = (id, cb) => {\r\n  axios.post(URL + \"/drawing/delete\", { id, key: _key }).then((e) => {\r\n    // log(e);\r\n    cb(e);\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\nconst pullChange = (drawingId,cb) => {\r\n  socket.on(`pullChange:${drawingId}`, data=>{\r\n    cb(data)\r\n  })\r\n};\r\n\r\n\r\nconst pushChange = (drawingId, data)=>{\r\n  socket.emit(`pushChange`, {drawingId, data})\r\n}\r\nconst subscribeForFabric = (drawingId, cb)=>{\r\n\r\n \r\n  socket.on(`giveMeCanvas:${drawingId}`, (id)=>{\r\n    console.log(\"data\")\r\n      socket.emit(`takeMyCanvas`, {id:id,canvas:document.canvas.toJSON(['id'])})\r\n  })\r\n  socket.on(`hereMyCanvas:${drawingId}`, (data)=>{\r\n    if(firstTime){\r\n      if(data.from==\"server\"){\r\n        document.canvas.loadFromJSON(data.json)\r\n      }\r\n      else if(data.from==\"socket\"){\r\n        document.canvas.loadFromJSON(data.json)\r\n        firstTime=false\r\n      }\r\n    }\r\n  })\r\n  socket.emit(`subscribeForFabric`, {drawingId})\r\n}\r\n\r\nconst saveChitr = ({drawingId, json})=>{\r\n  socket.emit(\"saveChitr\", {drawingId,json, key:token()})\r\n}\r\n\r\n\r\nexport {\r\n  // subscribeForDrawings,\r\n  createDrawing,\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  getDrawingById,\r\n  subscribeForDrawingsList,\r\n  subscribeForAllPublishLine,\r\n  deleteDrawing,\r\n  pullChange,\r\n  pushChange,\r\n  subscribeForFabric,\r\n  saveChitr\r\n};\r\n","import Circle from \"./checkbox-blank-circle-fill.svg\"\r\nimport Rect from \"./checkbox-blank-fill.svg\"\r\nimport Cursor from \"./cursor-fill.svg\"\r\nimport Remove from \"./delete-bin-2-fill.svg\"\r\nimport Download from  \"./download-cloud-2-fill.svg\"\r\nimport Erase from \"./eraser-fill.svg\"\r\nimport FontColor from \"./font-color.svg\"\r\nimport Lock from \"./lock-fill.svg\"\r\nimport Unlock from \"./lock-unlock-fill.svg\"\r\nimport Pencil from \"./pencil-fill.svg\"\r\nimport Text from \"./text.svg\"\r\nimport Save from \"./upload-cloud-2-fill.svg\"\r\nimport Fill from \"./fill.svg\"\r\n\r\nconst I = {Circle, Rect, Cursor, Remove, Download, Erase, FontColor,Fill,\r\nLock, Unlock, Pencil, Text, Save}\r\n\r\nexport default I","import React from \"react\"\r\nimport uuid from \"uuid-random\"\r\nimport { fabric } from \"fabric\";\r\nimport {pushChange,saveChitr} from \"../../api\"\r\nimport I from \"../ico/\"\r\nimport { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst did = window.location.href.split(\"/\").pop()\r\nconst shapeAdd = {\r\n    addMain:(shape)=>{\r\n        let {canvas} = document;\r\n        pushChange(did, {...shape.toJSON(['id']), cmd:\"add\"})\r\n        canvas.add(shape)\r\n        canvas.renderAll()\r\n    },\r\n    addRect:function(){\r\n        let {canvas} = document;\r\n        let rect = new fabric.Rect({\r\n            top:100,\r\n            left:100,\r\n            width:100,\r\n            height:100,\r\n            fill:\"red\",\r\n            id:uuid()\r\n        })\r\n        this.addMain(rect)\r\n    },\r\n\r\n    addCircle:function(){\r\n        let {canvas} = document;\r\n        let circ = new fabric.Circle({\r\n            top:100,\r\n            left:100,\r\n            radius:50,\r\n            fill:\"blue\",\r\n            id:uuid()\r\n        })\r\n        this.addMain(circ)\r\n    },\r\n    addText:function(){\r\n        let text = new fabric.IText(\"Enter Text\", {top:100, left:100,id:uuid()})\r\n        text.on(\"changed\", (e)=>{\r\n            let id = text.id;\r\n            pushChange(did, {text:text.text, id, cmd:\"text\"})\r\n        })\r\n        this.addMain(text)\r\n    },\r\n    addDraw:function({setDraw}){\r\n        let {canvas} = document;\r\n        setDraw(k=>!k)\r\n        canvas.isDrawingMode = !canvas.isDrawingMode\r\n    },\r\n    delete:function(){\r\n        let {canvas} = document;\r\n        let now = canvas.getActiveObject();\r\n        if(now){\r\n            pushChange(did, {id:now.id, cmd:\"delete\"})\r\n            canvas.remove(now);\r\n            canvas.renderAll()\r\n        }\r\n    \r\n    }\r\n}\r\n\r\n\r\nfunction ToolBar({isAuth}){\r\n    const [isDraw, setDraw] = useState(false);\r\n    const colorRef = useRef()\r\n    return  <div className=\"ToolBar\" >\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addRect()}>\r\n        <img src={I.Rect}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addCircle()}>\r\n        <img src={I.Circle}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addText()}>\r\n    <img src={I.Text}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.addDraw({setDraw:(e)=>setDraw(e)})}>\r\n    <img src={!isDraw?I.Pencil:I.Cursor}/>\r\n    </div>\r\n    {isDraw&& <div className=\"Tab\" onClick={()=>{}}>\r\n    <img src={I.Erase}/>\r\n    </div>}\r\n    <div className=\"Tab\" onClick={()=>shapeAdd.delete({setDraw:(e)=>setDraw(e)})}>\r\n    <img src={I.Remove}/>\r\n    </div>\r\n    <div className=\"Tab\" onClick={()=>{\r\n        colorRef.current.click()\r\n    }}>\r\n    <img src={I.Fill}/>\r\n    <input ref={colorRef} style={{width:\"0px\",height:\"0px\",border:\"0px\", opacity:\"0\"}} type=\"color\" onChange={(e)=>{\r\n        let {canvas} = document;\r\n        if(canvas){\r\n            let now = canvas.getActiveObject();\r\n            if(now){\r\n                now.set({fill:e.target.value})\r\n                \r\n                pushChange(did, {id:now.id, fill:e.target.value, cmd:\"modified\"})\r\n            }else{\r\n                canvas.set({backgroundColor:e.target.value})\r\n                pushChange(did, {fill:e.target.value, cmd:\"changeCanvasColor\"})\r\n            }\r\n            canvas.renderAll()\r\n        }\r\n    }} />\r\n    </div>\r\n\r\n\r\n{isAuth&&\r\n    <div className=\"Tab\" onClick={()=>{\r\n        saveChitr({drawingId:did, json:document.canvas.toJSON(['id'])})\r\n    }}>\r\n    <img src={I.Save}/>\r\n    </div>}\r\n\r\n    <div className=\"Tab\" onClick={function(){\r\n            let a = document.createElement(\"a\");\r\n            a.href = document.canvas.toDataURL({\r\n                format: 'jpeg',\r\n                quality: 1.0\r\n            });\r\n            a.download = 'canvas.png'\r\n            a.click()\r\n    }}>\r\n    <img src={I.Download}/>\r\n    </div>\r\n\r\n\r\n    \r\n\r\n</div>\r\n}\r\n\r\nexport default ToolBar","\r\nimport { fabric } from \"fabric\";\r\nimport \"./index.css\"\r\nimport React, {useRef, useEffect} from \"react\"\r\nimport uuid from \"uuid-random\"\r\nimport {pushChange,pullChange,subscribeForFabric} from \"../../api\"\r\nimport ToolBar from \"./ToolBar\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\"\r\nconst {log} = console\r\n\r\nconst did = window.location.href.split(\"/\").pop()\r\n\r\nfunction NewCanvas(){\r\n    let _width = document.body.clientWidth\r\n    let _height = document.body.clientHeight\r\n    let height =()=> _width>_height?_height:_width/1.7777777;\r\n    let width =()=> _width>_height?_height*1.77777777:_width;\r\n    const cvs = useRef();\r\n\r\n    const [isAuth, setAuth] = useState(false);\r\n    const [isValid, setValid] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        let canvas = new fabric.Canvas(cvs.current,{\r\n            // width:width()*0.9,\r\n            // height:height()*0.9\r\n            width:640,\r\n            height:640/1.7777,\r\n            backgroundColor:\"white\"\r\n        });\r\n        document.canvas = canvas\r\n        subscribeForFabric(did, ()=>{})\r\n\r\n        // canvas.on(\"object:modified\",(e)=>{\r\n        //     pushChange(did, {...e.target.toJSON(['id']), cmd:\"modified\"})\r\n        // })\r\n\r\n        canvas.on(\"object:moving\", (e)=>{\r\n            let {top, left, id} = e.target.toJSON(['id'])\r\n            pushChange(did, { id, top,left, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"object:scaling\", (e)=>{\r\n            let {scaleX, scaleY,top,left ,id} = e.target.toJSON(['id'])\r\n            pushChange(did, { scaleX,top,left, scaleY,id, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"object:rotating\", (e)=>{\r\n            let {angle,top, left ,id} = e.target.toJSON(['id'])\r\n            pushChange(did, { angle,id,top, left, cmd:\"modified\"})\r\n        })\r\n        canvas.on(\"path:created\", (e)=>{\r\n            e.path.set({id:uuid()})\r\n            log(e.path)            \r\n            pushChange(did, { ...e.path.toJSON(['id']),cmd:\"add\"})\r\n        })\r\n\r\n\r\n        pullChange(did, (get)=>{\r\n            log(get)\r\n\r\n            if(get.cmd===\"add\"){\r\n                if(get.type==\"rect\"){\r\n                canvas.add(new fabric.Rect(get))\r\n                }\r\n                else if(get.type===\"circle\"){\r\n                    canvas.add(new fabric.Circle(get))\r\n                }\r\n                else if(get.type===\"i-text\"){\r\n                    canvas.add(new fabric.IText(get.text,get))\r\n                }\r\n                else if(get.type===\"path\"){\r\n                    canvas.add(new fabric.Path(get.path, get))\r\n                }\r\n            }\r\n            else if(get.cmd===\"modified\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        e.set(get)\r\n                    }\r\n                })\r\n            }\r\n            else if(get.cmd===\"text\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        e.set({text:get.text})\r\n                    }\r\n                })\r\n            }\r\n            else if(get.cmd===\"delete\"){\r\n                canvas._objects.forEach(e=>{\r\n                    if(e.id==get.id){\r\n                        canvas.remove(e)\r\n                    }\r\n                })\r\n            }\r\n            else if(get.cmd===\"changeCanvasColor\"){\r\n                canvas.set({backgroundColor:get.fill})\r\n            }\r\n            canvas.renderAll()\r\n            \r\n        })\r\n\r\n\r\n \r\n       \r\n        \r\n\r\n        // let _text = new fabric.IText(\"Here is Tex\", {top:100, left:100, width:100})\r\n        // let _box = new fabric.Rect({top:100, left:100, width:100,height:50, fill:\"grey\"})\r\n        // let _group = new fabric.Group([_text, _box], {top:200, left:200});\r\n        // canvas.add(_group)\r\n        // canvas.renderAll()\r\n\r\n        // window.onload = window.onresize=()=>{\r\n        // _width = document.body.clientWidth\r\n        //  _height = document.body.clientHeight\r\n        //  height =()=> _width>_height?_height:_width/1.7777777;\r\n        //  width =()=> _width>_height?_height*1.77777777:_width;\r\n        //     log({width:width(), height:height()})\r\n        //     canvas.setDimensions({width:width()*0.9, height:height()*0.9})\r\n        //     canvas.renderAll()\r\n        // }\r\n        axios\r\n        .post(`/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n        .then((e) => {\r\n          const { data } = e;\r\n          if (data.success) {\r\n  \r\n            setAuth(true)\r\n          } else {\r\n            setAuth(false)\r\n          }\r\n        });\r\n\r\n        // axios.post(`/drawing/get`, { id:did }).then((e) => {\r\n        //     const {data} = e\r\n        //     log(data)\r\n        //     if (data.success) {\r\n        //       setValid(true)\r\n        //       document.title = `${data.name} - Chitr`;\r\n        //     } else {\r\n        //       setValid(false)\r\n        //     }\r\n        //   });\r\n       \r\n    },[])\r\n    return <div className=\"NewCanvas\" >\r\n        \r\n      \r\n        <ToolBar isAuth={isAuth}/>\r\n        <canvas  id=\"_newCanvas\" ref={cvs}></canvas>\r\n   \r\n      \r\n    </div>\r\n}\r\n\r\nexport default NewCanvas;","import React, { Component } from \"react\";\r\nclass Canvas extends Component {\r\n  state = {\r\n    lastLength: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const canvas = this.node;\r\n    canvas.addEventListener(\"touchstart\", this.handleOnTouchDown, false);\r\n    canvas.addEventListener(\"touchmove\", this.handleOnTouchMove, false);\r\n    canvas.addEventListener(\"touchend\", this.handleOnTouchUp, false);\r\n    canvas.style.width = \"100%\";\r\n    canvas.style.height = \"100%\";\r\n    canvas.width = canvas.offsetWidth;\r\n    canvas.height = canvas.offsetHeight;\r\n    this.ctx = canvas.getContext(\"2d\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //   log({nextProps})\r\n    //todo: find a better way to see if a coordinate has been applied\r\n    if (nextProps.lines && nextProps.lines.length > this.state.lastLength) {\r\n      for (let i = this.state.lastLength; i < nextProps.lines.length; i += 1) {\r\n        // console.log('looping through lines ', i);\r\n        const l = nextProps.lines[i];\r\n        this.draw(l.from.x, l.from.y, l.to.x, l.to.y);\r\n      }\r\n\r\n      this.update();\r\n\r\n      this.setState({\r\n        lastLength: nextProps.lines.length,\r\n      });\r\n    }\r\n  }\r\n\r\n  update() {\r\n    this.ctx.stroke();\r\n  }\r\n\r\n  draw(lX, lY, cX, cY) {\r\n    this.ctx.strokeStyle = this.props.brushColor;\r\n    this.ctx.lineWidth = this.props.lineWidth;\r\n    this.ctx.moveTo(lX, lY);\r\n    this.ctx.lineTo(cX, cY);\r\n  }\r\n\r\n  handleOnMouseDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = e.clientX - rect.left;\r\n    this.lastY = e.clientY - rect.top;\r\n    this.drawing = true;\r\n  };\r\n\r\n  handleOnMouseMove = (e) => {\r\n    if (this.drawing) {\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = e.clientX - rect.left;\r\n      const currentY = e.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n  };\r\n\r\n  handleonMouseUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  handleOnTouchDown = (e) => {\r\n    if (!this.props.drawingEnabled) {\r\n      return;\r\n    }\r\n    const {\r\n      touches: [a],\r\n    } = e;\r\n    const rect = this.node.getBoundingClientRect();\r\n    this.ctx.beginPath();\r\n\r\n    this.lastX = a.clientX - rect.left;\r\n    this.lastY = a.clientY - rect.top;\r\n    this.drawing = true;\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleOnTouchMove = (e) => {\r\n    if (this.drawing) {\r\n      const {\r\n        touches: [a],\r\n      } = e;\r\n      const rect = this.node.getBoundingClientRect();\r\n      const currentX = a.clientX - rect.left;\r\n      const currentY = a.clientY - rect.top;\r\n\r\n      this.draw(this.lastX, this.lastY, currentX, currentY);\r\n      this.update();\r\n\r\n      if (this.props.onDraw) {\r\n        this.props.onDraw({\r\n          from: {\r\n            x: this.lastX,\r\n            y: this.lastY,\r\n          },\r\n          to: {\r\n            x: currentX,\r\n            y: currentY,\r\n          },\r\n          brushColor: this.props.brushColor,\r\n          linewidth: this.props.lineWidth,\r\n        });\r\n      }\r\n\r\n      this.lastX = currentX;\r\n      this.lastY = currentY;\r\n    }\r\n    e.preventDefault();\r\n  };\r\n  handleOnTouchUp = () => {\r\n    this.drawing = false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <canvas\r\n        ref={(node) => (this.node = node)}\r\n        style={this.props.canvasStyle}\r\n        onMouseDown={this.handleOnMouseDown}\r\n        onMouseMove={this.handleOnMouseMove}\r\n        onMouseUp={this.handleonMouseUp}\r\n\r\n        // onTouchStart={this.handleOnTouchDown}\r\n        // onTouchMove={this.handleOnMouseMove}\r\n        // onTouchEnd={this.handleonMouseUp}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCanvas.defaultProps = {\r\n  brushColor: \"#000000\",\r\n  lineWidth: 2,\r\n  canvasStyle: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    cursor: \"pointer\",\r\n  },\r\n  drawingEnabled: false,\r\n  lines: [],\r\n};\r\n\r\nexport default Canvas;\r\n","\r\nimport React from \"react\";\r\nconst NavBar = ({ title, btn, color }) => {\r\n  return (\r\n    <div\r\n      style={{ background: color && \"none\" }}\r\n      className=\"NavBar d-flex align-items-center justify-content-around p-1\"\r\n    >\r\n      <h1 className=\"text-light display-3 float-left\">{title}</h1>\r\n      <div className=\"d-flex align-items-center justify-content-around p-1\">\r\n        {btn?.map((e) => {\r\n          return e;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component} from \"react\";\r\nimport Canvas from \"./Canvas\";\r\nimport {\r\n  publishLine,\r\n  subscribeForPublishLine,\r\n  subscribeForAllPublishLine,\r\n} from \"../api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./core.css\";\r\n\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst { log } = console;\r\nexport default class Drawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lines: [],\r\n      info: { name: \"\" },\r\n      brushColor: \"black\",\r\n      name: \"Loading....\",\r\n      isFound: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // log(this.props)\r\n    const id = window.location.href.split(\"/\").pop();\r\n    log(id);\r\n    axios.post(`${URL}/drawing/get`, { id }).then((e) => {\r\n      const { data } = e;\r\n      log(data);\r\n      if (data.success) {\r\n        this.setState({ isFound: true, name: data.name });\r\n        // log(data)\r\n        document.title = `${data.name} - Chitr`;\r\n      } else {\r\n        this.setState({ name: \"NOT FOUND\" });\r\n      }\r\n    });\r\n\r\n    subscribeForAllPublishLine(this.props.drawingId, (lineEvt) => {\r\n      // log(lineEvt)\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n\r\n    subscribeForPublishLine(this.props.drawingId, (lineEvt) => {\r\n      this.setState((prev) => {\r\n        return { lines: [...prev.lines, ...lineEvt.lines] };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleDraw = (line) => {\r\n    // log(line)\r\n    publishLine({ drawingId: this.props.drawingId, ...line });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <h1>{this.state.name}</h1> */}\r\n        {NavBar({\r\n          title: this.state.name,\r\n          btn: [\r\n            <Link to=\"/dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>,\r\n          ],\r\n        })}\r\n        {this.state.isFound ? (\r\n          <div className=\"Drawing\">\r\n            {/* <ColorBox onClick={color=>{this.setState({brushColor:color})}}/> */}\r\n            <Canvas\r\n              brushColor={this.state.brushColor}\r\n              onDraw={this.handleDraw}\r\n              drawingEnabled={true}\r\n              lines={this.state.lines}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Canvas.defaultProps = {\r\n//     brushColor: '#000000',\r\n//     lineWidth: 2,\r\n//     canvasStyle: {\r\n//       backgroundColor: '#FFFFFF',\r\n//       cursor: 'pointer'\r\n//     },\r\n//     drawingEnabled: false,\r\n//     lines: []\r\n//   };\r\n","import React, { Component } from \"react\";\r\nimport pen from \"../pen.svg\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport URL from \"../URL\";\r\nimport NavBar from \"./NavBar\";\r\nimport \"./core.css\";\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      success: false\r\n    };\r\n  }\r\n  auth(type) {\r\n    // type : ['signin', 'signup']\r\n    const { email, password } = this.state;\r\n    axios.post(`${URL}/auth/${type}`, { email, password }).then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        localStorage.setItem(\"id\", btoa(data.id))\r\n        // this.setState({ success: true });\r\n        window.location.pathname = '/dashboard'\r\n        // console.log(data)\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth h-100\">\r\n        {NavBar({ title: \"Auth Page\", btn: [], color: true })}\r\n        <div className=\"container-fluid d-flex align-items-center\">\r\n          {this.state.success && <Redirect to=\"/dashboard\" />}\r\n          <form\r\n            className=\"from\"\r\n            style={{\r\n              width: \"100%\",\r\n              maxWidth: \"330px\",\r\n              padding: \"15px\",\r\n              margin: \"auto\"\r\n            }}\r\n            onSubmit={(e) => e.preventDefault()}\r\n          >\r\n            <img className=\"mb-4\" src={pen} alt=\"\" width=\"72\" height=\"72\" />\r\n            <h1 className=\"h3 mb-3 font-weight-normal text-light\">\r\n              Please sign in/up\r\n            </h1>\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ email: e.target.value })}\r\n              value={this.state.email}\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"inputEmail\"\r\n              className=\"form-control mb-2\"\r\n              placeholder=\"Email address\"\r\n              required\r\n              autoFocus\r\n            />\r\n\r\n            <input\r\n              onChange={(e) => this.setState({ password: e.target.value })}\r\n              value={this.state.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              id=\"inputPassword\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signin\")}\r\n              className=\"btn btn-lg btn-primary btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign in\r\n            </button>\r\n\r\n            <button\r\n              onClick={(e) => this.auth(\"signup\")}\r\n              className=\"btn btn-lg btn-info btn-block mt-2 ms-2 text-light\"\r\n              type=\"submit\"\r\n            >\r\n              Sign up\r\n            </button>\r\n            {/* <p classNameName=\"mt-5 mb-3 text-muted\">© 2017-2018</p> */}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Impress, Step } from \"react-impressjs\";\r\n\r\nexport default React.memo(function Present() {\r\n  return (\r\n    <div className=\"Present\">\r\n      <Impress>\r\n        <Step data={{ x: 0, y: 0 }}>\r\n        <h1 className=\"_2 \">What is Chitr?</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Drawing Collaboration Tool for RealTime Drawing! ✏</h1>\r\n          </h1>\r\n         \r\n        </Step>\r\n\r\n        <Step data={{ y: 1000, scale: 3 }}>\r\n          <h1 className=\"_2 \">Which Technology is used ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n          <h1>{\"=>\"} Mongo Express React Node - MERN</h1>\r\n          <h1>{\"=>\"} Socket.io - for Bidirectional communication between Server and Client</h1>\r\n          <h1>{\"=>\"} Impressjs - for this Presentation</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 1000, y: -1000, scale: 5, rotateX: 90, rotateY: 45 }}>\r\n        <h1 className=\"_2 \"> What are the Features ?</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Two or More user can draw at same time !</h1>\r\n            <h1>{\"=>\"} Use Very less Internet for  transferring the Data !</h1>\r\n            <h1>{\"=>\"} User Can Save as many drawings as user want !</h1>\r\n            <h1>{\"=>\"} Can Share Drawing to anyone to see and draw !</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{ x: 3000, y: 3000, scale: 1,z:1000, rotateX: 90, rotateY: -45,rotateZ:45}}>\r\n          <h1 className=\"_2\">Requirements</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h1>{\"=>\"} Server for backend hosting - replit.com</h1>\r\n            <h1>{\"=>\"} DataBase for Saving the Drawing and user auth - mongodb</h1>\r\n            <h1>{\"=>\"} Server for frontend hosting - github pages</h1>\r\n            <h1>{\"=>\"} Domain for website - name.com</h1>\r\n            <h1>{\"=>\"} Needs Lot of Time and Peace of Mind!</h1>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 3000, scale: 2,rotateX: 90, rotateY: 0, rotateZ:180 }}>\r\n          <h1 className=\"_2\">How it Works? - (Logic)</h1>\r\n          <h1 className=\"_1 _left\">\r\n            <h2>{\"=>\"}let, we have 2 users A and B! </h2>\r\n            <h2>{\"=>\"}When user A tries to draw then a Packet[coordination of line] is thrown to the server using socket. </h2>\r\n            <h2>{\"=>\"}After receiving the Packet , Server saves it and throws the Packet to all the connected drawings of the users using socket</h2>\r\n            <h2>{\"=>\"}After receiving the Packet at the client side or say user B , client re-renders it and canvas shows that a line is being drawn</h2>\r\n          </h1>\r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:1000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:180 }}>\r\n          <h1 className=\"_2\"> Source Code</h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraFront\">GulTion/chitraFront - Front End</a></h1>\r\n            <h1>{\"=>\"} <a target={\"_blank\"} href=\"https://github.com/GulTion/chitraBackend\">GulTion/chitraBackend - Back End</a></h1>\r\n        </Step>\r\n\r\n\r\n        <Step data={{x: 5000, y: 1000,z:2000, scale: 1,rotateX: 90, rotateY: 90, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Work done by</h1>\r\n          <h1 className=\"_1\">\r\n          <h1>Designer - Gulshan</h1>\r\n          <h1>FrontEnd Developer - Gulshan</h1>\r\n          <h1>BackEnd Developer - Gulshan</h1>\r\n          </h1>\r\n          \r\n        </Step>\r\n\r\n        <Step data={{x: 5000, y: 1000,z:3000, scale: 1,rotateX: 180, rotateY: 180, rotateZ:90 }}>\r\n          <h1 className=\"_2\">Let's GO</h1>\r\n        </Step>\r\n\r\n\r\n\r\n\r\n      </Impress>\r\n    </div>\r\n  );\r\n});\r\n","import { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\n\r\nimport \"./HomePage.css\";\r\nimport Present from \"./Present\";\r\n\r\nconst HomePage = () => {\r\n  const [l, setL] = useState(false);\r\n\r\n  axios\r\n    .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n    .then((e) => {\r\n      const { data } = e;\r\n      if (data.success) {\r\n        setL(true);\r\n      } else {\r\n        setL(false);\r\n      }\r\n    });\r\n  document.title = \"Chitr\";\r\n  return (\r\n    <div className={\"HomePage\"}>\r\n      {NavBar({\r\n        title: \"Chitr\",\r\n        btn: [\r\n          !l ? (\r\n            <Link to=\"auth\" className=\"btn\">\r\n              Log In\r\n            </Link>\r\n          ) : (\r\n            <button\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                localStorage.setItem(\"id\", \"\");\r\n                setL(false);\r\n              }}\r\n            >\r\n              Log Out\r\n            </button>\r\n          ),\r\n          l && (\r\n            <Link to=\"dashboard\" className=\"btn\">\r\n              dashBoard\r\n            </Link>\r\n          ),\r\n        ],\r\n      })}\r\n      <Present />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewAdder extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      value: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column justify-content-center NewAdder\">\r\n        <input\r\n          onBlur={(e) => this.setState({ value: e.target.value })}\r\n          type=\"text\"\r\n          placeholder=\"Enter Drawing Name\"\r\n        />\r\n        <div\r\n          className=\"btn btn-primary\"\r\n          onClick={(e) => {\r\n            this.props.onSave(this.state.value);\r\n            this.props.onClose();\r\n            this.setState({ value: \"\" });\r\n          }}\r\n        >\r\n          SAVE\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport {\r\n  subscribeForDrawingsList,\r\n  createDrawing,\r\n  deleteDrawing,\r\n} from \"../api\";\r\nimport axios from \"axios\";\r\nimport URL from \"../URL\";\r\nimport \"./core.css\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport NewAdder from \"./NewAdder\";\r\n\r\nconst { log } = console;\r\nexport default class DrawingList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawings: [],\r\n      temp: [],\r\n      key: \"\",\r\n      redirect: false,\r\n      query: \"\",\r\n      name: \"\",\r\n      isNew: false,\r\n      isAuth: true,\r\n      status: \"Loading ...\",\r\n    };\r\n  }\r\n\r\n  getDrawing() {\r\n    subscribeForDrawingsList((drawing) => {\r\n      log(\"getDrawing is running\");\r\n      this.setState((prev) => ({\r\n        drawings: drawing,\r\n        temp: drawing,\r\n        status: \"No Drawing Found !\",\r\n      }));\r\n    });\r\n  }\r\n  getAllList() {\r\n    axios\r\n      .post(`${URL}/drawing/all`, { id: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        log(e);\r\n        const {\r\n          data: { list },\r\n        } = e;\r\n        document.title = `${list.length} Drawings`;\r\n        this.setState((prev) => ({\r\n          drawings: list,\r\n          temp: list,\r\n          status: \"No Drawing Found !\",\r\n        }));\r\n      });\r\n  }\r\n\r\n  componentWillMount() {\r\n    axios\r\n      .post(`${URL}/auth/check`, { key: atob(localStorage.getItem(\"id\")) })\r\n      .then((e) => {\r\n        const { data } = e;\r\n        if (data.success) {\r\n\r\n          this.getAllList();\r\n        } else {\r\n          this.setState({ isAuth: false });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteDrawing({ id }) {\r\n    deleteDrawing(id, (k) => {\r\n      log(k);\r\n      this.getAllList();\r\n    });\r\n  }\r\n  DrawingElement({ drawing }) {\r\n    return (\r\n      <div className=\"drawingCard card m-1 w-auto shadow-sm \" key={drawing._id}>\r\n        {this.state.redirect && <Redirect to=\"/auth\" />}\r\n        <div className=\"card-body \">\r\n          <h5 className=\"card-title\">{drawing.name}</h5>\r\n          <div className=\"d-flex flex-row justify-content-center\">\r\n\r\n        \r\n          <Link\r\n            className=\"card-text btn btn-info text-light\"\r\n            to={`/drawings/${drawing._id}`}\r\n          >\r\n            {\"Draw\"}\r\n          </Link>\r\n          <button\r\n            onClick={(e) => this.deleteDrawing({ id: drawing._id })}\r\n            className=\"btn btn-danger mx-1\"\r\n          >\r\n            DELETE\r\n          </button>\r\n          </div>\r\n        </div>\r\n        <h6 className=\"card-footer text-dimmed\">\r\n          {new Date(drawing.timestamp).toLocaleString()}\r\n        </h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const drawingList = this.state.temp.map((drawing) =>\r\n      this.DrawingElement({ drawing, getAllList: this.getAllList })\r\n    );\r\n\r\n    return (\r\n      <>\r\n        {NavBar({\r\n          title: \"DashBoard\",\r\n          btn: [\r\n            <Link to=\"/\" className=\"btn\">\r\n              {\"< Back\"}\r\n            </Link>,\r\n            <div\r\n              className={\"btn\"}\r\n              onClick={async () => {\r\n                this.setState({ isNew: true });\r\n              }}\r\n            >\r\n              + NEW\r\n            </div>,\r\n          ],\r\n          color: true,\r\n        })}\r\n        <Popup\r\n          onClose={() => this.setState({ isNew: false })}\r\n          open={this.state.isNew}\r\n        >\r\n          <NewAdder\r\n            onClose={() => this.setState({ isNew: false })}\r\n            onSave={async (name) => {\r\n              await new Promise((res, rej) => {\r\n                createDrawing({ name, key: \"\" });\r\n                res();\r\n              });\r\n              await this.getAllList();\r\n            }}\r\n          />\r\n        </Popup>\r\n        <div>\r\n          {this.state.isAuth ? null : <Redirect to=\"/auth\" />}\r\n\r\n          <div className=\"container mb-2 form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"floatingInputGrid\"\r\n              placeholder=\"Search\"\r\n              value={this.state.query}\r\n              onChange={(e) => {\r\n                const { value } = e.target;\r\n                this.setState({\r\n                  query: value,\r\n                  temp: this.state.drawings.filter(\r\n                    (d) => d.name.toLowerCase().indexOf(value) !== -1\r\n                  ),\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-wrap container justify-content-center DrawingList\">\r\n            {drawingList.length ? (\r\n              drawingList\r\n            ) : (\r\n              <h1 className=\"text-white\">{this.state.status}</h1>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DrawingList from \"./DrawingList\";\r\nimport \"./core.css\";\r\n\r\n\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"DashBoard container-fluid\">\r\n        <DrawingList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashBoard;\r\n","const initalState = {\r\n    key:\"\"\r\n}\r\nconst authReducer = (state = initalState, action) => {\r\n\r\n    switch (action.type) {\r\n      \r\n      default: return state;\r\n    }\r\n\r\n}\r\n\r\n  export default authReducer","import {subscribeForDrawingsList} from \"../api\"\r\n\r\nconst {log} = console\r\n\r\nconst initState = {\r\n    list:[]\r\n\r\n}\r\n\r\nconst drawingReducer = (state=initState, action)=>{\r\n\r\n    switch(action.type){\r\n        case 'GET_DRAWING_LIST':\r\n            return new Promise((res, rej)=>{\r\n                subscribeForDrawingsList((drawing) => {\r\n                    log('GET_DRAWING_LIST '+drawing.length);\r\n                    log(state.list)\r\n                   res( {...state, list:drawing})\r\n                    \r\n                })\r\n            })\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default drawingReducer","import {combineReducers} from \"redux\"\r\nimport auth from \"./authReducer\"\r\nimport drawing from \"./drawingReducer\"\r\n\r\nexport default combineReducers({auth,drawing})","import {createStore,applyMiddleware} from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./index\"\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\nexport default store;","export default {\r\n    TITLE:\"LineDraw\"\r\n}","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nimport NewCanvas from \"./components/newCanvas/\";\r\n\r\nimport Drawing from \"./components/Drawing\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport DashBoard from \"./components/DashBoard\";\r\n\r\nimport store from \"./Reducer/store\";\r\n\r\nimport db from \"./db\";\r\n\r\nconst { log } = console;\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDrawing: { id: \"\", name: \"\" },\r\n      title: db.TITLE,\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ title: db.TITLE });\r\n    log(store.getState());\r\n  }\r\n\r\n  selectDrawing = (drawing) => {\r\n    this.setState({ selectedDrawing: drawing });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n              <DashBoard />\r\n            </Route>\r\n            <Route path=\"/auth\">\r\n              <Auth />\r\n            </Route>\r\n\r\n            <Route\r\n              path=\"/drawings/:drawingId\"\r\n              render={(e) => {\r\n                return (\r\n                  <>\r\n                    {/* <h1>{this.state.selectedDrawing.name}</h1> */}\r\n                    <Drawing\r\n                      drawingId={e.match.params.drawingId}\r\n                      drawing={this.state.selectedDrawing}\r\n                    />\r\n                  </>\r\n                );\r\n              }}\r\n            ></Route>\r\n\r\n            {/* <Route\r\n              path=\"/new/drawings/:drawingId\"\r\n              render={(e) => (\r\n                <ExcaliDraw drawingId={e.match.params.drawingId} />\r\n              )}\r\n            ></Route> */}\r\n\r\n            <Route  path=\"/new/drawings/:drawingId\" render={(e) => (\r\n                <NewCanvas drawingId={e.match.params.drawingId} />\r\n              )}>\r\n            \r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}